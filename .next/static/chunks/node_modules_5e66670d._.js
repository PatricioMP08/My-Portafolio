(globalThis.TURBOPACK || (globalThis.TURBOPACK = [])).push([typeof document === "object" ? document.currentScript : undefined,
"[project]/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
"production" !== ("TURBOPACK compile-time value", "development") && function() {
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            case REACT_ACTIVITY_TYPE:
                return "Activity";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_CONTEXT_TYPE:
                return type.displayName || "Context";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        try {
            testStringCoercion(value);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        if (JSCompiler_inline_result) {
            JSCompiler_inline_result = console;
            var JSCompiler_temp_const = JSCompiler_inline_result.error;
            var JSCompiler_inline_result$jscomp$0 = "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            JSCompiler_temp_const.call(JSCompiler_inline_result, "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", JSCompiler_inline_result$jscomp$0);
            return testStringCoercion(value);
        }
    }
    function getTaskName(type) {
        if (type === REACT_FRAGMENT_TYPE) return "<>";
        if ("object" === typeof type && null !== type && type.$$typeof === REACT_LAZY_TYPE) return "<...>";
        try {
            var name = getComponentNameFromType(type);
            return name ? "<" + name + ">" : "<...>";
        } catch (x) {
            return "<...>";
        }
    }
    function getOwner() {
        var dispatcher = ReactSharedInternals.A;
        return null === dispatcher ? null : dispatcher.getOwner();
    }
    function UnknownOwner() {
        return Error("react-stack-top-frame");
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return !1;
        }
        return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        function warnAboutAccessingKey() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)", displayName));
        }
        warnAboutAccessingKey.isReactWarning = !0;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
        });
    }
    function elementRefGetterWithDeprecationWarning() {
        var componentName = getComponentNameFromType(this.type);
        didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error("Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."));
        componentName = this.props.ref;
        return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, props, owner, debugStack, debugTask) {
        var refProp = props.ref;
        type = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            props: props,
            _owner: owner
        };
        null !== (void 0 !== refProp ? refProp : null) ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
        }) : Object.defineProperty(type, "ref", {
            enumerable: !1,
            value: null
        });
        type._store = {};
        Object.defineProperty(type._store, "validated", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: 0
        });
        Object.defineProperty(type, "_debugInfo", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: null
        });
        Object.defineProperty(type, "_debugStack", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugStack
        });
        Object.defineProperty(type, "_debugTask", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugTask
        });
        Object.freeze && (Object.freeze(type.props), Object.freeze(type));
        return type;
    }
    function jsxDEVImpl(type, config, maybeKey, isStaticChildren, debugStack, debugTask) {
        var children = config.children;
        if (void 0 !== children) if (isStaticChildren) if (isArrayImpl(children)) {
            for(isStaticChildren = 0; isStaticChildren < children.length; isStaticChildren++)validateChildKeys(children[isStaticChildren]);
            Object.freeze && Object.freeze(children);
        } else console.error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
        else validateChildKeys(children);
        if (hasOwnProperty.call(config, "key")) {
            children = getComponentNameFromType(type);
            var keys = Object.keys(config).filter(function(k) {
                return "key" !== k;
            });
            isStaticChildren = 0 < keys.length ? "{key: someKey, " + keys.join(": ..., ") + ": ...}" : "{key: someKey}";
            didWarnAboutKeySpread[children + isStaticChildren] || (keys = 0 < keys.length ? "{" + keys.join(": ..., ") + ": ...}" : "{}", console.error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', isStaticChildren, children, keys, children), didWarnAboutKeySpread[children + isStaticChildren] = !0);
        }
        children = null;
        void 0 !== maybeKey && (checkKeyStringCoercion(maybeKey), children = "" + maybeKey);
        hasValidKey(config) && (checkKeyStringCoercion(config.key), children = "" + config.key);
        if ("key" in config) {
            maybeKey = {};
            for(var propName in config)"key" !== propName && (maybeKey[propName] = config[propName]);
        } else maybeKey = config;
        children && defineKeyPropWarningGetter(maybeKey, "function" === typeof type ? type.displayName || type.name || "Unknown" : type);
        return ReactElement(type, children, maybeKey, getOwner(), debugStack, debugTask);
    }
    function validateChildKeys(node) {
        "object" === typeof node && null !== node && node.$$typeof === REACT_ELEMENT_TYPE && node._store && (node._store.validated = 1);
    }
    var React = __turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"), REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_ACTIVITY_TYPE = Symbol.for("react.activity"), REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, hasOwnProperty = Object.prototype.hasOwnProperty, isArrayImpl = Array.isArray, createTask = console.createTask ? console.createTask : function() {
        return null;
    };
    React = {
        react_stack_bottom_frame: function(callStackForError) {
            return callStackForError();
        }
    };
    var specialPropKeyWarningShown;
    var didWarnAboutElementRef = {};
    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(React, UnknownOwner)();
    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));
    var didWarnAboutKeySpread = {};
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsxDEV = function(type, config, maybeKey, isStaticChildren) {
        var trackActualOwner = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
        return jsxDEVImpl(type, config, maybeKey, isStaticChildren, trackActualOwner ? Error("react-stack-top-frame") : unknownOwnerDebugStack, trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask);
    };
}();
}),
"[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use strict';
if ("TURBOPACK compile-time falsy", 0) //TURBOPACK unreachable
;
else {
    module.exports = __turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js [app-client] (ecmascript)");
}
}),
"[project]/node_modules/next/dist/shared/lib/router/utils/querystring.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    assign: null,
    searchParamsToUrlQuery: null,
    urlQueryToSearchParams: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    assign: function() {
        return assign;
    },
    searchParamsToUrlQuery: function() {
        return searchParamsToUrlQuery;
    },
    urlQueryToSearchParams: function() {
        return urlQueryToSearchParams;
    }
});
function searchParamsToUrlQuery(searchParams) {
    const query = {};
    for (const [key, value] of searchParams.entries()){
        const existing = query[key];
        if (typeof existing === 'undefined') {
            query[key] = value;
        } else if (Array.isArray(existing)) {
            existing.push(value);
        } else {
            query[key] = [
                existing,
                value
            ];
        }
    }
    return query;
}
function stringifyUrlQueryParam(param) {
    if (typeof param === 'string') {
        return param;
    }
    if (typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {
        return String(param);
    } else {
        return '';
    }
}
function urlQueryToSearchParams(query) {
    const searchParams = new URLSearchParams();
    for (const [key, value] of Object.entries(query)){
        if (Array.isArray(value)) {
            for (const item of value){
                searchParams.append(key, stringifyUrlQueryParam(item));
            }
        } else {
            searchParams.set(key, stringifyUrlQueryParam(value));
        }
    }
    return searchParams;
}
function assign(target) {
    for(var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
        searchParamsList[_key - 1] = arguments[_key];
    }
    for (const searchParams of searchParamsList){
        for (const key of searchParams.keys()){
            target.delete(key);
        }
        for (const [key, value] of searchParams.entries()){
            target.append(key, value);
        }
    }
    return target;
} //# sourceMappingURL=querystring.js.map
}),
"[project]/node_modules/next/dist/shared/lib/router/utils/format-url.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

// Format function modified from nodejs
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    formatUrl: null,
    formatWithValidation: null,
    urlObjectKeys: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    formatUrl: function() {
        return formatUrl;
    },
    formatWithValidation: function() {
        return formatWithValidation;
    },
    urlObjectKeys: function() {
        return urlObjectKeys;
    }
});
const _interop_require_wildcard = __turbopack_context__.r("[project]/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-client] (ecmascript)");
const _querystring = /*#__PURE__*/ _interop_require_wildcard._(__turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/router/utils/querystring.js [app-client] (ecmascript)"));
const slashedProtocols = /https?|ftp|gopher|file/;
function formatUrl(urlObj) {
    let { auth, hostname } = urlObj;
    let protocol = urlObj.protocol || '';
    let pathname = urlObj.pathname || '';
    let hash = urlObj.hash || '';
    let query = urlObj.query || '';
    let host = false;
    auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';
    if (urlObj.host) {
        host = auth + urlObj.host;
    } else if (hostname) {
        host = auth + (~hostname.indexOf(':') ? "[" + hostname + "]" : hostname);
        if (urlObj.port) {
            host += ':' + urlObj.port;
        }
    }
    if (query && typeof query === 'object') {
        query = String(_querystring.urlQueryToSearchParams(query));
    }
    let search = urlObj.search || query && "?" + query || '';
    if (protocol && !protocol.endsWith(':')) protocol += ':';
    if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {
        host = '//' + (host || '');
        if (pathname && pathname[0] !== '/') pathname = '/' + pathname;
    } else if (!host) {
        host = '';
    }
    if (hash && hash[0] !== '#') hash = '#' + hash;
    if (search && search[0] !== '?') search = '?' + search;
    pathname = pathname.replace(/[?#]/g, encodeURIComponent);
    search = search.replace('#', '%23');
    return "" + protocol + host + pathname + search + hash;
}
const urlObjectKeys = [
    'auth',
    'hash',
    'host',
    'hostname',
    'href',
    'path',
    'pathname',
    'port',
    'protocol',
    'query',
    'search',
    'slashes'
];
function formatWithValidation(url) {
    if ("TURBOPACK compile-time truthy", 1) {
        if (url !== null && typeof url === 'object') {
            Object.keys(url).forEach((key)=>{
                if (!urlObjectKeys.includes(key)) {
                    console.warn("Unknown key passed via urlObject into url.format: " + key);
                }
            });
        }
    }
    return formatUrl(url);
} //# sourceMappingURL=format-url.js.map
}),
"[project]/node_modules/next/dist/client/use-merged-ref.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useMergedRef", {
    enumerable: true,
    get: function() {
        return useMergedRef;
    }
});
const _react = __turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
function useMergedRef(refA, refB) {
    const cleanupA = (0, _react.useRef)(null);
    const cleanupB = (0, _react.useRef)(null);
    // NOTE: In theory, we could skip the wrapping if only one of the refs is non-null.
    // (this happens often if the user doesn't pass a ref to Link/Form/Image)
    // But this can cause us to leak a cleanup-ref into user code (e.g. via `<Link legacyBehavior>`),
    // and the user might pass that ref into ref-merging library that doesn't support cleanup refs
    // (because it hasn't been updated for React 19)
    // which can then cause things to blow up, because a cleanup-returning ref gets called with `null`.
    // So in practice, it's safer to be defensive and always wrap the ref, even on React 19.
    return (0, _react.useCallback)((current)=>{
        if (current === null) {
            const cleanupFnA = cleanupA.current;
            if (cleanupFnA) {
                cleanupA.current = null;
                cleanupFnA();
            }
            const cleanupFnB = cleanupB.current;
            if (cleanupFnB) {
                cleanupB.current = null;
                cleanupFnB();
            }
        } else {
            if (refA) {
                cleanupA.current = applyRef(refA, current);
            }
            if (refB) {
                cleanupB.current = applyRef(refB, current);
            }
        }
    }, [
        refA,
        refB
    ]);
}
function applyRef(refA, current) {
    if (typeof refA === 'function') {
        const cleanup = refA(current);
        if (typeof cleanup === 'function') {
            return cleanup;
        } else {
            return ()=>refA(null);
        }
    } else {
        refA.current = current;
        return ()=>{
            refA.current = null;
        };
    }
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=use-merged-ref.js.map
}),
"[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    DecodeError: null,
    MiddlewareNotFoundError: null,
    MissingStaticPage: null,
    NormalizeError: null,
    PageNotFoundError: null,
    SP: null,
    ST: null,
    WEB_VITALS: null,
    execOnce: null,
    getDisplayName: null,
    getLocationOrigin: null,
    getURL: null,
    isAbsoluteUrl: null,
    isResSent: null,
    loadGetInitialProps: null,
    normalizeRepeatedSlashes: null,
    stringifyError: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    DecodeError: function() {
        return DecodeError;
    },
    MiddlewareNotFoundError: function() {
        return MiddlewareNotFoundError;
    },
    MissingStaticPage: function() {
        return MissingStaticPage;
    },
    NormalizeError: function() {
        return NormalizeError;
    },
    PageNotFoundError: function() {
        return PageNotFoundError;
    },
    SP: function() {
        return SP;
    },
    ST: function() {
        return ST;
    },
    WEB_VITALS: function() {
        return WEB_VITALS;
    },
    execOnce: function() {
        return execOnce;
    },
    getDisplayName: function() {
        return getDisplayName;
    },
    getLocationOrigin: function() {
        return getLocationOrigin;
    },
    getURL: function() {
        return getURL;
    },
    isAbsoluteUrl: function() {
        return isAbsoluteUrl;
    },
    isResSent: function() {
        return isResSent;
    },
    loadGetInitialProps: function() {
        return loadGetInitialProps;
    },
    normalizeRepeatedSlashes: function() {
        return normalizeRepeatedSlashes;
    },
    stringifyError: function() {
        return stringifyError;
    }
});
const WEB_VITALS = [
    'CLS',
    'FCP',
    'FID',
    'INP',
    'LCP',
    'TTFB'
];
function execOnce(fn) {
    let used = false;
    let result;
    return function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){
            args[_key] = arguments[_key];
        }
        if (!used) {
            used = true;
            result = fn(...args);
        }
        return result;
    };
}
// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1
// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3
const ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\d+\-.]*?:/;
const isAbsoluteUrl = (url)=>ABSOLUTE_URL_REGEX.test(url);
function getLocationOrigin() {
    const { protocol, hostname, port } = window.location;
    return protocol + "//" + hostname + (port ? ':' + port : '');
}
function getURL() {
    const { href } = window.location;
    const origin = getLocationOrigin();
    return href.substring(origin.length);
}
function getDisplayName(Component) {
    return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
}
function isResSent(res) {
    return res.finished || res.headersSent;
}
function normalizeRepeatedSlashes(url) {
    const urlParts = url.split('?');
    const urlNoQuery = urlParts[0];
    return urlNoQuery // first we replace any non-encoded backslashes with forward
    // then normalize repeated forward slashes
    .replace(/\\/g, '/').replace(/\/\/+/g, '/') + (urlParts[1] ? "?" + urlParts.slice(1).join('?') : '');
}
async function loadGetInitialProps(App, ctx) {
    if ("TURBOPACK compile-time truthy", 1) {
        var _App_prototype;
        if ((_App_prototype = App.prototype) == null ? void 0 : _App_prototype.getInitialProps) {
            const message = '"' + getDisplayName(App) + '.getInitialProps()" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';
            throw Object.defineProperty(new Error(message), "__NEXT_ERROR_CODE", {
                value: "E394",
                enumerable: false,
                configurable: true
            });
        }
    }
    // when called from _app `ctx` is nested in `ctx`
    const res = ctx.res || ctx.ctx && ctx.ctx.res;
    if (!App.getInitialProps) {
        if (ctx.ctx && ctx.Component) {
            // @ts-ignore pageProps default
            return {
                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)
            };
        }
        return {};
    }
    const props = await App.getInitialProps(ctx);
    if (res && isResSent(res)) {
        return props;
    }
    if (!props) {
        const message = '"' + getDisplayName(App) + '.getInitialProps()" should resolve to an object. But found "' + props + '" instead.';
        throw Object.defineProperty(new Error(message), "__NEXT_ERROR_CODE", {
            value: "E394",
            enumerable: false,
            configurable: true
        });
    }
    if ("TURBOPACK compile-time truthy", 1) {
        if (Object.keys(props).length === 0 && !ctx.ctx) {
            console.warn("" + getDisplayName(App) + " returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps");
        }
    }
    return props;
}
const SP = typeof performance !== 'undefined';
const ST = SP && [
    'mark',
    'measure',
    'getEntriesByName'
].every((method)=>typeof performance[method] === 'function');
class DecodeError extends Error {
}
class NormalizeError extends Error {
}
class PageNotFoundError extends Error {
    constructor(page){
        super();
        this.code = 'ENOENT';
        this.name = 'PageNotFoundError';
        this.message = "Cannot find module for page: " + page;
    }
}
class MissingStaticPage extends Error {
    constructor(page, message){
        super();
        this.message = "Failed to load static file for page: " + page + " " + message;
    }
}
class MiddlewareNotFoundError extends Error {
    constructor(){
        super();
        this.code = 'ENOENT';
        this.message = "Cannot find the middleware module";
    }
}
function stringifyError(error) {
    return JSON.stringify({
        message: error.message,
        stack: error.stack
    });
} //# sourceMappingURL=utils.js.map
}),
"[project]/node_modules/next/dist/shared/lib/router/utils/is-local-url.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "isLocalURL", {
    enumerable: true,
    get: function() {
        return isLocalURL;
    }
});
const _utils = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)");
const _hasbasepath = __turbopack_context__.r("[project]/node_modules/next/dist/client/has-base-path.js [app-client] (ecmascript)");
function isLocalURL(url) {
    // prevent a hydration mismatch on href for url with anchor refs
    if (!(0, _utils.isAbsoluteUrl)(url)) return true;
    try {
        // absolute urls can be local if they are on the same origin
        const locationOrigin = (0, _utils.getLocationOrigin)();
        const resolved = new URL(url, locationOrigin);
        return resolved.origin === locationOrigin && (0, _hasbasepath.hasBasePath)(resolved.pathname);
    } catch (_) {
        return false;
    }
} //# sourceMappingURL=is-local-url.js.map
}),
"[project]/node_modules/next/dist/shared/lib/utils/error-once.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "errorOnce", {
    enumerable: true,
    get: function() {
        return errorOnce;
    }
});
let errorOnce = (_)=>{};
if ("TURBOPACK compile-time truthy", 1) {
    const errors = new Set();
    errorOnce = (msg)=>{
        if (!errors.has(msg)) {
            console.error(msg);
        }
        errors.add(msg);
    };
} //# sourceMappingURL=error-once.js.map
}),
"[project]/node_modules/next/dist/client/app-dir/link.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    default: null,
    useLinkStatus: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    /**
 * A React component that extends the HTML `<a>` element to provide
 * [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)
 * and client-side navigation. This is the primary way to navigate between routes in Next.js.
 *
 * @remarks
 * - Prefetching is only enabled in production.
 *
 * @see https://nextjs.org/docs/app/api-reference/components/link
 */ default: function() {
        return LinkComponent;
    },
    useLinkStatus: function() {
        return useLinkStatus;
    }
});
const _interop_require_wildcard = __turbopack_context__.r("[project]/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-client] (ecmascript)");
const _jsxruntime = __turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_wildcard._(__turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const _formaturl = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/router/utils/format-url.js [app-client] (ecmascript)");
const _approutercontextsharedruntime = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/app-router-context.shared-runtime.js [app-client] (ecmascript)");
const _usemergedref = __turbopack_context__.r("[project]/node_modules/next/dist/client/use-merged-ref.js [app-client] (ecmascript)");
const _utils = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/utils.js [app-client] (ecmascript)");
const _addbasepath = __turbopack_context__.r("[project]/node_modules/next/dist/client/add-base-path.js [app-client] (ecmascript)");
const _warnonce = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/utils/warn-once.js [app-client] (ecmascript)");
const _links = __turbopack_context__.r("[project]/node_modules/next/dist/client/components/links.js [app-client] (ecmascript)");
const _islocalurl = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/router/utils/is-local-url.js [app-client] (ecmascript)");
const _approuterinstance = __turbopack_context__.r("[project]/node_modules/next/dist/client/components/app-router-instance.js [app-client] (ecmascript)");
const _erroronce = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/utils/error-once.js [app-client] (ecmascript)");
const _segmentcache = __turbopack_context__.r("[project]/node_modules/next/dist/client/components/segment-cache.js [app-client] (ecmascript)");
function isModifiedEvent(event) {
    const eventTarget = event.currentTarget;
    const target = eventTarget.getAttribute('target');
    return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download
    event.nativeEvent && event.nativeEvent.which === 2;
}
function linkClicked(e, href, as, linkInstanceRef, replace, scroll, onNavigate) {
    const { nodeName } = e.currentTarget;
    // anchors inside an svg have a lowercase nodeName
    const isAnchorNodeName = nodeName.toUpperCase() === 'A';
    if (isAnchorNodeName && isModifiedEvent(e) || e.currentTarget.hasAttribute('download')) {
        // ignore click for browser’s default behavior
        return;
    }
    if (!(0, _islocalurl.isLocalURL)(href)) {
        if (replace) {
            // browser default behavior does not replace the history state
            // so we need to do it manually
            e.preventDefault();
            location.replace(href);
        }
        // ignore click for browser’s default behavior
        return;
    }
    e.preventDefault();
    if (onNavigate) {
        let isDefaultPrevented = false;
        onNavigate({
            preventDefault: ()=>{
                isDefaultPrevented = true;
            }
        });
        if (isDefaultPrevented) {
            return;
        }
    }
    _react.default.startTransition(()=>{
        (0, _approuterinstance.dispatchNavigateAction)(as || href, replace ? 'replace' : 'push', scroll != null ? scroll : true, linkInstanceRef.current);
    });
}
function formatStringOrUrl(urlObjOrString) {
    if (typeof urlObjOrString === 'string') {
        return urlObjOrString;
    }
    return (0, _formaturl.formatUrl)(urlObjOrString);
}
function LinkComponent(props) {
    const [linkStatus, setOptimisticLinkStatus] = (0, _react.useOptimistic)(_links.IDLE_LINK_STATUS);
    let children;
    const linkInstanceRef = (0, _react.useRef)(null);
    const { href: hrefProp, as: asProp, children: childrenProp, prefetch: prefetchProp = null, passHref, replace, shallow, scroll, onClick, onMouseEnter: onMouseEnterProp, onTouchStart: onTouchStartProp, legacyBehavior = false, onNavigate, ref: forwardedRef, unstable_dynamicOnHover, ...restProps } = props;
    children = childrenProp;
    if (legacyBehavior && (typeof children === 'string' || typeof children === 'number')) {
        children = /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
            children: children
        });
    }
    const router = _react.default.useContext(_approutercontextsharedruntime.AppRouterContext);
    const prefetchEnabled = prefetchProp !== false;
    const fetchStrategy = prefetchProp !== false ? getFetchStrategyFromPrefetchProp(prefetchProp) : _segmentcache.FetchStrategy.PPR;
    if ("TURBOPACK compile-time truthy", 1) {
        function createPropError(args) {
            return Object.defineProperty(new Error("Failed prop type: The prop `" + args.key + "` expects a " + args.expected + " in `<Link>`, but got `" + args.actual + "` instead." + (typeof window !== 'undefined' ? "\nOpen your browser's console to view the Component stack trace." : '')), "__NEXT_ERROR_CODE", {
                value: "E319",
                enumerable: false,
                configurable: true
            });
        }
        // TypeScript trick for type-guarding:
        const requiredPropsGuard = {
            href: true
        };
        const requiredProps = Object.keys(requiredPropsGuard);
        requiredProps.forEach((key)=>{
            if (key === 'href') {
                if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {
                    throw createPropError({
                        key,
                        expected: '`string` or `object`',
                        actual: props[key] === null ? 'null' : typeof props[key]
                    });
                }
            } else {
                // TypeScript trick for type-guarding:
                // eslint-disable-next-line @typescript-eslint/no-unused-vars
                const _ = key;
            }
        });
        // TypeScript trick for type-guarding:
        const optionalPropsGuard = {
            as: true,
            replace: true,
            scroll: true,
            shallow: true,
            passHref: true,
            prefetch: true,
            unstable_dynamicOnHover: true,
            onClick: true,
            onMouseEnter: true,
            onTouchStart: true,
            legacyBehavior: true,
            onNavigate: true
        };
        const optionalProps = Object.keys(optionalPropsGuard);
        optionalProps.forEach((key)=>{
            const valType = typeof props[key];
            if (key === 'as') {
                if (props[key] && valType !== 'string' && valType !== 'object') {
                    throw createPropError({
                        key,
                        expected: '`string` or `object`',
                        actual: valType
                    });
                }
            } else if (key === 'onClick' || key === 'onMouseEnter' || key === 'onTouchStart' || key === 'onNavigate') {
                if (props[key] && valType !== 'function') {
                    throw createPropError({
                        key,
                        expected: '`function`',
                        actual: valType
                    });
                }
            } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'legacyBehavior' || key === 'unstable_dynamicOnHover') {
                if (props[key] != null && valType !== 'boolean') {
                    throw createPropError({
                        key,
                        expected: '`boolean`',
                        actual: valType
                    });
                }
            } else if (key === 'prefetch') {
                if (props[key] != null && valType !== 'boolean' && props[key] !== 'auto' && props[key] !== 'unstable_forceStale') {
                    throw createPropError({
                        key,
                        expected: '`boolean | "auto" | "unstable_forceStale"`',
                        actual: valType
                    });
                }
            } else {
                // TypeScript trick for type-guarding:
                // eslint-disable-next-line @typescript-eslint/no-unused-vars
                const _ = key;
            }
        });
    }
    if ("TURBOPACK compile-time truthy", 1) {
        if (props.locale) {
            (0, _warnonce.warnOnce)('The `locale` prop is not supported in `next/link` while using the `app` router. Read more about app router internalization: https://nextjs.org/docs/app/building-your-application/routing/internationalization');
        }
        if (!asProp) {
            let href;
            if (typeof hrefProp === 'string') {
                href = hrefProp;
            } else if (typeof hrefProp === 'object' && typeof hrefProp.pathname === 'string') {
                href = hrefProp.pathname;
            }
            if (href) {
                const hasDynamicSegment = href.split('/').some((segment)=>segment.startsWith('[') && segment.endsWith(']'));
                if (hasDynamicSegment) {
                    throw Object.defineProperty(new Error("Dynamic href `" + href + "` found in <Link> while using the `/app` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href"), "__NEXT_ERROR_CODE", {
                        value: "E267",
                        enumerable: false,
                        configurable: true
                    });
                }
            }
        }
    }
    const { href, as } = _react.default.useMemo({
        "LinkComponent.useMemo": ()=>{
            const resolvedHref = formatStringOrUrl(hrefProp);
            return {
                href: resolvedHref,
                as: asProp ? formatStringOrUrl(asProp) : resolvedHref
            };
        }
    }["LinkComponent.useMemo"], [
        hrefProp,
        asProp
    ]);
    // This will return the first child, if multiple are provided it will throw an error
    let child;
    if (legacyBehavior) {
        if ("TURBOPACK compile-time truthy", 1) {
            if (onClick) {
                console.warn('"onClick" was passed to <Link> with `href` of `' + hrefProp + '` but "legacyBehavior" was set. The legacy behavior requires onClick be set on the child of next/link');
            }
            if (onMouseEnterProp) {
                console.warn('"onMouseEnter" was passed to <Link> with `href` of `' + hrefProp + '` but "legacyBehavior" was set. The legacy behavior requires onMouseEnter be set on the child of next/link');
            }
            try {
                child = _react.default.Children.only(children);
            } catch (err) {
                if (!children) {
                    throw Object.defineProperty(new Error("No children were passed to <Link> with `href` of `" + hrefProp + "` but one child is required https://nextjs.org/docs/messages/link-no-children"), "__NEXT_ERROR_CODE", {
                        value: "E320",
                        enumerable: false,
                        configurable: true
                    });
                }
                throw Object.defineProperty(new Error("Multiple children were passed to <Link> with `href` of `" + hrefProp + "` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children" + (typeof window !== 'undefined' ? " \nOpen your browser's console to view the Component stack trace." : '')), "__NEXT_ERROR_CODE", {
                    value: "E266",
                    enumerable: false,
                    configurable: true
                });
            }
        } else //TURBOPACK unreachable
        ;
    } else {
        if ("TURBOPACK compile-time truthy", 1) {
            if ((children == null ? void 0 : children.type) === 'a') {
                throw Object.defineProperty(new Error('Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'), "__NEXT_ERROR_CODE", {
                    value: "E209",
                    enumerable: false,
                    configurable: true
                });
            }
        }
    }
    const childRef = legacyBehavior ? child && typeof child === 'object' && child.ref : forwardedRef;
    // Use a callback ref to attach an IntersectionObserver to the anchor tag on
    // mount. In the future we will also use this to keep track of all the
    // currently mounted <Link> instances, e.g. so we can re-prefetch them after
    // a revalidation or refresh.
    const observeLinkVisibilityOnMount = _react.default.useCallback({
        "LinkComponent.useCallback[observeLinkVisibilityOnMount]": (element)=>{
            if (router !== null) {
                linkInstanceRef.current = (0, _links.mountLinkInstance)(element, href, router, fetchStrategy, prefetchEnabled, setOptimisticLinkStatus);
            }
            return ({
                "LinkComponent.useCallback[observeLinkVisibilityOnMount]": ()=>{
                    if (linkInstanceRef.current) {
                        (0, _links.unmountLinkForCurrentNavigation)(linkInstanceRef.current);
                        linkInstanceRef.current = null;
                    }
                    (0, _links.unmountPrefetchableInstance)(element);
                }
            })["LinkComponent.useCallback[observeLinkVisibilityOnMount]"];
        }
    }["LinkComponent.useCallback[observeLinkVisibilityOnMount]"], [
        prefetchEnabled,
        href,
        router,
        fetchStrategy,
        setOptimisticLinkStatus
    ]);
    const mergedRef = (0, _usemergedref.useMergedRef)(observeLinkVisibilityOnMount, childRef);
    const childProps = {
        ref: mergedRef,
        onClick (e) {
            if ("TURBOPACK compile-time truthy", 1) {
                if (!e) {
                    throw Object.defineProperty(new Error('Component rendered inside next/link has to pass click event to "onClick" prop.'), "__NEXT_ERROR_CODE", {
                        value: "E312",
                        enumerable: false,
                        configurable: true
                    });
                }
            }
            if (!legacyBehavior && typeof onClick === 'function') {
                onClick(e);
            }
            if (legacyBehavior && child.props && typeof child.props.onClick === 'function') {
                child.props.onClick(e);
            }
            if (!router) {
                return;
            }
            if (e.defaultPrevented) {
                return;
            }
            linkClicked(e, href, as, linkInstanceRef, replace, scroll, onNavigate);
        },
        onMouseEnter (e) {
            if (!legacyBehavior && typeof onMouseEnterProp === 'function') {
                onMouseEnterProp(e);
            }
            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === 'function') {
                child.props.onMouseEnter(e);
            }
            if (!router) {
                return;
            }
            if ("TURBOPACK compile-time truthy", 1) {
                return;
            }
            //TURBOPACK unreachable
            ;
            const upgradeToDynamicPrefetch = undefined;
        },
        onTouchStart: ("TURBOPACK compile-time falsy", 0) ? "TURBOPACK unreachable" : function onTouchStart(e) {
            if (!legacyBehavior && typeof onTouchStartProp === 'function') {
                onTouchStartProp(e);
            }
            if (legacyBehavior && child.props && typeof child.props.onTouchStart === 'function') {
                child.props.onTouchStart(e);
            }
            if (!router) {
                return;
            }
            if (!prefetchEnabled) {
                return;
            }
            const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true;
            (0, _links.onNavigationIntent)(e.currentTarget, upgradeToDynamicPrefetch);
        }
    };
    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is
    // defined, we specify the current 'href', so that repetition is not needed by the user.
    // If the url is absolute, we can bypass the logic to prepend the basePath.
    if ((0, _utils.isAbsoluteUrl)(as)) {
        childProps.href = as;
    } else if (!legacyBehavior || passHref || child.type === 'a' && !('href' in child.props)) {
        childProps.href = (0, _addbasepath.addBasePath)(as);
    }
    let link;
    if (legacyBehavior) {
        if ("TURBOPACK compile-time truthy", 1) {
            (0, _erroronce.errorOnce)('`legacyBehavior` is deprecated and will be removed in a future ' + 'release. A codemod is available to upgrade your components:\n\n' + 'npx @next/codemod@latest new-link .\n\n' + 'Learn more: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components');
        }
        link = /*#__PURE__*/ _react.default.cloneElement(child, childProps);
    } else {
        link = /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
            ...restProps,
            ...childProps,
            children: children
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(LinkStatusContext.Provider, {
        value: linkStatus,
        children: link
    });
}
const LinkStatusContext = /*#__PURE__*/ (0, _react.createContext)(_links.IDLE_LINK_STATUS);
const useLinkStatus = ()=>{
    return (0, _react.useContext)(LinkStatusContext);
};
function getFetchStrategyFromPrefetchProp(prefetchProp) {
    if ("TURBOPACK compile-time falsy", 0) //TURBOPACK unreachable
    ;
    else {
        return prefetchProp === null || prefetchProp === 'auto' ? _segmentcache.FetchStrategy.PPR : // (although invalid values should've been filtered out by prop validation in dev)
        _segmentcache.FetchStrategy.Full;
    }
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=link.js.map
}),
"[project]/node_modules/react-tsparticles/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "deepCompare",
    ()=>deepCompare
]);
const isObject = (val)=>typeof val === "object" && val !== null;
function deepCompare(obj1, obj2) {
    let excludeKeyFn = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ()=>false;
    if (!isObject(obj1) || !isObject(obj2)) {
        return obj1 === obj2;
    }
    const keys1 = Object.keys(obj1).filter((key)=>!excludeKeyFn(key)), keys2 = Object.keys(obj2).filter((key)=>!excludeKeyFn(key));
    if (keys1.length !== keys2.length) {
        return false;
    }
    for (const key of keys1){
        const value1 = obj1[key], value2 = obj2[key];
        if (isObject(value1) && isObject(value2)) {
            if (value1 === obj2 && value2 === obj1) {
                continue;
            }
            if (!deepCompare(value1, value2, excludeKeyFn)) {
                return false;
            }
        } else if (Array.isArray(value1) && Array.isArray(value2)) {
            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {
                return false;
            }
        } else if (value1 !== value2) {
            return false;
        }
    }
    return true;
}
function deepCompareArrays(arr1, arr2, excludeKeyFn) {
    if (arr1.length !== arr2.length) {
        return false;
    }
    for(let i = 0; i < arr1.length; i++){
        const val1 = arr1[i], val2 = arr2[i];
        if (Array.isArray(val1) && Array.isArray(val2)) {
            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {
                return false;
            }
        } else if (isObject(val1) && isObject(val2)) {
            if (!deepCompare(val1, val2, excludeKeyFn)) {
                return false;
            }
        } else if (val1 !== val2) {
            return false;
        }
    }
    return true;
}
}),
"[project]/node_modules/react-tsparticles/esm/Particles.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$tsparticles$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/react-tsparticles/esm/Utils.js [app-client] (ecmascript)");
;
;
;
const defaultId = "tsparticles";
class Particles extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Component"] {
    destroy() {
        if (!this.state.library) {
            return;
        }
        this.state.library.destroy();
        this.setState({
            library: undefined
        });
    }
    shouldComponentUpdate(nextProps) {
        var _nextProps_options, _this_props_options;
        const nextOptions = (_nextProps_options = nextProps.options) !== null && _nextProps_options !== void 0 ? _nextProps_options : nextProps.params, currentOptions = (_this_props_options = this.props.options) !== null && _this_props_options !== void 0 ? _this_props_options : this.props.params;
        return nextProps.url !== this.props.url || nextProps.id !== this.props.id || nextProps.canvasClassName !== this.props.canvasClassName || nextProps.className !== this.props.className || nextProps.height !== this.props.height || nextProps.width !== this.props.width || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$tsparticles$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepCompare"])(nextProps.style, this.props.style) || nextProps.init !== this.props.init || nextProps.loaded !== this.props.loaded || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$tsparticles$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepCompare"])(nextOptions, currentOptions, (key)=>key.startsWith("_"));
    }
    componentDidUpdate() {
        this.refresh();
    }
    forceUpdate() {
        this.refresh().then(()=>{
            super.forceUpdate();
        });
    }
    componentDidMount() {
        (async ()=>{
            if (this.props.init) {
                await this.props.init(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["tsParticles"]);
            }
            this.setState({
                init: true
            }, async ()=>{
                await this.loadParticles();
            });
        })();
    }
    componentWillUnmount() {
        this.destroy();
    }
    render() {
        const { width, height, className, canvasClassName, id } = this.props;
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("div", {
            className: className,
            id: id
        }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement("canvas", {
            className: canvasClassName,
            style: {
                ...this.props.style,
                width,
                height
            }
        }));
    }
    async refresh() {
        this.destroy();
        await this.loadParticles();
    }
    async loadParticles() {
        if (!this.state.init) {
            return;
        }
        var _this_props_id, _ref, _this_props_options;
        const id = (_ref = (_this_props_id = this.props.id) !== null && _this_props_id !== void 0 ? _this_props_id : Particles.defaultProps.id) !== null && _ref !== void 0 ? _ref : defaultId, container = await __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["tsParticles"].load({
            url: this.props.url,
            id,
            options: (_this_props_options = this.props.options) !== null && _this_props_options !== void 0 ? _this_props_options : this.props.params
        });
        if (this.props.container) {
            this.props.container.current = container;
        }
        this.setState({
            library: container
        });
        if (this.props.loaded) {
            await this.props.loaded(container);
        }
    }
    constructor(props){
        super(props);
        this.state = {
            init: false,
            library: undefined
        };
    }
}
Particles.defaultProps = {
    width: "100%",
    height: "100%",
    options: {},
    style: {},
    url: undefined,
    id: defaultId
};
const __TURBOPACK__default__export__ = Particles;
}),
"[project]/node_modules/react-tsparticles/esm/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$tsparticles$2f$esm$2f$Particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/react-tsparticles/esm/Particles.js [app-client] (ecmascript)");
;
const __TURBOPACK__default__export__ = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$tsparticles$2f$esm$2f$Particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"];
;
}),
"[project]/node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSizeLimit.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "AbsorberSizeLimit",
    ()=>AbsorberSizeLimit
]);
class AbsorberSizeLimit {
    load(data) {
        if (!data) {
            return;
        }
        if (data.mass !== undefined) {
            this.mass = data.mass;
        }
        if (data.radius !== undefined) {
            this.radius = data.radius;
        }
    }
    constructor(){
        this.radius = 0;
        this.mass = 0;
    }
}
}),
"[project]/node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSize.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "AbsorberSize",
    ()=>AbsorberSize
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$Options$2f$Classes$2f$AbsorberSizeLimit$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSizeLimit.js [app-client] (ecmascript)");
;
;
class AbsorberSize extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"] {
    load(data) {
        if (!data) {
            return;
        }
        super.load(data);
        if (data.density !== undefined) {
            this.density = data.density;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(data.limit)) {
            this.limit.radius = data.limit;
        } else {
            this.limit.load(data.limit);
        }
    }
    constructor(){
        super();
        this.density = 5;
        this.value = 50;
        this.limit = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$Options$2f$Classes$2f$AbsorberSizeLimit$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AbsorberSizeLimit"]();
    }
}
}),
"[project]/node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Absorber",
    ()=>Absorber
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$Options$2f$Classes$2f$AbsorberSize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSize.js [app-client] (ecmascript)");
;
;
class Absorber {
    load(data) {
        if (data === undefined) {
            return;
        }
        if (data.color !== undefined) {
            this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        }
        if (data.draggable !== undefined) {
            this.draggable = data.draggable;
        }
        this.name = data.name;
        if (data.opacity !== undefined) {
            this.opacity = data.opacity;
        }
        if (data.position !== undefined) {
            this.position = {};
            if (data.position.x !== undefined) {
                this.position.x = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.position.x);
            }
            if (data.position.y !== undefined) {
                this.position.y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.position.y);
            }
        }
        if (data.size !== undefined) {
            this.size.load(data.size);
        }
        if (data.destroy !== undefined) {
            this.destroy = data.destroy;
        }
        if (data.orbits !== undefined) {
            this.orbits = data.orbits;
        }
    }
    constructor(){
        this.color = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"]();
        this.color.value = "#000000";
        this.draggable = false;
        this.opacity = 1;
        this.destroy = true;
        this.orbits = false;
        this.size = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$Options$2f$Classes$2f$AbsorberSize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AbsorberSize"]();
    }
}
}),
"[project]/node_modules/tsparticles-plugin-absorbers/esm/AbsorberInstance.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "AbsorberInstance",
    ()=>AbsorberInstance
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$Options$2f$Classes$2f$Absorber$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js [app-client] (ecmascript)");
;
;
class AbsorberInstance {
    attract(particle) {
        const container = this.container, options = this.options;
        if (options.draggable) {
            const mouse = container.interactivity.mouse;
            if (mouse.clicking && mouse.downPosition) {
                const mouseDist = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(this.position, mouse.downPosition);
                if (mouseDist <= this.size) {
                    this.dragging = true;
                }
            } else {
                this.dragging = false;
            }
            if (this.dragging && mouse.position) {
                this.position.x = mouse.position.x;
                this.position.y = mouse.position.y;
            }
        }
        const pos = particle.getPosition(), { dx, dy, distance } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(this.position, pos), v = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].create(dx, dy);
        v.length = this.mass / Math.pow(distance, 2) * container.retina.reduceFactor;
        if (distance < this.size + particle.getRadius()) {
            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;
            if (this.size > particle.getRadius() && distance < this.size - particle.getRadius() || particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0) {
                if (options.destroy) {
                    particle.destroy();
                } else {
                    particle.needsNewPosition = true;
                    this._updateParticlePosition(particle, v);
                }
            } else {
                if (options.destroy) {
                    particle.size.value -= sizeFactor;
                }
                this._updateParticlePosition(particle, v);
            }
            if (this.limit.radius <= 0 || this.size < this.limit.radius) {
                this.size += sizeFactor;
            }
            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {
                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;
            }
        } else {
            this._updateParticlePosition(particle, v);
        }
    }
    draw(context) {
        context.translate(this.position.x, this.position.y);
        context.beginPath();
        context.arc(0, 0, this.size, 0, Math.PI * 2, false);
        context.closePath();
        context.fillStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(this.color, this.opacity);
        context.fill();
    }
    resize() {
        const initialPosition = this.initialPosition;
        this.position = initialPosition && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPointInside"])(initialPosition, this.container.canvas.size, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin) ? initialPosition : this._calcPosition();
    }
    constructor(absorbers, container, options, position){
        var _this_initialPosition;
        this.absorbers = absorbers;
        this.container = container;
        this._calcPosition = ()=>{
            const exactPosition = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calcPositionOrRandomFromSizeRanged"])({
                size: this.container.canvas.size,
                position: this.options.position
            });
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].create(exactPosition.x, exactPosition.y);
        };
        this._updateParticlePosition = (particle, v)=>{
            if (particle.destroyed) {
                return;
            }
            const container = this.container, canvasSize = container.canvas.size;
            if (particle.needsNewPosition) {
                const newPosition = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calcPositionOrRandomFromSize"])({
                    size: canvasSize
                });
                particle.position.setTo(newPosition);
                particle.velocity.setTo(particle.initialVelocity);
                particle.absorberOrbit = undefined;
                particle.needsNewPosition = false;
            }
            if (this.options.orbits) {
                if (particle.absorberOrbit === undefined) {
                    particle.absorberOrbit = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].create(0, 0);
                    particle.absorberOrbit.length = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(particle.getPosition(), this.position);
                    particle.absorberOrbit.angle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * Math.PI * 2;
                }
                if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {
                    const minSize = Math.min(canvasSize.width, canvasSize.height);
                    particle.absorberOrbit.length = minSize * (1 + ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * 0.2 - 0.1));
                }
                if (particle.absorberOrbitDirection === undefined) {
                    particle.absorberOrbitDirection = particle.velocity.x >= 0 ? "clockwise" : "counter-clockwise";
                }
                const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;
                particle.velocity.setTo(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin);
                const updateFunc = {
                    x: orbitDirection === "clockwise" ? Math.cos : Math.sin,
                    y: orbitDirection === "clockwise" ? Math.sin : Math.cos
                };
                particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);
                particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);
                particle.absorberOrbit.length -= v.length;
                var _particle_retina_moveSpeed;
                particle.absorberOrbit.angle += ((_particle_retina_moveSpeed = particle.retina.moveSpeed) !== null && _particle_retina_moveSpeed !== void 0 ? _particle_retina_moveSpeed : 0) * container.retina.pixelRatio / 100 * container.retina.reduceFactor;
            } else {
                const addV = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin;
                addV.length = v.length;
                addV.angle = v.angle;
                particle.velocity.addTo(addV);
            }
        };
        this.initialPosition = position ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].create(position.x, position.y) : undefined;
        if (options instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$Options$2f$Classes$2f$Absorber$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Absorber"]) {
            this.options = options;
        } else {
            this.options = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$Options$2f$Classes$2f$Absorber$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Absorber"]();
            this.options.load(options);
        }
        this.dragging = false;
        this.name = this.options.name;
        this.opacity = this.options.opacity;
        this.size = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(this.options.size.value) * container.retina.pixelRatio;
        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;
        const limit = this.options.size.limit;
        this.limit = {
            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,
            mass: limit.mass
        };
        var _rangeColorToRgb;
        this.color = (_rangeColorToRgb = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToRgb"])(this.options.color)) !== null && _rangeColorToRgb !== void 0 ? _rangeColorToRgb : {
            b: 0,
            g: 0,
            r: 0
        };
        var _this_initialPosition_copy;
        this.position = (_this_initialPosition_copy = (_this_initialPosition = this.initialPosition) === null || _this_initialPosition === void 0 ? void 0 : _this_initialPosition.copy()) !== null && _this_initialPosition_copy !== void 0 ? _this_initialPosition_copy : this._calcPosition();
    }
}
}),
"[project]/node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Absorbers",
    ()=>Absorbers
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$AbsorberInstance$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-absorbers/esm/AbsorberInstance.js [app-client] (ecmascript)");
;
;
class Absorbers {
    addAbsorber(options, position) {
        const absorber = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$AbsorberInstance$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AbsorberInstance"](this, this.container, options, position);
        this.array.push(absorber);
        return absorber;
    }
    draw(context) {
        for (const absorber of this.array){
            absorber.draw(context);
        }
    }
    handleClickMode(mode) {
        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;
        if (mode === "absorber") {
            const absorbersModeOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(modeAbsorbers), absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;
            this.addAbsorber(absorbersOptions, aPosition);
        }
    }
    async init() {
        this.absorbers = this.container.actualOptions.absorbers;
        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(this.absorbers, (absorber)=>{
            this.addAbsorber(absorber);
        });
    }
    particleUpdate(particle) {
        for (const absorber of this.array){
            absorber.attract(particle);
            if (particle.destroyed) {
                break;
            }
        }
    }
    removeAbsorber(absorber) {
        const index = this.array.indexOf(absorber);
        if (index >= 0) {
            this.array.splice(index, 1);
        }
    }
    resize() {
        for (const absorber of this.array){
            absorber.resize();
        }
    }
    stop() {
        this.array = [];
    }
    constructor(container){
        this.container = container;
        this.array = [];
        this.absorbers = [];
        this.interactivityAbsorbers = [];
        container.getAbsorber = (idxOrName)=>idxOrName === undefined || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(idxOrName) ? this.array[idxOrName || 0] : this.array.find((t)=>t.name === idxOrName);
        container.addAbsorber = (options, position)=>this.addAbsorber(options, position);
    }
}
}),
"[project]/node_modules/tsparticles-plugin-absorbers/esm/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadAbsorbersPlugin",
    ()=>loadAbsorbersPlugin
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$Options$2f$Classes$2f$Absorber$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$Absorbers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js [app-client] (ecmascript)");
;
;
;
class AbsorbersPlugin {
    getPlugin(container) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$Absorbers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Absorbers"](container);
    }
    loadOptions(options, source) {
        var _source_interactivity_modes, _source_interactivity;
        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {
            return;
        }
        if (source === null || source === void 0 ? void 0 : source.absorbers) {
            options.absorbers = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(source.absorbers, (absorber)=>{
                const tmp = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$Options$2f$Classes$2f$Absorber$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Absorber"]();
                tmp.load(absorber);
                return tmp;
            });
        }
        options.interactivity.modes.absorbers = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(source === null || source === void 0 ? void 0 : (_source_interactivity = source.interactivity) === null || _source_interactivity === void 0 ? void 0 : (_source_interactivity_modes = _source_interactivity.modes) === null || _source_interactivity_modes === void 0 ? void 0 : _source_interactivity_modes.absorbers, (absorber)=>{
            const tmp = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$Options$2f$Classes$2f$Absorber$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Absorber"]();
            tmp.load(absorber);
            return tmp;
        });
    }
    needsPlugin(options) {
        var _options_interactivity_events_onClick, _options_interactivity_events, _options_interactivity;
        if (!options) {
            return false;
        }
        const absorbers = options.absorbers;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(absorbers)) {
            return !!absorbers.length;
        } else if (absorbers) {
            return true;
        } else if (((_options_interactivity = options.interactivity) === null || _options_interactivity === void 0 ? void 0 : (_options_interactivity_events = _options_interactivity.events) === null || _options_interactivity_events === void 0 ? void 0 : (_options_interactivity_events_onClick = _options_interactivity_events.onClick) === null || _options_interactivity_events_onClick === void 0 ? void 0 : _options_interactivity_events_onClick.mode) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("absorber", options.interactivity.events.onClick.mode)) {
            return true;
        }
        return false;
    }
    constructor(){
        this.id = "absorbers";
    }
}
async function loadAbsorbersPlugin(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addPlugin(new AbsorbersPlugin(), refresh);
}
;
;
}),
"[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "DestroyBounds",
    ()=>DestroyBounds
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class DestroyBounds {
    load(data) {
        if (!data) {
            return;
        }
        if (data.bottom !== undefined) {
            this.bottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.bottom);
        }
        if (data.left !== undefined) {
            this.left = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.left);
        }
        if (data.right !== undefined) {
            this.right = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.right);
        }
        if (data.top !== undefined) {
            this.top = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.top);
        }
    }
}
}),
"[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "SplitFactor",
    ()=>SplitFactor
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
;
class SplitFactor extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"] {
    constructor(){
        super();
        this.value = 3;
    }
}
}),
"[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "SplitRate",
    ()=>SplitRate
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
;
class SplitRate extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"] {
    constructor(){
        super();
        this.value = {
            min: 4,
            max: 9
        };
    }
}
}),
"[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/Split.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Split",
    ()=>Split
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$Options$2f$Classes$2f$SplitFactor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$Options$2f$Classes$2f$SplitRate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js [app-client] (ecmascript)");
;
;
;
class Split {
    load(data) {
        if (!data) {
            return;
        }
        if (data.color !== undefined) {
            this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        }
        if (data.count !== undefined) {
            this.count = data.count;
        }
        this.factor.load(data.factor);
        this.rate.load(data.rate);
        this.particles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(data.particles, (particles)=>{
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])({}, particles);
        });
        if (data.sizeOffset !== undefined) {
            this.sizeOffset = data.sizeOffset;
        }
        if (data.colorOffset) {
            var _this_colorOffset;
            this.colorOffset = (_this_colorOffset = this.colorOffset) !== null && _this_colorOffset !== void 0 ? _this_colorOffset : {};
            if (data.colorOffset.h !== undefined) {
                this.colorOffset.h = data.colorOffset.h;
            }
            if (data.colorOffset.s !== undefined) {
                this.colorOffset.s = data.colorOffset.s;
            }
            if (data.colorOffset.l !== undefined) {
                this.colorOffset.l = data.colorOffset.l;
            }
        }
    }
    constructor(){
        this.count = 1;
        this.factor = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$Options$2f$Classes$2f$SplitFactor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SplitFactor"]();
        this.rate = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$Options$2f$Classes$2f$SplitRate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SplitRate"]();
        this.sizeOffset = true;
    }
}
}),
"[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/Destroy.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Destroy",
    ()=>Destroy
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$Options$2f$Classes$2f$DestroyBounds$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$Options$2f$Classes$2f$Split$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/Split.js [app-client] (ecmascript)");
;
;
class Destroy {
    load(data) {
        if (!data) {
            return;
        }
        if (data.mode) {
            this.mode = data.mode;
        }
        if (data.bounds) {
            this.bounds.load(data.bounds);
        }
        this.split.load(data.split);
    }
    constructor(){
        this.bounds = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$Options$2f$Classes$2f$DestroyBounds$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DestroyBounds"]();
        this.mode = "none";
        this.split = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$Options$2f$Classes$2f$Split$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Split"]();
    }
}
}),
"[project]/node_modules/tsparticles-updater-destroy/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "split",
    ()=>split
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$OptionsUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js [app-client] (ecmascript)");
;
function addSplitParticle(engine, container, parent, splitParticlesOptions) {
    const destroyOptions = parent.options.destroy;
    if (!destroyOptions) {
        return;
    }
    const splitOptions = destroyOptions.split, options = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$OptionsUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadParticlesOptions"])(engine, container, parent.options), factor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getValue"])(splitOptions.factor), parentColor = parent.getFillColor();
    if (splitOptions.color) {
        options.color.load(splitOptions.color);
    } else if (splitOptions.colorOffset && parentColor) {
        var _splitOptions_colorOffset_h, _splitOptions_colorOffset_s, _splitOptions_colorOffset_l;
        options.color.load({
            value: {
                hsl: {
                    h: parentColor.h + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])((_splitOptions_colorOffset_h = splitOptions.colorOffset.h) !== null && _splitOptions_colorOffset_h !== void 0 ? _splitOptions_colorOffset_h : 0),
                    s: parentColor.s + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])((_splitOptions_colorOffset_s = splitOptions.colorOffset.s) !== null && _splitOptions_colorOffset_s !== void 0 ? _splitOptions_colorOffset_s : 0),
                    l: parentColor.l + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])((_splitOptions_colorOffset_l = splitOptions.colorOffset.l) !== null && _splitOptions_colorOffset_l !== void 0 ? _splitOptions_colorOffset_l : 0)
                }
            }
        });
    } else {
        options.color.load({
            value: {
                hsl: parent.getFillColor()
            }
        });
    }
    options.move.load({
        center: {
            x: parent.position.x,
            y: parent.position.y,
            mode: "precise"
        }
    });
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(options.size.value)) {
        options.size.value /= factor;
    } else {
        options.size.value.min /= factor;
        options.size.value.max /= factor;
    }
    options.load(splitParticlesOptions);
    const offset = splitOptions.sizeOffset ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(-parent.size.value, parent.size.value) : 0, position = {
        x: parent.position.x + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])(offset),
        y: parent.position.y + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])(offset)
    };
    return container.particles.addParticle(position, options, parent.group, (particle)=>{
        if (particle.size.value < 0.5) {
            return false;
        }
        particle.velocity.length = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(parent.velocity.length, particle.velocity.length));
        var _parent_splitCount;
        particle.splitCount = ((_parent_splitCount = parent.splitCount) !== null && _parent_splitCount !== void 0 ? _parent_splitCount : 0) + 1;
        particle.unbreakable = true;
        setTimeout(()=>{
            particle.unbreakable = false;
        }, 500);
        return true;
    });
}
function split(engine, container, particle) {
    const destroyOptions = particle.options.destroy;
    if (!destroyOptions) {
        return;
    }
    const splitOptions = destroyOptions.split;
    if (splitOptions.count >= 0 && (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {
        return;
    }
    const rate = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getValue"])(splitOptions.rate), particlesSplitOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(splitOptions.particles);
    for(let i = 0; i < rate; i++){
        addSplitParticle(engine, container, particle, particlesSplitOptions);
    }
}
}),
"[project]/node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "DestroyUpdater",
    ()=>DestroyUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$Options$2f$Classes$2f$Destroy$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/Destroy.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-destroy/esm/Utils.js [app-client] (ecmascript)");
;
;
;
class DestroyUpdater {
    init(particle) {
        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;
        if (!destroyOptions) {
            return;
        }
        particle.splitCount = 0;
        const destroyBoundsOptions = destroyOptions.bounds;
        if (!particle.destroyBounds) {
            particle.destroyBounds = {};
        }
        const { bottom, left, right, top } = destroyBoundsOptions, { destroyBounds } = particle, canvasSize = container.canvas.size;
        if (bottom) {
            destroyBounds.bottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(bottom) * canvasSize.height / 100;
        }
        if (left) {
            destroyBounds.left = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(left) * canvasSize.width / 100;
        }
        if (right) {
            destroyBounds.right = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(right) * canvasSize.width / 100;
        }
        if (top) {
            destroyBounds.top = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(top) * canvasSize.height / 100;
        }
    }
    isEnabled(particle) {
        return !particle.destroyed;
    }
    loadOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.destroy) {
            options.destroy = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$Options$2f$Classes$2f$Destroy$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Destroy"]();
        }
        for (const source of sources){
            options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);
        }
    }
    particleDestroyed(particle, override) {
        if (override) {
            return;
        }
        const destroyOptions = particle.options.destroy;
        if (destroyOptions && destroyOptions.mode === "split") {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["split"])(this.engine, this.container, particle);
        }
    }
    update(particle) {
        if (!this.isEnabled(particle)) {
            return;
        }
        const position = particle.getPosition(), bounds = particle.destroyBounds;
        if (!bounds) {
            return;
        }
        if (bounds.bottom !== undefined && position.y >= bounds.bottom || bounds.left !== undefined && position.x <= bounds.left || bounds.right !== undefined && position.x >= bounds.right || bounds.top !== undefined && position.y <= bounds.top) {
            particle.destroy();
        }
    }
    constructor(engine, container){
        this.engine = engine;
        this.container = container;
    }
}
}),
"[project]/node_modules/tsparticles-updater-destroy/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadDestroyUpdater",
    ()=>loadDestroyUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$DestroyUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js [app-client] (ecmascript)");
;
async function loadDestroyUpdater(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addParticleUpdater("destroy", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$DestroyUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DestroyUpdater"](engine, container), refresh);
}
}),
"[project]/node_modules/tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "CircleShape",
    ()=>CircleShape
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class CircleShape {
    randomPosition(position, size, fill) {
        const generateTheta = (x, y)=>{
            const u = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() / 4.0, theta = Math.atan(y / x * Math.tan(2 * Math.PI * u)), v = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
            if (v < 0.25) {
                return theta;
            } else if (v < 0.5) {
                return Math.PI - theta;
            } else if (v < 0.75) {
                return Math.PI + theta;
            } else {
                return -theta;
            }
        }, radius = (x, y, theta)=>x * y / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [
            size.width / 2,
            size.height / 2
        ], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])()) : maxRadius;
        return {
            x: position.x + randomRadius * Math.cos(randomTheta),
            y: position.y + randomRadius * Math.sin(randomTheta)
        };
    }
}
}),
"[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterLife.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "EmitterLife",
    ()=>EmitterLife
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class EmitterLife {
    load(data) {
        if (!data) {
            return;
        }
        if (data.count !== undefined) {
            this.count = data.count;
        }
        if (data.delay !== undefined) {
            this.delay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.delay);
        }
        if (data.duration !== undefined) {
            this.duration = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.duration);
        }
        if (data.wait !== undefined) {
            this.wait = data.wait;
        }
    }
    constructor(){
        this.wait = false;
    }
}
}),
"[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterRate.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "EmitterRate",
    ()=>EmitterRate
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class EmitterRate {
    load(data) {
        if (data === undefined) {
            return;
        }
        if (data.quantity !== undefined) {
            this.quantity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.quantity);
        }
        if (data.delay !== undefined) {
            this.delay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.delay);
        }
    }
    constructor(){
        this.quantity = 1;
        this.delay = 0.1;
    }
}
}),
"[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "EmitterSize",
    ()=>EmitterSize
]);
class EmitterSize {
    load(data) {
        if (data === undefined) {
            return;
        }
        if (data.mode !== undefined) {
            this.mode = data.mode;
        }
        if (data.height !== undefined) {
            this.height = data.height;
        }
        if (data.width !== undefined) {
            this.width = data.width;
        }
    }
    constructor(){
        this.mode = "percent";
        this.height = 0;
        this.width = 0;
    }
}
}),
"[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Emitter",
    ()=>Emitter
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$AnimatableColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$EmitterLife$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterLife.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$EmitterRate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterRate.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$EmitterSize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js [app-client] (ecmascript)");
;
;
;
;
class Emitter {
    load(data) {
        if (!data) {
            return;
        }
        if (data.autoPlay !== undefined) {
            this.autoPlay = data.autoPlay;
        }
        if (data.size !== undefined) {
            if (!this.size) {
                this.size = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$EmitterSize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmitterSize"]();
            }
            this.size.load(data.size);
        }
        if (data.direction !== undefined) {
            this.direction = data.direction;
        }
        this.domId = data.domId;
        if (data.fill !== undefined) {
            this.fill = data.fill;
        }
        this.life.load(data.life);
        this.name = data.name;
        this.particles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(data.particles, (particles)=>{
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])({}, particles);
        });
        this.rate.load(data.rate);
        if (data.shape !== undefined) {
            this.shape = data.shape;
        }
        if (data.position !== undefined) {
            this.position = {};
            if (data.position.x !== undefined) {
                this.position.x = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.position.x);
            }
            if (data.position.y !== undefined) {
                this.position.y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.position.y);
            }
        }
        if (data.spawnColor !== undefined) {
            if (this.spawnColor === undefined) {
                this.spawnColor = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$AnimatableColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AnimatableColor"]();
            }
            this.spawnColor.load(data.spawnColor);
        }
        if (data.startCount !== undefined) {
            this.startCount = data.startCount;
        }
    }
    constructor(){
        this.autoPlay = true;
        this.fill = true;
        this.life = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$EmitterLife$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmitterLife"]();
        this.rate = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$EmitterRate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmitterRate"]();
        this.shape = "square";
        this.startCount = 0;
    }
}
}),
"[project]/node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "EmitterInstance",
    ()=>EmitterInstance
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$Emitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$EmitterSize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js [app-client] (ecmascript)");
;
;
;
class EmitterInstance {
    externalPause() {
        this._paused = true;
        this.pause();
    }
    externalPlay() {
        this._paused = false;
        this.play();
    }
    getPosition() {
        if (this.options.domId) {
            const container = this.container, element = document.getElementById(this.options.domId);
            if (element) {
                const elRect = element.getBoundingClientRect();
                return {
                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,
                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio
                };
            }
        }
        return this.position;
    }
    getSize() {
        const container = this.container;
        if (this.options.domId) {
            const element = document.getElementById(this.options.domId);
            if (element) {
                const elRect = element.getBoundingClientRect();
                return {
                    width: elRect.width * container.retina.pixelRatio,
                    height: elRect.height * container.retina.pixelRatio
                };
            }
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getSize"])(this.size, container.canvas.size);
    }
    pause() {
        if (this._paused) {
            return;
        }
        delete this._emitDelay;
    }
    play() {
        if (this._paused) {
            return;
        }
        var _this__spawnDelay;
        if (!(this.container.retina.reduceFactor && (this._lifeCount > 0 || this._immortal || !this.options.life.count) && (this._firstSpawn || this._currentSpawnDelay >= ((_this__spawnDelay = this._spawnDelay) !== null && _this__spawnDelay !== void 0 ? _this__spawnDelay : 0)))) {
            return;
        }
        if (this._emitDelay === undefined) {
            const delay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(this.options.rate.delay);
            this._emitDelay = 1000 * delay / this.container.retina.reduceFactor;
        }
        if (this._lifeCount > 0 || this._immortal) {
            this._prepareToDie();
        }
    }
    resize() {
        const initialPosition = this._initialPosition;
        this.position = initialPosition && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPointInside"])(initialPosition, this.container.canvas.size, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin) ? initialPosition : this._calcPosition();
    }
    update(delta) {
        if (this._paused) {
            return;
        }
        if (this._firstSpawn) {
            this._firstSpawn = false;
            var _this__spawnDelay;
            this._currentSpawnDelay = (_this__spawnDelay = this._spawnDelay) !== null && _this__spawnDelay !== void 0 ? _this__spawnDelay : 0;
            var _this__emitDelay;
            this._currentEmitDelay = (_this__emitDelay = this._emitDelay) !== null && _this__emitDelay !== void 0 ? _this__emitDelay : 0;
        }
        if (!this._startParticlesAdded) {
            this._startParticlesAdded = true;
            this._emitParticles(this.options.startCount);
        }
        if (this._duration !== undefined) {
            this._currentDuration += delta.value;
            if (this._currentDuration >= this._duration) {
                this.pause();
                if (this._spawnDelay !== undefined) {
                    delete this._spawnDelay;
                }
                if (!this._immortal) {
                    this._lifeCount--;
                }
                if (this._lifeCount > 0 || this._immortal) {
                    this.position = this._calcPosition();
                    var _this_options_life_delay;
                    this._spawnDelay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])((_this_options_life_delay = this.options.life.delay) !== null && _this_options_life_delay !== void 0 ? _this_options_life_delay : 0) * 1000 / this.container.retina.reduceFactor;
                } else {
                    this._destroy();
                }
                this._currentDuration -= this._duration;
                delete this._duration;
            }
        }
        if (this._spawnDelay !== undefined) {
            this._currentSpawnDelay += delta.value;
            if (this._currentSpawnDelay >= this._spawnDelay) {
                this._engine.dispatchEvent("emitterPlay", {
                    container: this.container
                });
                this.play();
                this._currentSpawnDelay -= this._currentSpawnDelay;
                delete this._spawnDelay;
            }
        }
        if (this._emitDelay !== undefined) {
            this._currentEmitDelay += delta.value;
            if (this._currentEmitDelay >= this._emitDelay) {
                this._emit();
                this._currentEmitDelay -= this._emitDelay;
            }
        }
    }
    constructor(engine, emitters, container, options, position){
        var _this__engine_emitterShapeManager;
        var _particlesOptions, _particlesOptions_move;
        this.emitters = emitters;
        this.container = container;
        this._calcPosition = ()=>{
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calcPositionOrRandomFromSizeRanged"])({
                size: this.container.canvas.size,
                position: this.options.position
            });
        };
        this._destroy = ()=>{
            this.emitters.removeEmitter(this);
            this._engine.dispatchEvent("emitterDestroyed", {
                container: this.container,
                data: {
                    emitter: this
                }
            });
        };
        this._emit = ()=>{
            if (this._paused) {
                return;
            }
            const quantity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(this.options.rate.quantity);
            this._emitParticles(quantity);
        };
        this._emitParticles = (quantity)=>{
            const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(this._particlesOptions);
            for(let i = 0; i < quantity; i++){
                var _this__shape;
                const particlesOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])({}, singleParticlesOptions);
                if (this.spawnColor) {
                    var _this_options_spawnColor;
                    const hslAnimation = (_this_options_spawnColor = this.options.spawnColor) === null || _this_options_spawnColor === void 0 ? void 0 : _this_options_spawnColor.animation;
                    if (hslAnimation) {
                        this.spawnColor.h = this._setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);
                        this.spawnColor.s = this._setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);
                        this.spawnColor.l = this._setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);
                    }
                    if (!particlesOptions.color) {
                        particlesOptions.color = {
                            value: this.spawnColor
                        };
                    } else {
                        particlesOptions.color.value = this.spawnColor;
                    }
                }
                if (!position) {
                    return;
                }
                var _this__shape_randomPosition;
                const pPosition = (_this__shape_randomPosition = (_this__shape = this._shape) === null || _this__shape === void 0 ? void 0 : _this__shape.randomPosition(position, size, this.fill)) !== null && _this__shape_randomPosition !== void 0 ? _this__shape_randomPosition : position;
                this.container.particles.addParticle(pPosition, particlesOptions);
            }
        };
        this._prepareToDie = ()=>{
            var _this_options_life;
            if (this._paused) {
                return;
            }
            const duration = ((_this_options_life = this.options.life) === null || _this_options_life === void 0 ? void 0 : _this_options_life.duration) !== undefined ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(this.options.life.duration) : undefined;
            if (this.container.retina.reduceFactor && (this._lifeCount > 0 || this._immortal) && duration !== undefined && duration > 0) {
                this._duration = duration * 1000;
            }
        };
        this._setColorAnimation = (animation, initValue, maxValue)=>{
            const container = this.container;
            if (!animation.enable) {
                return initValue;
            }
            var _animation_speed;
            const colorOffset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])(animation.offset), delay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(this.options.rate.delay), emitFactor = 1000 * delay / container.retina.reduceFactor, colorSpeed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])((_animation_speed = animation.speed) !== null && _animation_speed !== void 0 ? _animation_speed : 0);
            return (initValue + colorSpeed * container.fpsLimit / emitFactor + colorOffset * 3.6) % maxValue;
        };
        this._engine = engine;
        this._currentDuration = 0;
        this._currentEmitDelay = 0;
        this._currentSpawnDelay = 0;
        this._initialPosition = position;
        if (options instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$Emitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Emitter"]) {
            this.options = options;
        } else {
            this.options = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$Emitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Emitter"]();
            this.options.load(options);
        }
        var _this_options_life_delay;
        this._spawnDelay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])((_this_options_life_delay = this.options.life.delay) !== null && _this_options_life_delay !== void 0 ? _this_options_life_delay : 0) * 1000 / this.container.retina.reduceFactor;
        var _this__initialPosition;
        this.position = (_this__initialPosition = this._initialPosition) !== null && _this__initialPosition !== void 0 ? _this__initialPosition : this._calcPosition();
        this.name = this.options.name;
        this._shape = (_this__engine_emitterShapeManager = this._engine.emitterShapeManager) === null || _this__engine_emitterShapeManager === void 0 ? void 0 : _this__engine_emitterShapeManager.getShape(this.options.shape);
        this.fill = this.options.fill;
        this._firstSpawn = !this.options.life.wait;
        this._startParticlesAdded = false;
        let particlesOptions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])({}, this.options.particles);
        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : particlesOptions = {};
        var _move;
        (_move = (_particlesOptions = particlesOptions).move) !== null && _move !== void 0 ? _move : _particlesOptions.move = {};
        var _direction;
        (_direction = (_particlesOptions_move = particlesOptions.move).direction) !== null && _direction !== void 0 ? _direction : _particlesOptions_move.direction = this.options.direction;
        if (this.options.spawnColor) {
            this.spawnColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToHsl"])(this.options.spawnColor);
        }
        this._paused = !this.options.autoPlay;
        this._particlesOptions = particlesOptions;
        var _this_options_size;
        this.size = (_this_options_size = this.options.size) !== null && _this_options_size !== void 0 ? _this_options_size : (()=>{
            const size = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$EmitterSize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmitterSize"]();
            size.load({
                height: 0,
                mode: "percent",
                width: 0
            });
            return size;
        })();
        var _this_options_life_count;
        this._lifeCount = (_this_options_life_count = this.options.life.count) !== null && _this_options_life_count !== void 0 ? _this_options_life_count : -1;
        this._immortal = this._lifeCount <= 0;
        this._engine.dispatchEvent("emitterCreated", {
            container,
            data: {
                emitter: this
            }
        });
        this.play();
    }
}
}),
"[project]/node_modules/tsparticles-plugin-emitters/esm/Emitters.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Emitters",
    ()=>Emitters
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$Emitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$EmitterInstance$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js [app-client] (ecmascript)");
;
;
;
class Emitters {
    addEmitter(options, position) {
        const emitterOptions = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$Emitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Emitter"]();
        emitterOptions.load(options);
        const emitter = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$EmitterInstance$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmitterInstance"](this._engine, this, this.container, emitterOptions, position);
        this.array.push(emitter);
        return emitter;
    }
    handleClickMode(mode) {
        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;
        if (mode !== "emitter") {
            return;
        }
        let emittersModeOptions;
        if (modeEmitters && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(modeEmitters.value)) {
            if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {
                emittersModeOptions = [];
                const usedIndexes = [];
                for(let i = 0; i < modeEmitters.random.count; i++){
                    const idx = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["arrayRandomIndex"])(modeEmitters.value);
                    if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {
                        i--;
                        continue;
                    }
                    usedIndexes.push(idx);
                    emittersModeOptions.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromArray"])(modeEmitters.value, idx));
                }
            } else {
                emittersModeOptions = modeEmitters.value;
            }
        } else {
            emittersModeOptions = modeEmitters === null || modeEmitters === void 0 ? void 0 : modeEmitters.value;
        }
        const emittersOptions = emittersModeOptions !== null && emittersModeOptions !== void 0 ? emittersModeOptions : emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(emittersOptions, (emitter)=>{
            this.addEmitter(emitter, ePosition);
        });
    }
    async init() {
        this.emitters = this.container.actualOptions.emitters;
        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;
        if (!this.emitters) {
            return;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(this.emitters)) {
            for (const emitterOptions of this.emitters){
                this.addEmitter(emitterOptions);
            }
        } else {
            this.addEmitter(this.emitters);
        }
    }
    pause() {
        for (const emitter of this.array){
            emitter.pause();
        }
    }
    play() {
        for (const emitter of this.array){
            emitter.play();
        }
    }
    removeEmitter(emitter) {
        const index = this.array.indexOf(emitter);
        if (index >= 0) {
            this.array.splice(index, 1);
        }
    }
    resize() {
        for (const emitter of this.array){
            emitter.resize();
        }
    }
    stop() {
        this.array = [];
    }
    update(delta) {
        for (const emitter of this.array){
            emitter.update(delta);
        }
    }
    constructor(engine, container){
        this.container = container;
        this._engine = engine;
        this.array = [];
        this.emitters = [];
        this.interactivityEmitters = {
            random: {
                count: 1,
                enable: false
            },
            value: []
        };
        container.getEmitter = (idxOrName)=>idxOrName === undefined || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(idxOrName) ? this.array[idxOrName || 0] : this.array.find((t)=>t.name === idxOrName);
        container.addEmitter = (options, position)=>this.addEmitter(options, position);
        container.removeEmitter = (idxOrName)=>{
            const emitter = container.getEmitter(idxOrName);
            if (emitter) {
                this.removeEmitter(emitter);
            }
        };
        container.playEmitter = (idxOrName)=>{
            const emitter = container.getEmitter(idxOrName);
            if (emitter) {
                emitter.externalPlay();
            }
        };
        container.pauseEmitter = (idxOrName)=>{
            const emitter = container.getEmitter(idxOrName);
            if (emitter) {
                emitter.externalPause();
            }
        };
    }
}
}),
"[project]/node_modules/tsparticles-plugin-emitters/esm/ShapeManager.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "ShapeManager",
    ()=>ShapeManager
]);
const shapes = new Map();
class ShapeManager {
    addShape(name, drawer) {
        if (!this.getShape(name)) {
            shapes.set(name, drawer);
        }
    }
    getShape(name) {
        return shapes.get(name);
    }
    getSupportedShapes() {
        return shapes.keys();
    }
    constructor(engine){
        this._engine = engine;
    }
}
}),
"[project]/node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "SquareShape",
    ()=>SquareShape
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function randomSquareCoordinate(position, offset) {
    return position + offset * ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() - 0.5);
}
class SquareShape {
    randomPosition(position, size, fill) {
        if (fill) {
            return {
                x: randomSquareCoordinate(position.x, size.width),
                y: randomSquareCoordinate(position.y, size.height)
            };
        } else {
            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * 4), v = ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() - 0.5) * 2;
            switch(side){
                case 0:
                    return {
                        x: position.x + v * halfW,
                        y: position.y - halfH
                    };
                case 1:
                    return {
                        x: position.x - halfW,
                        y: position.y + v * halfH
                    };
                case 2:
                    return {
                        x: position.x + v * halfW,
                        y: position.y + halfH
                    };
                case 3:
                default:
                    return {
                        x: position.x + halfW,
                        y: position.y + v * halfH
                    };
            }
        }
    }
}
}),
"[project]/node_modules/tsparticles-plugin-emitters/esm/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadEmittersPlugin",
    ()=>loadEmittersPlugin
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Shapes$2f$Circle$2f$CircleShape$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$Emitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Emitters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-emitters/esm/Emitters.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$ShapeManager$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-emitters/esm/ShapeManager.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Shapes$2f$Square$2f$SquareShape$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js [app-client] (ecmascript)");
;
;
;
;
;
;
class EmittersPlugin {
    getPlugin(container) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Emitters$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Emitters"](this._engine, container);
    }
    loadOptions(options, source) {
        var _source_interactivity_modes, _source_interactivity;
        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {
            return;
        }
        if (source === null || source === void 0 ? void 0 : source.emitters) {
            options.emitters = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(source.emitters, (emitter)=>{
                const tmp = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$Emitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Emitter"]();
                tmp.load(emitter);
                return tmp;
            });
        }
        const interactivityEmitters = source === null || source === void 0 ? void 0 : (_source_interactivity = source.interactivity) === null || _source_interactivity === void 0 ? void 0 : (_source_interactivity_modes = _source_interactivity.modes) === null || _source_interactivity_modes === void 0 ? void 0 : _source_interactivity_modes.emitters;
        if (interactivityEmitters) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(interactivityEmitters)) {
                options.interactivity.modes.emitters = {
                    random: {
                        count: 1,
                        enable: true
                    },
                    value: interactivityEmitters.map((s)=>{
                        const tmp = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$Emitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Emitter"]();
                        tmp.load(s);
                        return tmp;
                    })
                };
            } else {
                const emitterMode = interactivityEmitters;
                if (emitterMode.value !== undefined) {
                    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(emitterMode.value)) {
                        var _emitterMode_random_count, _emitterMode_random_enable;
                        options.interactivity.modes.emitters = {
                            random: {
                                count: (_emitterMode_random_count = emitterMode.random.count) !== null && _emitterMode_random_count !== void 0 ? _emitterMode_random_count : 1,
                                enable: (_emitterMode_random_enable = emitterMode.random.enable) !== null && _emitterMode_random_enable !== void 0 ? _emitterMode_random_enable : false
                            },
                            value: emitterMode.value.map((s)=>{
                                const tmp = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$Emitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Emitter"]();
                                tmp.load(s);
                                return tmp;
                            })
                        };
                    } else {
                        const tmp = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$Emitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Emitter"]();
                        tmp.load(emitterMode.value);
                        var _emitterMode_random_count1, _emitterMode_random_enable1;
                        options.interactivity.modes.emitters = {
                            random: {
                                count: (_emitterMode_random_count1 = emitterMode.random.count) !== null && _emitterMode_random_count1 !== void 0 ? _emitterMode_random_count1 : 1,
                                enable: (_emitterMode_random_enable1 = emitterMode.random.enable) !== null && _emitterMode_random_enable1 !== void 0 ? _emitterMode_random_enable1 : false
                            },
                            value: tmp
                        };
                    }
                } else {
                    const emitterOptions = options.interactivity.modes.emitters = {
                        random: {
                            count: 1,
                            enable: false
                        },
                        value: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Options$2f$Classes$2f$Emitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Emitter"]()
                    };
                    emitterOptions.value.load(interactivityEmitters);
                }
            }
        }
    }
    needsPlugin(options) {
        var _options_interactivity_events_onClick, _options_interactivity_events, _options_interactivity;
        if (!options) {
            return false;
        }
        const emitters = options.emitters;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(emitters) && !!emitters.length || emitters !== undefined || !!((_options_interactivity = options.interactivity) === null || _options_interactivity === void 0 ? void 0 : (_options_interactivity_events = _options_interactivity.events) === null || _options_interactivity_events === void 0 ? void 0 : (_options_interactivity_events_onClick = _options_interactivity_events.onClick) === null || _options_interactivity_events_onClick === void 0 ? void 0 : _options_interactivity_events_onClick.mode) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("emitter", options.interactivity.events.onClick.mode);
    }
    constructor(engine){
        this._engine = engine;
        this.id = "emitters";
    }
}
async function loadEmittersPlugin(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    if (!engine.emitterShapeManager) {
        engine.emitterShapeManager = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$ShapeManager$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ShapeManager"](engine);
    }
    if (!engine.addEmitterShape) {
        engine.addEmitterShape = (name, shape)=>{
            var _engine_emitterShapeManager;
            (_engine_emitterShapeManager = engine.emitterShapeManager) === null || _engine_emitterShapeManager === void 0 ? void 0 : _engine_emitterShapeManager.addShape(name, shape);
        };
    }
    const plugin = new EmittersPlugin(engine);
    await engine.addPlugin(plugin, refresh);
    engine.addEmitterShape("circle", new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Shapes$2f$Circle$2f$CircleShape$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CircleShape"]());
    engine.addEmitterShape("square", new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$Shapes$2f$Square$2f$SquareShape$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SquareShape"]());
}
;
;
;
;
}),
"[project]/node_modules/tsparticles-interaction-external-trail/esm/Options/Classes/Trail.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Trail",
    ()=>Trail
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
class Trail {
    load(data) {
        if (!data) {
            return;
        }
        if (data.delay !== undefined) {
            this.delay = data.delay;
        }
        if (data.quantity !== undefined) {
            this.quantity = data.quantity;
        }
        if (data.particles !== undefined) {
            this.particles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deepExtend"])({}, data.particles);
        }
        if (data.pauseOnStop !== undefined) {
            this.pauseOnStop = data.pauseOnStop;
        }
    }
    constructor(){
        this.delay = 1;
        this.pauseOnStop = false;
        this.quantity = 1;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-trail/esm/TrailMaker.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "TrailMaker",
    ()=>TrailMaker
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$trail$2f$esm$2f$Options$2f$Classes$2f$Trail$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-trail/esm/Options/Classes/Trail.js [app-client] (ecmascript)");
;
;
class TrailMaker extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    clear() {}
    init() {}
    async interact(delta) {
        var _interactivity_mouse_position, _this__lastPosition, _interactivity_mouse_position1, _this__lastPosition1;
        const container = this.container, { interactivity } = container;
        if (!container.retina.reduceFactor) {
            return;
        }
        const options = container.actualOptions, trailOptions = options.interactivity.modes.trail;
        if (!trailOptions) {
            return;
        }
        const optDelay = trailOptions.delay * 1000 / this.container.retina.reduceFactor;
        if (this._delay < optDelay) {
            this._delay += delta.value;
        }
        if (this._delay < optDelay) {
            return;
        }
        const canEmit = !(trailOptions.pauseOnStop && (interactivity.mouse.position === this._lastPosition || ((_interactivity_mouse_position = interactivity.mouse.position) === null || _interactivity_mouse_position === void 0 ? void 0 : _interactivity_mouse_position.x) === ((_this__lastPosition = this._lastPosition) === null || _this__lastPosition === void 0 ? void 0 : _this__lastPosition.x) && ((_interactivity_mouse_position1 = interactivity.mouse.position) === null || _interactivity_mouse_position1 === void 0 ? void 0 : _interactivity_mouse_position1.y) === ((_this__lastPosition1 = this._lastPosition) === null || _this__lastPosition1 === void 0 ? void 0 : _this__lastPosition1.y)));
        const mousePos = container.interactivity.mouse.position;
        if (mousePos) {
            this._lastPosition = {
                ...mousePos
            };
        } else {
            delete this._lastPosition;
        }
        if (canEmit) {
            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);
        }
        this._delay -= optDelay;
    }
    isEnabled(particle) {
        var _particle_interactivity;
        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_particle_interactivity = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _particle_interactivity !== void 0 ? _particle_interactivity : options.interactivity).events;
        return mouse.clicking && mouse.inside && !!mouse.position && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("trail", events.onClick.mode) || mouse.inside && !!mouse.position && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("trail", events.onHover.mode);
    }
    loadModeOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.trail) {
            options.trail = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$trail$2f$esm$2f$Options$2f$Classes$2f$Trail$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Trail"]();
        }
        for (const source of sources){
            options.trail.load(source === null || source === void 0 ? void 0 : source.trail);
        }
    }
    reset() {}
    constructor(container){
        super(container);
        this._delay = 0;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-trail/esm/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadExternalTrailInteraction",
    ()=>loadExternalTrailInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$trail$2f$esm$2f$TrailMaker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-trail/esm/TrailMaker.js [app-client] (ecmascript)");
;
async function loadExternalTrailInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addInteractor("externalTrail", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$trail$2f$esm$2f$TrailMaker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TrailMaker"](container), refresh);
}
;
;
}),
"[project]/node_modules/tsparticles-updater-roll/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "initParticle",
    ()=>initParticle,
    "updateRoll",
    ()=>updateRoll
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
;
function initParticle(particle) {
    const rollOpt = particle.options.roll;
    if (!(rollOpt === null || rollOpt === void 0 ? void 0 : rollOpt.enable)) {
        particle.roll = {
            enable: false,
            horizontal: false,
            vertical: false,
            angle: 0,
            speed: 0
        };
        return;
    }
    particle.roll = {
        enable: rollOpt.enable,
        horizontal: rollOpt.mode === "horizontal" || rollOpt.mode === "both",
        vertical: rollOpt.mode === "vertical" || rollOpt.mode === "both",
        angle: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * Math.PI * 2,
        speed: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(rollOpt.speed) / 360
    };
    if (rollOpt.backColor) {
        particle.backColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToHsl"])(rollOpt.backColor);
    } else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {
        const alterType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() >= 0.5 ? "darken" : "enlighten";
        particle.roll.alter = {
            type: alterType,
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(alterType === "darken" ? rollOpt.darken.value : rollOpt.enlighten.value)
        };
    } else if (rollOpt.darken.enable) {
        particle.roll.alter = {
            type: "darken",
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(rollOpt.darken.value)
        };
    } else if (rollOpt.enlighten.enable) {
        particle.roll.alter = {
            type: "enlighten",
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(rollOpt.enlighten.value)
        };
    }
}
function updateRoll(particle, delta) {
    const roll = particle.options.roll, data = particle.roll;
    if (!data || !(roll === null || roll === void 0 ? void 0 : roll.enable)) {
        return;
    }
    const speed = data.speed * delta.factor, max = 2 * Math.PI;
    data.angle += speed;
    if (data.angle > max) {
        data.angle -= max;
    }
}
}),
"[project]/node_modules/tsparticles-updater-roll/esm/Options/Classes/RollLight.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "RollLight",
    ()=>RollLight
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class RollLight {
    load(data) {
        if (!data) {
            return;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.value !== undefined) {
            this.value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.value);
        }
    }
    constructor(){
        this.enable = false;
        this.value = 0;
    }
}
}),
"[project]/node_modules/tsparticles-updater-roll/esm/Options/Classes/Roll.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Roll",
    ()=>Roll
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$roll$2f$esm$2f$Options$2f$Classes$2f$RollLight$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-roll/esm/Options/Classes/RollLight.js [app-client] (ecmascript)");
;
;
class Roll {
    load(data) {
        if (!data) {
            return;
        }
        if (data.backColor !== undefined) {
            this.backColor = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.backColor, data.backColor);
        }
        this.darken.load(data.darken);
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        this.enlighten.load(data.enlighten);
        if (data.mode !== undefined) {
            this.mode = data.mode;
        }
        if (data.speed !== undefined) {
            this.speed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.speed);
        }
    }
    constructor(){
        this.darken = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$roll$2f$esm$2f$Options$2f$Classes$2f$RollLight$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RollLight"]();
        this.enable = false;
        this.enlighten = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$roll$2f$esm$2f$Options$2f$Classes$2f$RollLight$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RollLight"]();
        this.mode = "vertical";
        this.speed = 25;
    }
}
}),
"[project]/node_modules/tsparticles-updater-roll/esm/RollUpdater.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "RollUpdater",
    ()=>RollUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$roll$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-roll/esm/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$roll$2f$esm$2f$Options$2f$Classes$2f$Roll$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-roll/esm/Options/Classes/Roll.js [app-client] (ecmascript)");
;
;
class RollUpdater {
    getTransformValues(particle) {
        var _particle_roll;
        const roll = ((_particle_roll = particle.roll) === null || _particle_roll === void 0 ? void 0 : _particle_roll.enable) && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;
        return {
            a: rollHorizontal ? Math.cos(roll.angle) : undefined,
            d: rollVertical ? Math.sin(roll.angle) : undefined
        };
    }
    init(particle) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$roll$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["initParticle"])(particle);
    }
    isEnabled(particle) {
        const roll = particle.options.roll;
        return !particle.destroyed && !particle.spawning && !!(roll === null || roll === void 0 ? void 0 : roll.enable);
    }
    loadOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.roll) {
            options.roll = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$roll$2f$esm$2f$Options$2f$Classes$2f$Roll$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Roll"]();
        }
        for (const source of sources){
            options.roll.load(source === null || source === void 0 ? void 0 : source.roll);
        }
    }
    update(particle, delta) {
        if (!this.isEnabled(particle)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$roll$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateRoll"])(particle, delta);
    }
}
}),
"[project]/node_modules/tsparticles-updater-roll/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadRollUpdater",
    ()=>loadRollUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$roll$2f$esm$2f$RollUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-roll/esm/RollUpdater.js [app-client] (ecmascript)");
;
async function loadRollUpdater(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addParticleUpdater("roll", ()=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$roll$2f$esm$2f$RollUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RollUpdater"](), refresh);
}
}),
"[project]/node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Particles",
    ()=>Particles
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/index.js [app-client] (ecmascript) <locals>");
;
class Particles {
    static init(options) {
        var _options_responsive;
        const particles = new Particles(), selector = options.selector;
        if (!selector) {
            throw new Error("No selector provided");
        }
        const el = document.querySelector(selector);
        if (!el) {
            throw new Error("No element found for selector");
        }
        var _options_color, _options_minDistance, _options_connectParticles, _options_speed, _options_maxParticles, _options_sizeVariations;
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["tsParticles"].set(selector.replace(".", "").replace("!", ""), el, {
            fullScreen: {
                enable: false
            },
            particles: {
                color: {
                    value: (_options_color = options.color) !== null && _options_color !== void 0 ? _options_color : "!000000"
                },
                links: {
                    color: "random",
                    distance: (_options_minDistance = options.minDistance) !== null && _options_minDistance !== void 0 ? _options_minDistance : 120,
                    enable: (_options_connectParticles = options.connectParticles) !== null && _options_connectParticles !== void 0 ? _options_connectParticles : false
                },
                move: {
                    enable: true,
                    speed: (_options_speed = options.speed) !== null && _options_speed !== void 0 ? _options_speed : 0.5
                },
                number: {
                    value: (_options_maxParticles = options.maxParticles) !== null && _options_maxParticles !== void 0 ? _options_maxParticles : 100
                },
                size: {
                    value: {
                        min: 1,
                        max: (_options_sizeVariations = options.sizeVariations) !== null && _options_sizeVariations !== void 0 ? _options_sizeVariations : 3
                    }
                }
            },
            responsive: (_options_responsive = options.responsive) === null || _options_responsive === void 0 ? void 0 : _options_responsive.map((responsive)=>{
                var _responsive_options, _responsive_options1, _responsive_options2, _responsive_options3, _responsive_options4;
                return {
                    maxWidth: responsive.breakpoint,
                    options: {
                        particles: {
                            color: {
                                value: (_responsive_options = responsive.options) === null || _responsive_options === void 0 ? void 0 : _responsive_options.color
                            },
                            links: {
                                distance: (_responsive_options1 = responsive.options) === null || _responsive_options1 === void 0 ? void 0 : _responsive_options1.minDistance,
                                enable: (_responsive_options2 = responsive.options) === null || _responsive_options2 === void 0 ? void 0 : _responsive_options2.connectParticles
                            },
                            number: {
                                value: options.maxParticles
                            },
                            move: {
                                enable: true,
                                speed: (_responsive_options3 = responsive.options) === null || _responsive_options3 === void 0 ? void 0 : _responsive_options3.speed
                            },
                            size: {
                                value: (_responsive_options4 = responsive.options) === null || _responsive_options4 === void 0 ? void 0 : _responsive_options4.sizeVariations
                            }
                        }
                    }
                };
            })
        }).then((container)=>{
            particles._container = container;
        });
        return particles;
    }
    destroy() {
        const container = this._container;
        container && container.destroy();
    }
    pauseAnimation() {
        const container = this._container;
        container && container.pause();
    }
    resumeAnimation() {
        const container = this._container;
        container && container.play();
    }
}
}),
"[project]/node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "initParticlesJS",
    ()=>initParticlesJS
]);
const initParticlesJS = (engine)=>{
    const particlesJS = (tagId, options)=>{
        return engine.load(tagId, options);
    };
    particlesJS.load = (tagId, pathConfigJson, callback)=>{
        engine.loadJSON(tagId, pathConfigJson).then((container)=>{
            if (container) {
                callback(container);
            }
        }).catch(()=>{
            callback(undefined);
        });
    };
    particlesJS.setOnClickHandler = (callback)=>{
        engine.setOnClickHandler(callback);
    };
    const pJSDom = engine.dom();
    return {
        particlesJS,
        pJSDom
    };
};
;
}),
"[project]/node_modules/tsparticles-particles.js/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "initPjs",
    ()=>initPjs
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$particles$2e$js$2f$esm$2f$marcbruederlin$2f$Particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$particles$2e$js$2f$esm$2f$VincentGarreau$2f$particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js [app-client] (ecmascript)");
;
;
const initPjs = (engine)=>{
    const { particlesJS, pJSDom } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$particles$2e$js$2f$esm$2f$VincentGarreau$2f$particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["initParticlesJS"])(engine);
    window.particlesJS = particlesJS;
    window.pJSDom = pJSDom;
    window.Particles = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$particles$2e$js$2f$esm$2f$marcbruederlin$2f$Particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Particles"];
    return {
        particlesJS,
        pJSDom,
        Particles: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$particles$2e$js$2f$esm$2f$marcbruederlin$2f$Particles$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Particles"]
    };
};
;
}),
"[project]/node_modules/tsparticles-move-base/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "applyDistance",
    ()=>applyDistance,
    "applyPath",
    ()=>applyPath,
    "getProximitySpeedFactor",
    ()=>getProximitySpeedFactor,
    "move",
    ()=>move,
    "spin",
    ()=>spin
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function applyDistance(particle) {
    const initialPosition = particle.initialPosition, { dx, dy } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;
    if (!hDistance && !vDistance) {
        return;
    }
    if ((hDistance && dxFixed >= hDistance || vDistance && dyFixed >= vDistance) && !particle.misplaced) {
        particle.misplaced = !!hDistance && dxFixed > hDistance || !!vDistance && dyFixed > vDistance;
        if (hDistance) {
            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;
        }
        if (vDistance) {
            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;
        }
    } else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {
        particle.misplaced = false;
    } else if (particle.misplaced) {
        const pos = particle.position, vel = particle.velocity;
        if (hDistance && (pos.x < initialPosition.x && vel.x < 0 || pos.x > initialPosition.x && vel.x > 0)) {
            vel.x *= -(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
        }
        if (vDistance && (pos.y < initialPosition.y && vel.y < 0 || pos.y > initialPosition.y && vel.y > 0)) {
            vel.y *= -(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
        }
    }
}
function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {
    applyPath(particle, delta);
    const gravityOptions = particle.gravity, gravityFactor = (gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && gravityOptions.inverse ? -1 : 1;
    if (moveDrift && moveSpeed) {
        particle.velocity.x += moveDrift * delta.factor / (60 * moveSpeed);
    }
    if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && moveSpeed) {
        particle.velocity.y += gravityFactor * (gravityOptions.acceleration * delta.factor) / (60 * moveSpeed);
    }
    const decay = particle.moveDecay;
    particle.velocity.multTo(decay);
    const velocity = particle.velocity.mult(moveSpeed);
    if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && maxSpeed > 0 && (!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed || gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed)) {
        velocity.y = gravityFactor * maxSpeed;
        if (moveSpeed) {
            particle.velocity.y = velocity.y / moveSpeed;
        }
    }
    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;
    velocity.multTo(zVelocityFactor);
    const { position } = particle;
    position.addTo(velocity);
    if (moveOptions.vibrate) {
        position.x += Math.sin(position.x * Math.cos(position.y));
        position.y += Math.cos(position.y * Math.sin(position.x));
    }
}
function spin(particle, moveSpeed) {
    const container = particle.container;
    if (!particle.spin) {
        return;
    }
    const updateFunc = {
        x: particle.spin.direction === "clockwise" ? Math.cos : Math.sin,
        y: particle.spin.direction === "clockwise" ? Math.sin : Math.cos
    };
    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);
    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);
    particle.spin.radius += particle.spin.acceleration;
    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);
    if (particle.spin.radius > maxCanvasSize / 2) {
        particle.spin.radius = maxCanvasSize / 2;
        particle.spin.acceleration *= -1;
    } else if (particle.spin.radius < 0) {
        particle.spin.radius = 0;
        particle.spin.acceleration *= -1;
    }
    particle.spin.angle += moveSpeed / 100 * (1 - particle.spin.radius / maxCanvasSize);
}
function applyPath(particle, delta) {
    var _particle_pathGenerator;
    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;
    if (!pathEnabled) {
        return;
    }
    if (particle.lastPathTime <= particle.pathDelay) {
        particle.lastPathTime += delta.value;
        return;
    }
    const path = (_particle_pathGenerator = particle.pathGenerator) === null || _particle_pathGenerator === void 0 ? void 0 : _particle_pathGenerator.generate(particle, delta);
    if (path) {
        particle.velocity.addTo(path);
    }
    if (pathOptions.clamp) {
        particle.velocity.x = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(particle.velocity.x, -1, 1);
        particle.velocity.y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(particle.velocity.y, -1, 1);
    }
    particle.lastPathTime -= particle.pathDelay;
}
function getProximitySpeedFactor(particle) {
    return particle.slow.inRange ? particle.slow.factor : 1;
}
}),
"[project]/node_modules/tsparticles-move-base/esm/BaseMover.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "BaseMover",
    ()=>BaseMover
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-move-base/esm/Utils.js [app-client] (ecmascript)");
;
;
const diffFactor = 2;
class BaseMover {
    init(particle) {
        const options = particle.options, gravityOptions = options.move.gravity;
        particle.gravity = {
            enable: gravityOptions.enable,
            acceleration: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(gravityOptions.acceleration),
            inverse: gravityOptions.inverse
        };
        this._initSpin(particle);
    }
    isEnabled(particle) {
        return !particle.destroyed && particle.options.move.enable;
    }
    move(particle, delta) {
        var _particle_retina, _particle_retina1;
        const particleOptions = particle.options, moveOptions = particleOptions.move;
        if (!moveOptions.enable) {
            return;
        }
        var _moveSpeed, _moveDrift, _particle_retina_maxSpeed;
        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getProximitySpeedFactor"])(particle), baseSpeed = ((_moveSpeed = (_particle_retina = particle.retina).moveSpeed) !== null && _moveSpeed !== void 0 ? _moveSpeed : _particle_retina.moveSpeed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(moveOptions.speed) * pxRatio) * container.retina.reduceFactor, moveDrift = (_moveDrift = (_particle_retina1 = particle.retina).moveDrift) !== null && _moveDrift !== void 0 ? _moveDrift : _particle_retina1.moveDrift = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(particle.options.move.drift) * pxRatio, maxSize = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeMax"])(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = baseSpeed * sizeFactor * slowFactor * (delta.factor || 1) / diffFactor, maxSpeed = (_particle_retina_maxSpeed = particle.retina.maxSpeed) !== null && _particle_retina_maxSpeed !== void 0 ? _particle_retina_maxSpeed : container.retina.maxSpeed;
        if (moveOptions.spin.enable) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["spin"])(particle, moveSpeed);
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["move"])(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["applyDistance"])(particle);
    }
    constructor(){
        this._initSpin = (particle)=>{
            const container = particle.container, options = particle.options, spinOptions = options.move.spin;
            if (!spinOptions.enable) {
                return;
            }
            var _spinOptions_position;
            const spinPos = (_spinOptions_position = spinOptions.position) !== null && _spinOptions_position !== void 0 ? _spinOptions_position : {
                x: 50,
                y: 50
            }, spinCenter = {
                x: spinPos.x / 100 * container.canvas.size.width,
                y: spinPos.y / 100 * container.canvas.size.height
            }, pos = particle.getPosition(), distance = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos, spinCenter), spinAcceleration = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(spinOptions.acceleration);
            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;
            particle.spin = {
                center: spinCenter,
                direction: particle.velocity.x >= 0 ? "clockwise" : "counter-clockwise",
                angle: particle.velocity.angle,
                radius: distance,
                acceleration: particle.retina.spinAcceleration
            };
        };
    }
}
}),
"[project]/node_modules/tsparticles-move-base/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadBaseMover",
    ()=>loadBaseMover
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$BaseMover$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-move-base/esm/BaseMover.js [app-client] (ecmascript)");
;
async function loadBaseMover(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addMover("base", ()=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$BaseMover$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseMover"](), refresh);
}
}),
"[project]/node_modules/tsparticles-shape-circle/esm/CircleDrawer.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "CircleDrawer",
    ()=>CircleDrawer
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
class CircleDrawer {
    draw(context, particle, radius) {
        if (!particle.circleRange) {
            particle.circleRange = {
                min: 0,
                max: Math.PI * 2
            };
        }
        const circleRange = particle.circleRange;
        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);
    }
    getSidesCount() {
        return 12;
    }
    particleInit(container, particle) {
        var _shapeData_angle;
        const shapeData = particle.shapeData, angle = (_shapeData_angle = shapeData === null || shapeData === void 0 ? void 0 : shapeData.angle) !== null && _shapeData_angle !== void 0 ? _shapeData_angle : {
            max: 360,
            min: 0
        };
        particle.circleRange = !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isObject"])(angle) ? {
            min: 0,
            max: angle * Math.PI / 180
        } : {
            min: angle.min * Math.PI / 180,
            max: angle.max * Math.PI / 180
        };
    }
}
}),
"[project]/node_modules/tsparticles-shape-circle/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadCircleShape",
    ()=>loadCircleShape
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$circle$2f$esm$2f$CircleDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-circle/esm/CircleDrawer.js [app-client] (ecmascript)");
;
async function loadCircleShape(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addShape("circle", new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$circle$2f$esm$2f$CircleDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CircleDrawer"](), refresh);
}
}),
"[project]/node_modules/tsparticles-updater-color/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "updateColor",
    ()=>updateColor
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function updateColorValue(delta, colorValue, valueAnimation, max, decrease) {
    var _colorValue_maxLoops, _colorValue_loops, _colorValue_maxLoops1;
    if (!colorValue || !valueAnimation.enable || ((_colorValue_maxLoops = colorValue.maxLoops) !== null && _colorValue_maxLoops !== void 0 ? _colorValue_maxLoops : 0) > 0 && ((_colorValue_loops = colorValue.loops) !== null && _colorValue_loops !== void 0 ? _colorValue_loops : 0) > ((_colorValue_maxLoops1 = colorValue.maxLoops) !== null && _colorValue_maxLoops1 !== void 0 ? _colorValue_maxLoops1 : 0)) {
        return;
    }
    if (!colorValue.time) {
        colorValue.time = 0;
    }
    var _colorValue_delayTime, _colorValue_delayTime1;
    if (((_colorValue_delayTime = colorValue.delayTime) !== null && _colorValue_delayTime !== void 0 ? _colorValue_delayTime : 0) > 0 && colorValue.time < ((_colorValue_delayTime1 = colorValue.delayTime) !== null && _colorValue_delayTime1 !== void 0 ? _colorValue_delayTime1 : 0)) {
        colorValue.time += delta.value;
    }
    var _colorValue_delayTime2, _colorValue_delayTime3;
    if (((_colorValue_delayTime2 = colorValue.delayTime) !== null && _colorValue_delayTime2 !== void 0 ? _colorValue_delayTime2 : 0) > 0 && colorValue.time < ((_colorValue_delayTime3 = colorValue.delayTime) !== null && _colorValue_delayTime3 !== void 0 ? _colorValue_delayTime3 : 0)) {
        return;
    }
    var _colorValue_velocity, _colorValue_decay;
    const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])(valueAnimation.offset), velocity = ((_colorValue_velocity = colorValue.velocity) !== null && _colorValue_velocity !== void 0 ? _colorValue_velocity : 0) * delta.factor + offset * 3.6, decay = (_colorValue_decay = colorValue.decay) !== null && _colorValue_decay !== void 0 ? _colorValue_decay : 1;
    if (!decrease || colorValue.status === "increasing") {
        colorValue.value += velocity;
        if (colorValue.value > max) {
            if (!colorValue.loops) {
                colorValue.loops = 0;
            }
            colorValue.loops++;
            if (decrease) {
                colorValue.status = "decreasing";
                colorValue.value -= colorValue.value % max;
            }
        }
    } else {
        colorValue.value -= velocity;
        if (colorValue.value < 0) {
            if (!colorValue.loops) {
                colorValue.loops = 0;
            }
            colorValue.loops++;
            colorValue.status = "increasing";
            colorValue.value += colorValue.value;
        }
    }
    if (colorValue.velocity && decay !== 1) {
        colorValue.velocity *= decay;
    }
    if (colorValue.value > max) {
        colorValue.value %= max;
    }
}
function updateColor(particle, delta) {
    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;
    if (!color) {
        return;
    }
    const { h, s, l } = color;
    if (h) {
        updateColorValue(delta, h, hAnimation, 360, false);
    }
    if (s) {
        updateColorValue(delta, s, sAnimation, 100, true);
    }
    if (l) {
        updateColorValue(delta, l, lAnimation, 100, true);
    }
}
}),
"[project]/node_modules/tsparticles-updater-color/esm/ColorUpdater.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "ColorUpdater",
    ()=>ColorUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$color$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-color/esm/Utils.js [app-client] (ecmascript)");
;
;
class ColorUpdater {
    init(particle) {
        const hslColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToHsl"])(particle.options.color, particle.id, particle.options.reduceDuplicates);
        if (hslColor) {
            particle.color = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getHslAnimationFromHsl"])(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);
        }
    }
    isEnabled(particle) {
        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;
        return !particle.destroyed && !particle.spawning && ((color === null || color === void 0 ? void 0 : color.h.value) !== undefined && hAnimation.enable || (color === null || color === void 0 ? void 0 : color.s.value) !== undefined && sAnimation.enable || (color === null || color === void 0 ? void 0 : color.l.value) !== undefined && lAnimation.enable);
    }
    update(particle, delta) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$color$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateColor"])(particle, delta);
    }
    constructor(container){
        this.container = container;
    }
}
}),
"[project]/node_modules/tsparticles-updater-color/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadColorUpdater",
    ()=>loadColorUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$color$2f$esm$2f$ColorUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-color/esm/ColorUpdater.js [app-client] (ecmascript)");
;
async function loadColorUpdater(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addParticleUpdater("color", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$color$2f$esm$2f$ColorUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ColorUpdater"](container), refresh);
}
}),
"[project]/node_modules/tsparticles-updater-opacity/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "updateOpacity",
    ()=>updateOpacity
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function checkDestroy(particle, value, minValue, maxValue) {
    switch(particle.options.opacity.animation.destroy){
        case "max":
            if (value >= maxValue) {
                particle.destroy();
            }
            break;
        case "min":
            if (value <= minValue) {
                particle.destroy();
            }
            break;
    }
}
function updateOpacity(particle, delta) {
    const data = particle.opacity;
    var _data_maxLoops, _data_loops, _data_maxLoops1;
    if (particle.destroyed || !(data === null || data === void 0 ? void 0 : data.enable) || ((_data_maxLoops = data.maxLoops) !== null && _data_maxLoops !== void 0 ? _data_maxLoops : 0) > 0 && ((_data_loops = data.loops) !== null && _data_loops !== void 0 ? _data_loops : 0) > ((_data_maxLoops1 = data.maxLoops) !== null && _data_maxLoops1 !== void 0 ? _data_maxLoops1 : 0)) {
        return;
    }
    var _data_decay;
    const minValue = data.min, maxValue = data.max, decay = (_data_decay = data.decay) !== null && _data_decay !== void 0 ? _data_decay : 1;
    if (!data.time) {
        data.time = 0;
    }
    var _data_delayTime, _data_delayTime1;
    if (((_data_delayTime = data.delayTime) !== null && _data_delayTime !== void 0 ? _data_delayTime : 0) > 0 && data.time < ((_data_delayTime1 = data.delayTime) !== null && _data_delayTime1 !== void 0 ? _data_delayTime1 : 0)) {
        data.time += delta.value;
    }
    var _data_delayTime2, _data_delayTime3;
    if (((_data_delayTime2 = data.delayTime) !== null && _data_delayTime2 !== void 0 ? _data_delayTime2 : 0) > 0 && data.time < ((_data_delayTime3 = data.delayTime) !== null && _data_delayTime3 !== void 0 ? _data_delayTime3 : 0)) {
        return;
    }
    switch(data.status){
        case "increasing":
            if (data.value >= maxValue) {
                data.status = "decreasing";
                if (!data.loops) {
                    data.loops = 0;
                }
                data.loops++;
            } else {
                var _data_velocity;
                data.value += ((_data_velocity = data.velocity) !== null && _data_velocity !== void 0 ? _data_velocity : 0) * delta.factor;
            }
            break;
        case "decreasing":
            if (data.value <= minValue) {
                data.status = "increasing";
                if (!data.loops) {
                    data.loops = 0;
                }
                data.loops++;
            } else {
                var _data_velocity1;
                data.value -= ((_data_velocity1 = data.velocity) !== null && _data_velocity1 !== void 0 ? _data_velocity1 : 0) * delta.factor;
            }
            break;
    }
    if (data.velocity && data.decay !== 1) {
        data.velocity *= decay;
    }
    checkDestroy(particle, data.value, minValue, maxValue);
    if (!particle.destroyed) {
        data.value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(data.value, minValue, maxValue);
    }
}
}),
"[project]/node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "OpacityUpdater",
    ()=>OpacityUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$opacity$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-opacity/esm/Utils.js [app-client] (ecmascript)");
;
;
class OpacityUpdater {
    init(particle) {
        const opacityOptions = particle.options.opacity;
        particle.opacity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["initParticleNumericAnimationValue"])(opacityOptions, 1);
        const opacityAnimation = opacityOptions.animation;
        if (opacityAnimation.enable) {
            particle.opacity.velocity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(opacityAnimation.speed) / 100 * this.container.retina.reduceFactor;
            if (!opacityAnimation.sync) {
                particle.opacity.velocity *= (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
            }
        }
    }
    isEnabled(particle) {
        var _particle_opacity_maxLoops, _particle_opacity_maxLoops1, _particle_opacity_loops, _particle_opacity_maxLoops2;
        return !particle.destroyed && !particle.spawning && !!particle.opacity && particle.opacity.enable && (((_particle_opacity_maxLoops = particle.opacity.maxLoops) !== null && _particle_opacity_maxLoops !== void 0 ? _particle_opacity_maxLoops : 0) <= 0 || ((_particle_opacity_maxLoops1 = particle.opacity.maxLoops) !== null && _particle_opacity_maxLoops1 !== void 0 ? _particle_opacity_maxLoops1 : 0) > 0 && ((_particle_opacity_loops = particle.opacity.loops) !== null && _particle_opacity_loops !== void 0 ? _particle_opacity_loops : 0) < ((_particle_opacity_maxLoops2 = particle.opacity.maxLoops) !== null && _particle_opacity_maxLoops2 !== void 0 ? _particle_opacity_maxLoops2 : 0));
    }
    reset(particle) {
        if (particle.opacity) {
            particle.opacity.time = 0;
            particle.opacity.loops = 0;
        }
    }
    update(particle, delta) {
        if (!this.isEnabled(particle)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$opacity$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateOpacity"])(particle, delta);
    }
    constructor(container){
        this.container = container;
    }
}
}),
"[project]/node_modules/tsparticles-updater-opacity/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadOpacityUpdater",
    ()=>loadOpacityUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$opacity$2f$esm$2f$OpacityUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js [app-client] (ecmascript)");
;
async function loadOpacityUpdater(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addParticleUpdater("opacity", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$opacity$2f$esm$2f$OpacityUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OpacityUpdater"](container), refresh);
}
}),
"[project]/node_modules/tsparticles-updater-out-modes/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "bounceHorizontal",
    ()=>bounceHorizontal,
    "bounceVertical",
    ()=>bounceVertical
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function bounceHorizontal(data) {
    if (data.outMode !== "bounce" && data.outMode !== "bounce-horizontal" && data.outMode !== "bounceHorizontal" && data.outMode !== "split" || data.direction !== "left" && data.direction !== "right") {
        return;
    }
    if (data.bounds.right < 0 && data.direction === "left") {
        data.particle.position.x = data.size + data.offset.x;
    } else if (data.bounds.left > data.canvasSize.width && data.direction === "right") {
        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;
    }
    const velocity = data.particle.velocity.x;
    let bounced = false;
    if (data.direction === "right" && data.bounds.right >= data.canvasSize.width && velocity > 0 || data.direction === "left" && data.bounds.left <= 0 && velocity < 0) {
        const newVelocity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getValue"])(data.particle.options.bounce.horizontal);
        data.particle.velocity.x *= -newVelocity;
        bounced = true;
    }
    if (!bounced) {
        return;
    }
    const minPos = data.offset.x + data.size;
    if (data.bounds.right >= data.canvasSize.width && data.direction === "right") {
        data.particle.position.x = data.canvasSize.width - minPos;
    } else if (data.bounds.left <= 0 && data.direction === "left") {
        data.particle.position.x = minPos;
    }
    if (data.outMode === "split") {
        data.particle.destroy();
    }
}
function bounceVertical(data) {
    if (data.outMode !== "bounce" && data.outMode !== "bounce-vertical" && data.outMode !== "bounceVertical" && data.outMode !== "split" || data.direction !== "bottom" && data.direction !== "top") {
        return;
    }
    if (data.bounds.bottom < 0 && data.direction === "top") {
        data.particle.position.y = data.size + data.offset.y;
    } else if (data.bounds.top > data.canvasSize.height && data.direction === "bottom") {
        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;
    }
    const velocity = data.particle.velocity.y;
    let bounced = false;
    if (data.direction === "bottom" && data.bounds.bottom >= data.canvasSize.height && velocity > 0 || data.direction === "top" && data.bounds.top <= 0 && velocity < 0) {
        const newVelocity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getValue"])(data.particle.options.bounce.vertical);
        data.particle.velocity.y *= -newVelocity;
        bounced = true;
    }
    if (!bounced) {
        return;
    }
    const minPos = data.offset.y + data.size;
    if (data.bounds.bottom >= data.canvasSize.height && data.direction === "bottom") {
        data.particle.position.y = data.canvasSize.height - minPos;
    } else if (data.bounds.top <= 0 && data.direction === "top") {
        data.particle.position.y = minPos;
    }
    if (data.outMode === "split") {
        data.particle.destroy();
    }
}
}),
"[project]/node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "BounceOutMode",
    ()=>BounceOutMode
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-out-modes/esm/Utils.js [app-client] (ecmascript)");
;
;
class BounceOutMode {
    update(particle, direction, delta, outMode) {
        if (!this.modes.includes(outMode)) {
            return;
        }
        const container = this.container;
        let handled = false;
        for (const [, plugin] of container.plugins){
            if (plugin.particleBounce !== undefined) {
                handled = plugin.particleBounce(particle, delta, direction);
            }
            if (handled) {
                break;
            }
        }
        if (handled) {
            return;
        }
        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calculateBounds"])(pos, size), canvasSize = container.canvas.size;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bounceHorizontal"])({
            particle,
            outMode,
            direction,
            bounds,
            canvasSize,
            offset,
            size
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bounceVertical"])({
            particle,
            outMode,
            direction,
            bounds,
            canvasSize,
            offset,
            size
        });
    }
    constructor(container){
        this.container = container;
        this.modes = [
            "bounce",
            "bounce-vertical",
            "bounce-horizontal",
            "bounceVertical",
            "bounceHorizontal",
            "split"
        ];
    }
}
}),
"[project]/node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "DestroyOutMode",
    ()=>DestroyOutMode
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
class DestroyOutMode {
    update(particle, direction, _delta, outMode) {
        if (!this.modes.includes(outMode)) {
            return;
        }
        const container = this.container;
        switch(particle.outType){
            case "normal":
            case "outside":
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPointInside"])(particle.position, container.canvas.size, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin, particle.getRadius(), direction)) {
                    return;
                }
                break;
            case "inside":
                {
                    const { dx, dy } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(particle.position, particle.moveCenter);
                    const { x: vx, y: vy } = particle.velocity;
                    if (vx < 0 && dx > particle.moveCenter.radius || vy < 0 && dy > particle.moveCenter.radius || vx >= 0 && dx < -particle.moveCenter.radius || vy >= 0 && dy < -particle.moveCenter.radius) {
                        return;
                    }
                    break;
                }
        }
        container.particles.remove(particle, undefined, true);
    }
    constructor(container){
        this.container = container;
        this.modes = [
            "destroy"
        ];
    }
}
}),
"[project]/node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "NoneOutMode",
    ()=>NoneOutMode
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
class NoneOutMode {
    update(particle, direction, delta, outMode) {
        if (!this.modes.includes(outMode)) {
            return;
        }
        if (particle.options.move.distance.horizontal && (direction === "left" || direction === "right") || particle.options.move.distance.vertical && (direction === "top" || direction === "bottom")) {
            return;
        }
        const gravityOptions = particle.options.move.gravity, container = this.container;
        const canvasSize = container.canvas.size;
        const pRadius = particle.getRadius();
        if (!gravityOptions.enable) {
            if (particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius || particle.velocity.y < 0 && particle.position.y >= -pRadius || particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius || particle.velocity.x < 0 && particle.position.x >= -pRadius) {
                return;
            }
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPointInside"])(particle.position, container.canvas.size, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin, pRadius, direction)) {
                container.particles.remove(particle);
            }
        } else {
            const position = particle.position;
            if (!gravityOptions.inverse && position.y > canvasSize.height + pRadius && direction === "bottom" || gravityOptions.inverse && position.y < -pRadius && direction === "top") {
                container.particles.remove(particle);
            }
        }
    }
    constructor(container){
        this.container = container;
        this.modes = [
            "none"
        ];
    }
}
}),
"[project]/node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "OutOutMode",
    ()=>OutOutMode
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class OutOutMode {
    update(particle, direction, delta, outMode) {
        if (!this.modes.includes(outMode)) {
            return;
        }
        const container = this.container;
        switch(particle.outType){
            case "inside":
                {
                    const { x: vx, y: vy } = particle.velocity;
                    const circVec = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin;
                    circVec.length = particle.moveCenter.radius;
                    circVec.angle = particle.velocity.angle + Math.PI;
                    circVec.addTo(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].create(particle.moveCenter));
                    const { dx, dy } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(particle.position, circVec);
                    if (vx <= 0 && dx >= 0 || vy <= 0 && dy >= 0 || vx >= 0 && dx <= 0 || vy >= 0 && dy <= 0) {
                        return;
                    }
                    particle.position.x = Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])({
                        min: 0,
                        max: container.canvas.size.width
                    }));
                    particle.position.y = Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])({
                        min: 0,
                        max: container.canvas.size.height
                    }));
                    const { dx: newDx, dy: newDy } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(particle.position, particle.moveCenter);
                    particle.direction = Math.atan2(-newDy, -newDx);
                    particle.velocity.angle = particle.direction;
                    break;
                }
            default:
                {
                    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPointInside"])(particle.position, container.canvas.size, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin, particle.getRadius(), direction)) {
                        return;
                    }
                    switch(particle.outType){
                        case "outside":
                            {
                                particle.position.x = Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])({
                                    min: -particle.moveCenter.radius,
                                    max: particle.moveCenter.radius
                                })) + particle.moveCenter.x;
                                particle.position.y = Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])({
                                    min: -particle.moveCenter.radius,
                                    max: particle.moveCenter.radius
                                })) + particle.moveCenter.y;
                                const { dx, dy } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(particle.position, particle.moveCenter);
                                if (particle.moveCenter.radius) {
                                    particle.direction = Math.atan2(dy, dx);
                                    particle.velocity.angle = particle.direction;
                                }
                                break;
                            }
                        case "normal":
                            {
                                const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {
                                    bottom: canvasSize.height + particle.getRadius() + particle.offset.y,
                                    left: -particle.getRadius() - particle.offset.x,
                                    right: canvasSize.width + particle.getRadius() + particle.offset.x,
                                    top: -particle.getRadius() - particle.offset.y
                                }, sizeValue = particle.getRadius(), nextBounds = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calculateBounds"])(particle.position, sizeValue);
                                if (direction === "right" && nextBounds.left > canvasSize.width + particle.offset.x) {
                                    particle.position.x = newPos.left;
                                    particle.initialPosition.x = particle.position.x;
                                    if (!wrap) {
                                        particle.position.y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * canvasSize.height;
                                        particle.initialPosition.y = particle.position.y;
                                    }
                                } else if (direction === "left" && nextBounds.right < -particle.offset.x) {
                                    particle.position.x = newPos.right;
                                    particle.initialPosition.x = particle.position.x;
                                    if (!wrap) {
                                        particle.position.y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * canvasSize.height;
                                        particle.initialPosition.y = particle.position.y;
                                    }
                                }
                                if (direction === "bottom" && nextBounds.top > canvasSize.height + particle.offset.y) {
                                    if (!wrap) {
                                        particle.position.x = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * canvasSize.width;
                                        particle.initialPosition.x = particle.position.x;
                                    }
                                    particle.position.y = newPos.top;
                                    particle.initialPosition.y = particle.position.y;
                                } else if (direction === "top" && nextBounds.bottom < -particle.offset.y) {
                                    if (!wrap) {
                                        particle.position.x = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * canvasSize.width;
                                        particle.initialPosition.x = particle.position.x;
                                    }
                                    particle.position.y = newPos.bottom;
                                    particle.initialPosition.y = particle.position.y;
                                }
                                break;
                            }
                    }
                    break;
                }
        }
    }
    constructor(container){
        this.container = container;
        this.modes = [
            "out"
        ];
    }
}
}),
"[project]/node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "OutOfCanvasUpdater",
    ()=>OutOfCanvasUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$BounceOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$DestroyOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$NoneOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$OutOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js [app-client] (ecmascript)");
;
;
;
;
class OutOfCanvasUpdater {
    init() {}
    isEnabled(particle) {
        return !particle.destroyed && !particle.spawning;
    }
    update(particle, delta) {
        const outModes = particle.options.move.outModes;
        var _outModes_bottom;
        this._updateOutMode(particle, delta, (_outModes_bottom = outModes.bottom) !== null && _outModes_bottom !== void 0 ? _outModes_bottom : outModes.default, "bottom");
        var _outModes_left;
        this._updateOutMode(particle, delta, (_outModes_left = outModes.left) !== null && _outModes_left !== void 0 ? _outModes_left : outModes.default, "left");
        var _outModes_right;
        this._updateOutMode(particle, delta, (_outModes_right = outModes.right) !== null && _outModes_right !== void 0 ? _outModes_right : outModes.default, "right");
        var _outModes_top;
        this._updateOutMode(particle, delta, (_outModes_top = outModes.top) !== null && _outModes_top !== void 0 ? _outModes_top : outModes.default, "top");
    }
    constructor(container){
        this.container = container;
        this._updateOutMode = (particle, delta, outMode, direction)=>{
            for (const updater of this.updaters){
                updater.update(particle, direction, delta, outMode);
            }
        };
        this.updaters = [
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$BounceOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BounceOutMode"](container),
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$DestroyOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DestroyOutMode"](container),
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$OutOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OutOutMode"](container),
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$NoneOutMode$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["NoneOutMode"](container)
        ];
    }
}
}),
"[project]/node_modules/tsparticles-updater-out-modes/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadOutModesUpdater",
    ()=>loadOutModesUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$OutOfCanvasUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js [app-client] (ecmascript)");
;
async function loadOutModesUpdater(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addParticleUpdater("outModes", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$OutOfCanvasUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OutOfCanvasUpdater"](container), refresh);
}
}),
"[project]/node_modules/tsparticles-updater-size/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "updateSize",
    ()=>updateSize
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function checkDestroy(particle, value, minValue, maxValue) {
    switch(particle.options.size.animation.destroy){
        case "max":
            if (value >= maxValue) {
                particle.destroy();
            }
            break;
        case "min":
            if (value <= minValue) {
                particle.destroy();
            }
            break;
    }
}
function updateSize(particle, delta) {
    const data = particle.size;
    var _data_maxLoops, _data_loops, _data_maxLoops1;
    if (particle.destroyed || !data || !data.enable || ((_data_maxLoops = data.maxLoops) !== null && _data_maxLoops !== void 0 ? _data_maxLoops : 0) > 0 && ((_data_loops = data.loops) !== null && _data_loops !== void 0 ? _data_loops : 0) > ((_data_maxLoops1 = data.maxLoops) !== null && _data_maxLoops1 !== void 0 ? _data_maxLoops1 : 0)) {
        return;
    }
    var _data_velocity, _data_decay;
    const sizeVelocity = ((_data_velocity = data.velocity) !== null && _data_velocity !== void 0 ? _data_velocity : 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = (_data_decay = data.decay) !== null && _data_decay !== void 0 ? _data_decay : 1;
    if (!data.time) {
        data.time = 0;
    }
    var _data_delayTime, _data_delayTime1;
    if (((_data_delayTime = data.delayTime) !== null && _data_delayTime !== void 0 ? _data_delayTime : 0) > 0 && data.time < ((_data_delayTime1 = data.delayTime) !== null && _data_delayTime1 !== void 0 ? _data_delayTime1 : 0)) {
        data.time += delta.value;
    }
    var _data_delayTime2, _data_delayTime3;
    if (((_data_delayTime2 = data.delayTime) !== null && _data_delayTime2 !== void 0 ? _data_delayTime2 : 0) > 0 && data.time < ((_data_delayTime3 = data.delayTime) !== null && _data_delayTime3 !== void 0 ? _data_delayTime3 : 0)) {
        return;
    }
    switch(data.status){
        case "increasing":
            if (data.value >= maxValue) {
                data.status = "decreasing";
                if (!data.loops) {
                    data.loops = 0;
                }
                data.loops++;
            } else {
                data.value += sizeVelocity;
            }
            break;
        case "decreasing":
            if (data.value <= minValue) {
                data.status = "increasing";
                if (!data.loops) {
                    data.loops = 0;
                }
                data.loops++;
            } else {
                data.value -= sizeVelocity;
            }
    }
    if (data.velocity && decay !== 1) {
        data.velocity *= decay;
    }
    checkDestroy(particle, data.value, minValue, maxValue);
    if (!particle.destroyed) {
        data.value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(data.value, minValue, maxValue);
    }
}
}),
"[project]/node_modules/tsparticles-updater-size/esm/SizeUpdater.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "SizeUpdater",
    ()=>SizeUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$size$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-size/esm/Utils.js [app-client] (ecmascript)");
;
;
class SizeUpdater {
    init(particle) {
        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;
        if (sizeAnimation.enable) {
            var _particle_retina_sizeAnimationSpeed;
            particle.size.velocity = ((_particle_retina_sizeAnimationSpeed = particle.retina.sizeAnimationSpeed) !== null && _particle_retina_sizeAnimationSpeed !== void 0 ? _particle_retina_sizeAnimationSpeed : container.retina.sizeAnimationSpeed) / 100 * container.retina.reduceFactor;
            if (!sizeAnimation.sync) {
                particle.size.velocity *= (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
            }
        }
    }
    isEnabled(particle) {
        var _particle_size_maxLoops, _particle_size_maxLoops1, _particle_size_loops, _particle_size_maxLoops2;
        return !particle.destroyed && !particle.spawning && particle.size.enable && (((_particle_size_maxLoops = particle.size.maxLoops) !== null && _particle_size_maxLoops !== void 0 ? _particle_size_maxLoops : 0) <= 0 || ((_particle_size_maxLoops1 = particle.size.maxLoops) !== null && _particle_size_maxLoops1 !== void 0 ? _particle_size_maxLoops1 : 0) > 0 && ((_particle_size_loops = particle.size.loops) !== null && _particle_size_loops !== void 0 ? _particle_size_loops : 0) < ((_particle_size_maxLoops2 = particle.size.maxLoops) !== null && _particle_size_maxLoops2 !== void 0 ? _particle_size_maxLoops2 : 0));
    }
    reset(particle) {
        particle.size.loops = 0;
    }
    update(particle, delta) {
        if (!this.isEnabled(particle)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$size$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateSize"])(particle, delta);
    }
}
}),
"[project]/node_modules/tsparticles-updater-size/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadSizeUpdater",
    ()=>loadSizeUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$size$2f$esm$2f$SizeUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-size/esm/SizeUpdater.js [app-client] (ecmascript)");
;
async function loadSizeUpdater(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addParticleUpdater("size", ()=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$size$2f$esm$2f$SizeUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SizeUpdater"](), refresh);
}
}),
"[project]/node_modules/tsparticles-basic/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadBasic",
    ()=>loadBasic
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-move-base/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$circle$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-circle/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$color$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-color/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$opacity$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-opacity/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-out-modes/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$size$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-size/esm/index.js [app-client] (ecmascript)");
;
;
;
;
;
;
async function loadBasic(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$base$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadBaseMover"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$circle$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadCircleShape"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$color$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadColorUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$opacity$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadOpacityUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$out$2d$modes$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadOutModesUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$size$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadSizeUpdater"])(engine, false);
    await engine.refresh(refresh);
}
}),
"[project]/node_modules/tsparticles-plugin-easing-quad/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadEasingQuadPlugin",
    ()=>loadEasingQuadPlugin
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
async function loadEasingQuadPlugin() {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEasing"])("ease-in-quad", (value)=>value ** 2);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEasing"])("ease-out-quad", (value)=>1 - (1 - value) ** 2);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addEasing"])("ease-in-out-quad", (value)=>value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2);
}
}),
"[project]/node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Attract",
    ()=>Attract
]);
class Attract {
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = data.distance;
        }
        if (data.duration !== undefined) {
            this.duration = data.duration;
        }
        if (data.easing !== undefined) {
            this.easing = data.easing;
        }
        if (data.factor !== undefined) {
            this.factor = data.factor;
        }
        if (data.maxSpeed !== undefined) {
            this.maxSpeed = data.maxSpeed;
        }
        if (data.speed !== undefined) {
            this.speed = data.speed;
        }
    }
    constructor(){
        this.distance = 200;
        this.duration = 0.4;
        this.easing = "ease-out-quad";
        this.factor = 1;
        this.maxSpeed = 50;
        this.speed = 1;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-attract/esm/Attractor.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Attractor",
    ()=>Attractor
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$attract$2f$esm$2f$Options$2f$Classes$2f$Attract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js [app-client] (ecmascript)");
;
;
class Attractor extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    clear() {}
    init() {
        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;
        if (!attract) {
            return;
        }
        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;
    }
    async interact() {
        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseMoveEvent"], events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;
        if (mouseMoveStatus && hoverEnabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("attract", hoverMode)) {
            this._hoverAttract();
        } else if (clickEnabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("attract", clickMode)) {
            this._clickAttract();
        }
    }
    isEnabled(particle) {
        var _particle_interactivity;
        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_particle_interactivity = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _particle_interactivity !== void 0 ? _particle_interactivity : options.interactivity).events;
        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {
            return false;
        }
        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("attract", hoverMode) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("attract", clickMode);
    }
    loadModeOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.attract) {
            options.attract = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$attract$2f$esm$2f$Options$2f$Classes$2f$Attract$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Attract"]();
        }
        for (const source of sources){
            options.attract.load(source === null || source === void 0 ? void 0 : source.attract);
        }
    }
    reset() {}
    constructor(engine, container){
        super(container);
        this._clickAttract = ()=>{
            const container = this.container;
            if (!container.attract) {
                container.attract = {
                    particles: []
                };
            }
            const { attract } = container;
            if (!attract.finish) {
                if (!attract.count) {
                    attract.count = 0;
                }
                attract.count++;
                if (attract.count === container.particles.count) {
                    attract.finish = true;
                }
            }
            if (attract.clicking) {
                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;
                if (!attractRadius || attractRadius < 0 || !mousePos) {
                    return;
                }
                this._processAttract(mousePos, attractRadius, new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](mousePos.x, mousePos.y, attractRadius));
            } else if (attract.clicking === false) {
                attract.particles = [];
            }
            return;
        };
        this._hoverAttract = ()=>{
            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;
            if (!attractRadius || attractRadius < 0 || !mousePos) {
                return;
            }
            this._processAttract(mousePos, attractRadius, new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](mousePos.x, mousePos.y, attractRadius));
        };
        this._processAttract = (position, attractRadius, area)=>{
            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;
            if (!attractOptions) {
                return;
            }
            const query = container.particles.quadTree.query(area, (p)=>this.isEnabled(p));
            for (const particle of query){
                const { dx, dy, distance } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(particle.position, position);
                const velocity = attractOptions.speed * attractOptions.factor;
                const attractFactor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEasing"])(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);
                const normVec = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].create(distance === 0 ? velocity : dx / distance * attractFactor, distance === 0 ? velocity : dy / distance * attractFactor);
                particle.position.subFrom(normVec);
            }
        };
        this._engine = engine;
        if (!container.attract) {
            container.attract = {
                particles: []
            };
        }
        this.handleClickMode = (mode)=>{
            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;
            if (!attract || mode !== "attract") {
                return;
            }
            if (!container.attract) {
                container.attract = {
                    particles: []
                };
            }
            container.attract.clicking = true;
            container.attract.count = 0;
            for (const particle of container.attract.particles){
                if (!this.isEnabled(particle)) {
                    continue;
                }
                particle.velocity.setTo(particle.initialVelocity);
            }
            container.attract.particles = [];
            container.attract.finish = false;
            setTimeout(()=>{
                if (container.destroyed) {
                    return;
                }
                if (!container.attract) {
                    container.attract = {
                        particles: []
                    };
                }
                container.attract.clicking = false;
            }, attract.duration * 1000);
        };
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-attract/esm/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadExternalAttractInteraction",
    ()=>loadExternalAttractInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$attract$2f$esm$2f$Attractor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-attract/esm/Attractor.js [app-client] (ecmascript)");
;
async function loadExternalAttractInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addInteractor("externalAttract", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$attract$2f$esm$2f$Attractor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Attractor"](engine, container), refresh);
}
;
;
}),
"[project]/node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Bounce",
    ()=>Bounce
]);
class Bounce {
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = data.distance;
        }
    }
    constructor(){
        this.distance = 200;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Bouncer",
    ()=>Bouncer
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bounce$2f$esm$2f$Options$2f$Classes$2f$Bounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js [app-client] (ecmascript)");
;
;
class Bouncer extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    clear() {}
    init() {
        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;
        if (!bounce) {
            return;
        }
        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;
    }
    async interact() {
        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseMoveEvent"], hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;
        if (mouseMoveStatus && hoverEnabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("bounce", hoverMode)) {
            this._processMouseBounce();
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["divModeExecute"])("bounce", divs, (selector, div)=>this._singleSelectorBounce(selector, div));
        }
    }
    isEnabled(particle) {
        var _particle_interactivity;
        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_particle_interactivity = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _particle_interactivity !== void 0 ? _particle_interactivity : options.interactivity).events, divs = events.onDiv;
        return mouse.position && events.onHover.enable && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("bounce", events.onHover.mode) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDivModeEnabled"])("bounce", divs);
    }
    loadModeOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.bounce) {
            options.bounce = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bounce$2f$esm$2f$Options$2f$Classes$2f$Bounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Bounce"]();
        }
        for (const source of sources){
            options.bounce.load(source === null || source === void 0 ? void 0 : source.bounce);
        }
    }
    reset() {}
    constructor(container){
        super(container);
        this._processBounce = (position, radius, area)=>{
            const query = this.container.particles.quadTree.query(area, (p)=>this.isEnabled(p));
            for (const particle of query){
                if (area instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"]) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["circleBounce"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["circleBounceDataFromParticle"])(particle), {
                        position,
                        radius,
                        mass: radius ** 2 * Math.PI / 2,
                        velocity: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin,
                        factor: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].origin
                    });
                } else if (area instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rectangle"]) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rectBounce"])(particle, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calculateBounds"])(position, radius));
                }
            }
        };
        this._processMouseBounce = ()=>{
            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;
            if (!radius || radius < 0 || !mousePos) {
                return;
            }
            this._processBounce(mousePos, radius, new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](mousePos.x, mousePos.y, radius + tolerance));
        };
        this._singleSelectorBounce = (selector, div)=>{
            const container = this.container, query = document.querySelectorAll(selector);
            if (!query.length) {
                return;
            }
            query.forEach((item)=>{
                const elem = item, pxRatio = container.retina.pixelRatio, pos = {
                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,
                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio
                }, radius = elem.offsetWidth / 2 * pxRatio, tolerance = 10 * pxRatio, area = div.type === "circle" ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](pos.x, pos.y, radius + tolerance) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rectangle"](elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);
                this._processBounce(pos, radius, area);
            });
        };
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-bounce/esm/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadExternalBounceInteraction",
    ()=>loadExternalBounceInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bounce$2f$esm$2f$Bouncer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js [app-client] (ecmascript)");
;
async function loadExternalBounceInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addInteractor("externalBounce", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bounce$2f$esm$2f$Bouncer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Bouncer"](container), refresh);
}
;
;
}),
"[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "BubbleBase",
    ()=>BubbleBase
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
class BubbleBase {
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = data.distance;
        }
        if (data.duration !== undefined) {
            this.duration = data.duration;
        }
        if (data.mix !== undefined) {
            this.mix = data.mix;
        }
        if (data.opacity !== undefined) {
            this.opacity = data.opacity;
        }
        if (data.color !== undefined) {
            const sourceColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(this.color) ? undefined : this.color;
            this.color = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(data.color, (color)=>{
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(sourceColor, color);
            });
        }
        if (data.size !== undefined) {
            this.size = data.size;
        }
    }
    constructor(){
        this.distance = 200;
        this.duration = 0.4;
        this.mix = false;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "BubbleDiv",
    ()=>BubbleDiv
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$BubbleBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js [app-client] (ecmascript)");
;
;
class BubbleDiv extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$BubbleBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BubbleBase"] {
    get ids() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(this.selectors, (t)=>t.replace("#", ""));
    }
    set ids(value) {
        this.selectors = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(value, (t)=>"#".concat(t));
    }
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        if (data.ids !== undefined) {
            this.ids = data.ids;
        }
        if (data.selectors !== undefined) {
            this.selectors = data.selectors;
        }
    }
    constructor(){
        super();
        this.selectors = [];
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Bubble",
    ()=>Bubble
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$BubbleBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$BubbleDiv$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js [app-client] (ecmascript)");
;
;
;
class Bubble extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$BubbleBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BubbleBase"] {
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        this.divs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(data.divs, (div)=>{
            const tmp = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$BubbleDiv$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BubbleDiv"]();
            tmp.load(div);
            return tmp;
        });
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-bubble/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "calculateBubbleValue",
    ()=>calculateBubbleValue
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {
    if (modeValue >= optionsValue) {
        const value = particleValue + (modeValue - optionsValue) * ratio;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(value, particleValue, modeValue);
    } else if (modeValue < optionsValue) {
        const value = particleValue - (optionsValue - modeValue) * ratio;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(value, modeValue, particleValue);
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Bubbler",
    ()=>Bubbler
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$Bubble$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-bubble/esm/Utils.js [app-client] (ecmascript)");
;
;
;
class Bubbler extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    clear(particle, delta, force) {
        if (particle.bubble.inRange && !force) {
            return;
        }
        delete particle.bubble.div;
        delete particle.bubble.opacity;
        delete particle.bubble.radius;
        delete particle.bubble.color;
    }
    init() {
        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;
        if (!bubble) {
            return;
        }
        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;
        if (bubble.size !== undefined) {
            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;
        }
    }
    async interact(delta) {
        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;
        if (hoverEnabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("bubble", hoverMode)) {
            this._hoverBubble();
        } else if (clickEnabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("bubble", clickMode)) {
            this._clickBubble();
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["divModeExecute"])("bubble", divs, (selector, div)=>this._singleSelectorHover(delta, selector, div));
        }
    }
    isEnabled(particle) {
        var _particle_interactivity;
        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_particle_interactivity = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _particle_interactivity !== void 0 ? _particle_interactivity : options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDivModeEnabled"])("bubble", onDiv);
        if (!(divBubble || onHover.enable && mouse.position || onClick.enable && mouse.clickPosition)) {
            return false;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("bubble", onHover.mode) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("bubble", onClick.mode) || divBubble;
    }
    loadModeOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.bubble) {
            options.bubble = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Options$2f$Classes$2f$Bubble$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Bubble"]();
        }
        for (const source of sources){
            options.bubble.load(source === null || source === void 0 ? void 0 : source.bubble);
        }
    }
    reset(particle) {
        particle.bubble.inRange = false;
    }
    constructor(container){
        super(container);
        this._clickBubble = ()=>{
            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;
            if (!bubbleOptions || !mouseClickPos) {
                return;
            }
            if (!container.bubble) {
                container.bubble = {};
            }
            const distance = container.retina.bubbleModeDistance;
            if (!distance || distance < 0) {
                return;
            }
            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p)=>this.isEnabled(p)), { bubble } = container;
            for (const particle of query){
                var _particle_opacity;
                if (!bubble.clicking) {
                    continue;
                }
                particle.bubble.inRange = !bubble.durationEnd;
                const pos = particle.getPosition(), distMouse = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;
                if (timeSpent > bubbleOptions.duration) {
                    bubble.durationEnd = true;
                }
                if (timeSpent > bubbleOptions.duration * 2) {
                    bubble.clicking = false;
                    bubble.durationEnd = false;
                }
                const sizeData = {
                    bubbleObj: {
                        optValue: container.retina.bubbleModeSize,
                        value: particle.bubble.radius
                    },
                    particlesObj: {
                        optValue: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeMax"])(particle.options.size.value) * container.retina.pixelRatio,
                        value: particle.size.value
                    },
                    type: "size"
                };
                this._process(particle, distMouse, timeSpent, sizeData);
                var _particle_opacity_value;
                const opacityData = {
                    bubbleObj: {
                        optValue: bubbleOptions.opacity,
                        value: particle.bubble.opacity
                    },
                    particlesObj: {
                        optValue: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeMax"])(particle.options.opacity.value),
                        value: (_particle_opacity_value = (_particle_opacity = particle.opacity) === null || _particle_opacity === void 0 ? void 0 : _particle_opacity.value) !== null && _particle_opacity_value !== void 0 ? _particle_opacity_value : 1
                    },
                    type: "opacity"
                };
                this._process(particle, distMouse, timeSpent, opacityData);
                if (!bubble.durationEnd && distMouse <= distance) {
                    this._hoverBubbleColor(particle, distMouse);
                } else {
                    delete particle.bubble.color;
                }
            }
        };
        this._hoverBubble = ()=>{
            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;
            if (!distance || distance < 0 || mousePos === undefined) {
                return;
            }
            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p)=>this.isEnabled(p));
            for (const particle of query){
                particle.bubble.inRange = true;
                const pos = particle.getPosition(), pointDistance = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos, mousePos), ratio = 1 - pointDistance / distance;
                if (pointDistance <= distance) {
                    if (ratio >= 0 && container.interactivity.status === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseMoveEvent"]) {
                        this._hoverBubbleSize(particle, ratio);
                        this._hoverBubbleOpacity(particle, ratio);
                        this._hoverBubbleColor(particle, ratio);
                    }
                } else {
                    this.reset(particle);
                }
                if (container.interactivity.status === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseLeaveEvent"]) {
                    this.reset(particle);
                }
            }
        };
        this._hoverBubbleColor = (particle, ratio, divBubble)=>{
            const options = this.container.actualOptions, bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;
            if (!bubbleOptions) {
                return;
            }
            if (!particle.bubble.finalColor) {
                const modeColor = bubbleOptions.color;
                if (!modeColor) {
                    return;
                }
                const bubbleColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(modeColor);
                particle.bubble.finalColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToHsl"])(bubbleColor);
            }
            if (!particle.bubble.finalColor) {
                return;
            }
            if (bubbleOptions.mix) {
                particle.bubble.color = undefined;
                const pColor = particle.getFillColor();
                particle.bubble.color = pColor ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rgbToHsl"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["colorMix"])(pColor, particle.bubble.finalColor, 1 - ratio, ratio)) : particle.bubble.finalColor;
            } else {
                particle.bubble.color = particle.bubble.finalColor;
            }
        };
        this._hoverBubbleOpacity = (particle, ratio, divBubble)=>{
            var _options_interactivity_modes_bubble, _particle_opacity;
            var _divBubble_opacity;
            const container = this.container, options = container.actualOptions, modeOpacity = (_divBubble_opacity = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _divBubble_opacity !== void 0 ? _divBubble_opacity : (_options_interactivity_modes_bubble = options.interactivity.modes.bubble) === null || _options_interactivity_modes_bubble === void 0 ? void 0 : _options_interactivity_modes_bubble.opacity;
            if (!modeOpacity) {
                return;
            }
            var _particle_opacity_value;
            const optOpacity = particle.options.opacity.value, pOpacity = (_particle_opacity_value = (_particle_opacity = particle.opacity) === null || _particle_opacity === void 0 ? void 0 : _particle_opacity.value) !== null && _particle_opacity_value !== void 0 ? _particle_opacity_value : 1, opacity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calculateBubbleValue"])(pOpacity, modeOpacity, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeMax"])(optOpacity), ratio);
            if (opacity !== undefined) {
                particle.bubble.opacity = opacity;
            }
        };
        this._hoverBubbleSize = (particle, ratio, divBubble)=>{
            const container = this.container, modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;
            if (modeSize === undefined) {
                return;
            }
            const optSize = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeMax"])(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["calculateBubbleValue"])(pSize, modeSize, optSize, ratio);
            if (size !== undefined) {
                particle.bubble.radius = size;
            }
        };
        this._process = (particle, distMouse, timeSpent, data)=>{
            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;
            if (!bubbleOptions || bubbleParam === undefined) {
                return;
            }
            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;
            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {
                return;
            }
            if (!container.bubble) {
                container.bubble = {};
            }
            if (container.bubble.durationEnd) {
                if (pObjBubble) {
                    if (type === "size") {
                        delete particle.bubble.radius;
                    }
                    if (type === "opacity") {
                        delete particle.bubble.opacity;
                    }
                }
            } else {
                if (distMouse <= bubbleDistance) {
                    const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;
                    if (obj !== bubbleParam) {
                        const value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;
                        if (type === "size") {
                            particle.bubble.radius = value;
                        }
                        if (type === "opacity") {
                            particle.bubble.opacity = value;
                        }
                    }
                } else {
                    if (type === "size") {
                        delete particle.bubble.radius;
                    }
                    if (type === "opacity") {
                        delete particle.bubble.opacity;
                    }
                }
            }
        };
        this._singleSelectorHover = (delta, selector, div)=>{
            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;
            if (!bubble || !selectors.length) {
                return;
            }
            selectors.forEach((item)=>{
                const elem = item, pxRatio = container.retina.pixelRatio, pos = {
                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,
                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio
                }, repulseRadius = elem.offsetWidth / 2 * pxRatio, area = div.type === "circle" ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](pos.x, pos.y, repulseRadius) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rectangle"](elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p)=>this.isEnabled(p));
                for (const particle of query){
                    if (!area.contains(particle.getPosition())) {
                        continue;
                    }
                    particle.bubble.inRange = true;
                    const divs = bubble.divs, divBubble = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["divMode"])(divs, elem);
                    if (!particle.bubble.div || particle.bubble.div !== elem) {
                        this.clear(particle, delta, true);
                        particle.bubble.div = elem;
                    }
                    this._hoverBubbleSize(particle, 1, divBubble);
                    this._hoverBubbleOpacity(particle, 1, divBubble);
                    this._hoverBubbleColor(particle, 1, divBubble);
                }
            });
        };
        if (!container.bubble) {
            container.bubble = {};
        }
        this.handleClickMode = (mode)=>{
            if (mode !== "bubble") {
                return;
            }
            if (!container.bubble) {
                container.bubble = {};
            }
            container.bubble.clicking = true;
        };
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-bubble/esm/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadExternalBubbleInteraction",
    ()=>loadExternalBubbleInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Bubbler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js [app-client] (ecmascript)");
;
async function loadExternalBubbleInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addInteractor("externalBubble", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$Bubbler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Bubbler"](container), refresh);
}
;
;
;
;
;
;
}),
"[project]/node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "ConnectLinks",
    ()=>ConnectLinks
]);
class ConnectLinks {
    load(data) {
        if (!data) {
            return;
        }
        if (data.opacity !== undefined) {
            this.opacity = data.opacity;
        }
    }
    constructor(){
        this.opacity = 0.5;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Connect",
    ()=>Connect
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Options$2f$Classes$2f$ConnectLinks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js [app-client] (ecmascript)");
;
class Connect {
    get lineLinked() {
        return this.links;
    }
    set lineLinked(value) {
        this.links = value;
    }
    get line_linked() {
        return this.links;
    }
    set line_linked(value) {
        this.links = value;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = data.distance;
        }
        var _data_links, _ref;
        this.links.load((_ref = (_data_links = data.links) !== null && _data_links !== void 0 ? _data_links : data.lineLinked) !== null && _ref !== void 0 ? _ref : data.line_linked);
        if (data.radius !== undefined) {
            this.radius = data.radius;
        }
    }
    constructor(){
        this.distance = 80;
        this.links = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Options$2f$Classes$2f$ConnectLinks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ConnectLinks"]();
        this.radius = 60;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-connect/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "drawConnectLine",
    ()=>drawConnectLine,
    "drawConnection",
    ()=>drawConnection,
    "gradient",
    ()=>gradient,
    "lineStyle",
    ()=>lineStyle
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js [app-client] (ecmascript)");
;
function gradient(context, p1, p2, opacity) {
    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();
    if (!color1 || !color2) {
        return;
    }
    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["colorMix"])(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);
    grad.addColorStop(0, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromHsl"])(color1, opacity));
    grad.addColorStop(gradStop > 1 ? 1 : gradStop, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(midRgb, opacity));
    grad.addColorStop(1, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromHsl"])(color2, opacity));
    return grad;
}
function drawConnectLine(context, width, lineStyle, begin, end) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawLine"])(context, begin, end);
    context.lineWidth = width;
    context.strokeStyle = lineStyle;
    context.stroke();
}
function lineStyle(container, ctx, p1, p2) {
    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;
    if (!connectOptions) {
        return;
    }
    return gradient(ctx, p1, p2, connectOptions.links.opacity);
}
function drawConnection(container, p1, p2) {
    container.canvas.draw((ctx)=>{
        const ls = lineStyle(container, ctx, p1, p2);
        if (!ls) {
            return;
        }
        const pos1 = p1.getPosition(), pos2 = p2.getPosition();
        var _p1_retina_linksWidth;
        drawConnectLine(ctx, (_p1_retina_linksWidth = p1.retina.linksWidth) !== null && _p1_retina_linksWidth !== void 0 ? _p1_retina_linksWidth : 0, ls, pos1, pos2);
    });
}
}),
"[project]/node_modules/tsparticles-interaction-external-connect/esm/Connector.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Connector",
    ()=>Connector
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Options$2f$Classes$2f$Connect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-connect/esm/Utils.js [app-client] (ecmascript)");
;
;
;
class Connector extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    clear() {}
    init() {
        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;
        if (!connect) {
            return;
        }
        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;
        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;
    }
    async interact() {
        const container = this.container, options = container.actualOptions;
        if (options.interactivity.events.onHover.enable && container.interactivity.status === "pointermove") {
            const mousePos = container.interactivity.mouse.position;
            if (!container.retina.connectModeDistance || container.retina.connectModeDistance < 0 || !container.retina.connectModeRadius || container.retina.connectModeRadius < 0 || !mousePos) {
                return;
            }
            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p)=>this.isEnabled(p));
            let i = 0;
            for (const p1 of query){
                const pos1 = p1.getPosition();
                for (const p2 of query.slice(i + 1)){
                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);
                    if (xDiff < distMax && yDiff < distMax) {
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawConnection"])(container, p1, p2);
                    }
                }
                ++i;
            }
        }
    }
    isEnabled(particle) {
        var _particle_interactivity;
        const container = this.container, mouse = container.interactivity.mouse, events = ((_particle_interactivity = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _particle_interactivity !== void 0 ? _particle_interactivity : container.actualOptions.interactivity).events;
        if (!(events.onHover.enable && mouse.position)) {
            return false;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("connect", events.onHover.mode);
    }
    loadModeOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.connect) {
            options.connect = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Options$2f$Classes$2f$Connect$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Connect"]();
        }
        for (const source of sources){
            options.connect.load(source === null || source === void 0 ? void 0 : source.connect);
        }
    }
    reset() {}
    constructor(container){
        super(container);
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-connect/esm/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadExternalConnectInteraction",
    ()=>loadExternalConnectInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Connector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-connect/esm/Connector.js [app-client] (ecmascript)");
;
async function loadExternalConnectInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addInteractor("externalConnect", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$Connector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Connector"](container), refresh);
}
;
;
;
;
}),
"[project]/node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GrabLinks",
    ()=>GrabLinks
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
;
class GrabLinks {
    load(data) {
        if (!data) {
            return;
        }
        if (data.blink !== undefined) {
            this.blink = data.blink;
        }
        if (data.color !== undefined) {
            this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        }
        if (data.consent !== undefined) {
            this.consent = data.consent;
        }
        if (data.opacity !== undefined) {
            this.opacity = data.opacity;
        }
    }
    constructor(){
        this.blink = false;
        this.consent = false;
        this.opacity = 1;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Grab",
    ()=>Grab
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Options$2f$Classes$2f$GrabLinks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js [app-client] (ecmascript)");
;
class Grab {
    get lineLinked() {
        return this.links;
    }
    set lineLinked(value) {
        this.links = value;
    }
    get line_linked() {
        return this.links;
    }
    set line_linked(value) {
        this.links = value;
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = data.distance;
        }
        var _data_links, _ref;
        this.links.load((_ref = (_data_links = data.links) !== null && _data_links !== void 0 ? _data_links : data.lineLinked) !== null && _ref !== void 0 ? _ref : data.line_linked);
    }
    constructor(){
        this.distance = 100;
        this.links = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Options$2f$Classes$2f$GrabLinks$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GrabLinks"]();
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-grab/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "drawGrab",
    ()=>drawGrab,
    "drawGrabLine",
    ()=>drawGrabLine
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
;
function drawGrabLine(context, width, begin, end, colorLine, opacity) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawLine"])(context, begin, end);
    context.strokeStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(colorLine, opacity);
    context.lineWidth = width;
    context.stroke();
}
function drawGrab(container, particle, lineColor, opacity, mousePos) {
    container.canvas.draw((ctx)=>{
        const beginPos = particle.getPosition();
        var _particle_retina_linksWidth;
        drawGrabLine(ctx, (_particle_retina_linksWidth = particle.retina.linksWidth) !== null && _particle_retina_linksWidth !== void 0 ? _particle_retina_linksWidth : 0, beginPos, mousePos, lineColor, opacity);
    });
}
}),
"[project]/node_modules/tsparticles-interaction-external-grab/esm/Grabber.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Grabber",
    ()=>Grabber
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Options$2f$Classes$2f$Grab$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-grab/esm/Utils.js [app-client] (ecmascript)");
;
;
;
class Grabber extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    clear() {}
    init() {
        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;
        if (!grab) {
            return;
        }
        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;
    }
    async interact() {
        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;
        if (!interactivity.modes.grab || !interactivity.events.onHover.enable || container.interactivity.status !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseMoveEvent"]) {
            return;
        }
        const mousePos = container.interactivity.mouse.position;
        if (!mousePos) {
            return;
        }
        const distance = container.retina.grabModeDistance;
        if (!distance || distance < 0) {
            return;
        }
        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p)=>this.isEnabled(p));
        for (const particle of query){
            var _particle_options_links;
            const pos = particle.getPosition(), pointDistance = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos, mousePos);
            if (pointDistance > distance) {
                continue;
            }
            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - pointDistance * lineOpacity / distance;
            if (opacityLine <= 0) {
                continue;
            }
            var _grabLineOptions_color;
            const optColor = (_grabLineOptions_color = grabLineOptions.color) !== null && _grabLineOptions_color !== void 0 ? _grabLineOptions_color : (_particle_options_links = particle.options.links) === null || _particle_options_links === void 0 ? void 0 : _particle_options_links.color;
            if (!container.particles.grabLineColor && optColor) {
                const linksOptions = interactivity.modes.grab.links;
                container.particles.grabLineColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLinkRandomColor"])(optColor, linksOptions.blink, linksOptions.consent);
            }
            const colorLine = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLinkColor"])(particle, undefined, container.particles.grabLineColor);
            if (!colorLine) {
                continue;
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawGrab"])(container, particle, colorLine, opacityLine, mousePos);
        }
    }
    isEnabled(particle) {
        var _particle_interactivity;
        const container = this.container, mouse = container.interactivity.mouse, events = ((_particle_interactivity = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _particle_interactivity !== void 0 ? _particle_interactivity : container.actualOptions.interactivity).events;
        return events.onHover.enable && !!mouse.position && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("grab", events.onHover.mode);
    }
    loadModeOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.grab) {
            options.grab = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Options$2f$Classes$2f$Grab$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Grab"]();
        }
        for (const source of sources){
            options.grab.load(source === null || source === void 0 ? void 0 : source.grab);
        }
    }
    reset() {}
    constructor(container){
        super(container);
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-grab/esm/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadExternalGrabInteraction",
    ()=>loadExternalGrabInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Grabber$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-grab/esm/Grabber.js [app-client] (ecmascript)");
;
async function loadExternalGrabInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addInteractor("externalGrab", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$Grabber$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Grabber"](container), refresh);
}
;
;
;
;
}),
"[project]/node_modules/tsparticles-interaction-external-pause/esm/Pauser.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Pauser",
    ()=>Pauser
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
;
class Pauser extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    clear() {}
    init() {}
    async interact() {}
    isEnabled() {
        return true;
    }
    reset() {}
    constructor(container){
        super(container);
        this.handleClickMode = (mode)=>{
            if (mode !== "pause") {
                return;
            }
            const container = this.container;
            if (container.getAnimationStatus()) {
                container.pause();
            } else {
                container.play();
            }
        };
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-pause/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadExternalPauseInteraction",
    ()=>loadExternalPauseInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$pause$2f$esm$2f$Pauser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-pause/esm/Pauser.js [app-client] (ecmascript)");
;
async function loadExternalPauseInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addInteractor("externalPause", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$pause$2f$esm$2f$Pauser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Pauser"](container), refresh);
}
}),
"[project]/node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Push",
    ()=>Push
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class Push {
    get particles_nb() {
        return this.quantity;
    }
    set particles_nb(value) {
        this.quantity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(value);
    }
    load(data) {
        if (!data) {
            return;
        }
        if (data.default !== undefined) {
            this.default = data.default;
        }
        if (data.groups !== undefined) {
            this.groups = data.groups.map((t)=>t);
        }
        if (!this.groups.length) {
            this.default = true;
        }
        var _data_quantity;
        const quantity = (_data_quantity = data.quantity) !== null && _data_quantity !== void 0 ? _data_quantity : data.particles_nb;
        if (quantity !== undefined) {
            this.quantity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(quantity);
        }
    }
    constructor(){
        this.default = true;
        this.groups = [];
        this.quantity = 4;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-push/esm/Pusher.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Pusher",
    ()=>Pusher
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$push$2f$esm$2f$Options$2f$Classes$2f$Push$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js [app-client] (ecmascript)");
;
;
class Pusher extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    clear() {}
    init() {}
    async interact() {}
    isEnabled() {
        return true;
    }
    loadModeOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.push) {
            options.push = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$push$2f$esm$2f$Options$2f$Classes$2f$Push$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Push"]();
        }
        for (const source of sources){
            options.push.load(source === null || source === void 0 ? void 0 : source.push);
        }
    }
    reset() {}
    constructor(container){
        super(container);
        this.handleClickMode = (mode)=>{
            if (mode !== "push") {
                return;
            }
            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;
            if (!pushOptions) {
                return;
            }
            const quantity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(pushOptions.quantity);
            if (quantity <= 0) {
                return;
            }
            const group = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromArray"])([
                undefined,
                ...pushOptions.groups
            ]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;
            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);
        };
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-push/esm/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadExternalPushInteraction",
    ()=>loadExternalPushInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$push$2f$esm$2f$Pusher$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-push/esm/Pusher.js [app-client] (ecmascript)");
;
async function loadExternalPushInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addInteractor("externalPush", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$push$2f$esm$2f$Pusher$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Pusher"](container), refresh);
}
;
;
}),
"[project]/node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Remove",
    ()=>Remove
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class Remove {
    get particles_nb() {
        return this.quantity;
    }
    set particles_nb(value) {
        this.quantity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(value);
    }
    load(data) {
        if (!data) {
            return;
        }
        var _data_quantity;
        const quantity = (_data_quantity = data.quantity) !== null && _data_quantity !== void 0 ? _data_quantity : data.particles_nb;
        if (quantity !== undefined) {
            this.quantity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(quantity);
        }
    }
    constructor(){
        this.quantity = 2;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-remove/esm/Remover.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Remover",
    ()=>Remover
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$remove$2f$esm$2f$Options$2f$Classes$2f$Remove$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js [app-client] (ecmascript)");
;
;
class Remover extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    clear() {}
    init() {}
    async interact() {}
    isEnabled() {
        return true;
    }
    loadModeOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.remove) {
            options.remove = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$remove$2f$esm$2f$Options$2f$Classes$2f$Remove$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Remove"]();
        }
        for (const source of sources){
            options.remove.load(source === null || source === void 0 ? void 0 : source.remove);
        }
    }
    reset() {}
    constructor(container){
        super(container);
        this.handleClickMode = (mode)=>{
            const container = this.container, options = container.actualOptions;
            if (!options.interactivity.modes.remove || mode !== "remove") {
                return;
            }
            const removeNb = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(options.interactivity.modes.remove.quantity);
            container.particles.removeQuantity(removeNb);
        };
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-remove/esm/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadExternalRemoveInteraction",
    ()=>loadExternalRemoveInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$remove$2f$esm$2f$Remover$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-remove/esm/Remover.js [app-client] (ecmascript)");
;
async function loadExternalRemoveInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addInteractor("externalRemove", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$remove$2f$esm$2f$Remover$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Remover"](container), refresh);
}
;
;
}),
"[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "RepulseBase",
    ()=>RepulseBase
]);
class RepulseBase {
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = data.distance;
        }
        if (data.duration !== undefined) {
            this.duration = data.duration;
        }
        if (data.easing !== undefined) {
            this.easing = data.easing;
        }
        if (data.factor !== undefined) {
            this.factor = data.factor;
        }
        if (data.speed !== undefined) {
            this.speed = data.speed;
        }
        if (data.maxSpeed !== undefined) {
            this.maxSpeed = data.maxSpeed;
        }
    }
    constructor(){
        this.distance = 200;
        this.duration = 0.4;
        this.factor = 100;
        this.speed = 1;
        this.maxSpeed = 50;
        this.easing = "ease-out-quad";
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "RepulseDiv",
    ()=>RepulseDiv
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$RepulseBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js [app-client] (ecmascript)");
;
;
class RepulseDiv extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$RepulseBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RepulseBase"] {
    get ids() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(this.selectors, (t)=>t.replace("#", ""));
    }
    set ids(value) {
        this.selectors = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(value, (t)=>"#".concat(t));
    }
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        if (data.ids !== undefined) {
            this.ids = data.ids;
        }
        if (data.selectors !== undefined) {
            this.selectors = data.selectors;
        }
    }
    constructor(){
        super();
        this.selectors = [];
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Repulse",
    ()=>Repulse
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$RepulseBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$RepulseDiv$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js [app-client] (ecmascript)");
;
;
;
class Repulse extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$RepulseBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RepulseBase"] {
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        this.divs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(data.divs, (div)=>{
            const tmp = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$RepulseDiv$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RepulseDiv"]();
            tmp.load(div);
            return tmp;
        });
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Repulser",
    ()=>Repulser
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$Repulse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js [app-client] (ecmascript)");
;
;
class Repulser extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    clear() {}
    init() {
        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;
        if (!repulse) {
            return;
        }
        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;
    }
    async interact() {
        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mouseMoveEvent"], events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;
        if (mouseMoveStatus && hoverEnabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("repulse", hoverMode)) {
            this._hoverRepulse();
        } else if (clickEnabled && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("repulse", clickMode)) {
            this._clickRepulse();
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["divModeExecute"])("repulse", divs, (selector, div)=>this._singleSelectorRepulse(selector, div));
        }
    }
    isEnabled(particle) {
        var _particle_interactivity;
        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_particle_interactivity = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _particle_interactivity !== void 0 ? _particle_interactivity : options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isDivModeEnabled"])("repulse", divs);
        if (!(divRepulse || hover.enable && mouse.position || click.enable && mouse.clickPosition)) {
            return false;
        }
        const hoverMode = hover.mode, clickMode = click.mode;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("repulse", hoverMode) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("repulse", clickMode) || divRepulse;
    }
    loadModeOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.repulse) {
            options.repulse = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Options$2f$Classes$2f$Repulse$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Repulse"]();
        }
        for (const source of sources){
            options.repulse.load(source === null || source === void 0 ? void 0 : source.repulse);
        }
    }
    reset() {}
    constructor(engine, container){
        super(container);
        this._clickRepulse = ()=>{
            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;
            if (!repulseOptions) {
                return;
            }
            const repulse = container.repulse || {
                particles: []
            };
            if (!repulse.finish) {
                if (!repulse.count) {
                    repulse.count = 0;
                }
                repulse.count++;
                if (repulse.count === container.particles.count) {
                    repulse.finish = true;
                }
            }
            if (repulse.clicking) {
                const repulseDistance = container.retina.repulseModeDistance;
                if (!repulseDistance || repulseDistance < 0) {
                    return;
                }
                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;
                if (mouseClickPos === undefined) {
                    return;
                }
                const range = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p)=>this.isEnabled(p));
                for (const particle of query){
                    const { dx, dy, distance } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = -repulseRadius * velocity / d;
                    if (d <= repulseRadius) {
                        repulse.particles.push(particle);
                        const vect = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].create(dx, dy);
                        vect.length = force;
                        particle.velocity.setTo(vect);
                    }
                }
            } else if (repulse.clicking === false) {
                for (const particle of repulse.particles){
                    particle.velocity.setTo(particle.initialVelocity);
                }
                repulse.particles = [];
            }
        };
        this._hoverRepulse = ()=>{
            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;
            if (!repulseRadius || repulseRadius < 0 || !mousePos) {
                return;
            }
            this._processRepulse(mousePos, repulseRadius, new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](mousePos.x, mousePos.y, repulseRadius));
        };
        this._processRepulse = (position, repulseRadius, area, divRepulse)=>{
            const container = this.container, query = container.particles.quadTree.query(area, (p)=>this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;
            if (!repulseOptions) {
                return;
            }
            for (const particle of query){
                var _divRepulse_speed;
                const { dx, dy, distance } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(particle.position, position), velocity = ((_divRepulse_speed = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _divRepulse_speed !== void 0 ? _divRepulse_speed : repulseOptions.speed) * repulseOptions.factor, repulseFactor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getEasing"])(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Vector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Vector"].create(distance === 0 ? velocity : dx / distance * repulseFactor, distance === 0 ? velocity : dy / distance * repulseFactor);
                particle.position.addTo(normVec);
            }
        };
        this._singleSelectorRepulse = (selector, div)=>{
            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;
            if (!repulse) {
                return;
            }
            const query = document.querySelectorAll(selector);
            if (!query.length) {
                return;
            }
            query.forEach((item)=>{
                const elem = item, pxRatio = container.retina.pixelRatio, pos = {
                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,
                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio
                }, repulseRadius = elem.offsetWidth / 2 * pxRatio, area = div.type === "circle" ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](pos.x, pos.y, repulseRadius) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rectangle"](elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["divMode"])(divs, elem);
                this._processRepulse(pos, repulseRadius, area, divRepulse);
            });
        };
        this._engine = engine;
        if (!container.repulse) {
            container.repulse = {
                particles: []
            };
        }
        this.handleClickMode = (mode)=>{
            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;
            if (!repulseOpts || mode !== "repulse") {
                return;
            }
            if (!container.repulse) {
                container.repulse = {
                    particles: []
                };
            }
            const repulse = container.repulse;
            repulse.clicking = true;
            repulse.count = 0;
            for (const particle of container.repulse.particles){
                if (!this.isEnabled(particle)) {
                    continue;
                }
                particle.velocity.setTo(particle.initialVelocity);
            }
            repulse.particles = [];
            repulse.finish = false;
            setTimeout(()=>{
                if (container.destroyed) {
                    return;
                }
                repulse.clicking = false;
            }, repulseOpts.duration * 1000);
        };
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-repulse/esm/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadExternalRepulseInteraction",
    ()=>loadExternalRepulseInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Repulser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js [app-client] (ecmascript)");
;
async function loadExternalRepulseInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addInteractor("externalRepulse", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$Repulser$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Repulser"](engine, container), refresh);
}
;
;
;
;
;
;
}),
"[project]/node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Slow",
    ()=>Slow
]);
class Slow {
    load(data) {
        if (!data) {
            return;
        }
        if (data.factor !== undefined) {
            this.factor = data.factor;
        }
        if (data.radius !== undefined) {
            this.radius = data.radius;
        }
    }
    constructor(){
        this.factor = 3;
        this.radius = 200;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-slow/esm/Slower.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Slower",
    ()=>Slower
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$slow$2f$esm$2f$Options$2f$Classes$2f$Slow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js [app-client] (ecmascript)");
;
;
class Slower extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ExternalInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ExternalInteractorBase"] {
    clear(particle, delta, force) {
        if (particle.slow.inRange && !force) {
            return;
        }
        particle.slow.factor = 1;
    }
    init() {
        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;
        if (!slow) {
            return;
        }
        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;
    }
    async interact() {}
    isEnabled(particle) {
        var _particle_interactivity;
        const container = this.container, mouse = container.interactivity.mouse, events = ((_particle_interactivity = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _particle_interactivity !== void 0 ? _particle_interactivity : container.actualOptions.interactivity).events;
        return events.onHover.enable && !!mouse.position && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])("slow", events.onHover.mode);
    }
    loadModeOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.slow) {
            options.slow = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$slow$2f$esm$2f$Options$2f$Classes$2f$Slow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Slow"]();
        }
        for (const source of sources){
            options.slow.load(source === null || source === void 0 ? void 0 : source.slow);
        }
    }
    reset(particle) {
        particle.slow.inRange = false;
        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;
        if (!slowOptions || !radius || radius < 0 || !mousePos) {
            return;
        }
        const particlePos = particle.getPosition(), dist = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;
        if (dist > radius) {
            return;
        }
        slow.inRange = true;
        slow.factor = proximityFactor / slowFactor;
    }
    constructor(container){
        super(container);
    }
}
}),
"[project]/node_modules/tsparticles-interaction-external-slow/esm/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadExternalSlowInteraction",
    ()=>loadExternalSlowInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$slow$2f$esm$2f$Slower$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-slow/esm/Slower.js [app-client] (ecmascript)");
;
async function loadExternalSlowInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addInteractor("externalSlow", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$slow$2f$esm$2f$Slower$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Slower"](container), refresh);
}
;
;
}),
"[project]/node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "InterlaceOffsets",
    ()=>InterlaceOffsets,
    "InterlaceSteps",
    ()=>InterlaceSteps
]);
const InterlaceOffsets = [
    0,
    4,
    2,
    1
];
const InterlaceSteps = [
    8,
    8,
    4,
    2
];
}),
"[project]/node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "ByteStream",
    ()=>ByteStream
]);
class ByteStream {
    getString(count) {
        const slice = this.data.slice(this.pos, this.pos + count);
        this.pos += slice.length;
        return slice.reduce((acc, curr)=>acc + String.fromCharCode(curr), "");
    }
    nextByte() {
        return this.data[this.pos++];
    }
    nextTwoBytes() {
        this.pos += 2;
        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);
    }
    readSubBlocks() {
        let blockString = "", size = 0;
        do {
            size = this.data[this.pos++];
            for(let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])){}
        }while (size !== 0)
        return blockString;
    }
    readSubBlocksBin() {
        let size = 0, len = 0;
        for(let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1){
            len += size;
        }
        const blockData = new Uint8Array(len);
        for(let i = 0; (size = this.data[this.pos++]) !== 0;){
            for(let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]){}
        }
        return blockData;
    }
    skipSubBlocks() {
        for(; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1){}
        this.pos++;
    }
    constructor(bytes){
        this.pos = 0;
        this.data = new Uint8ClampedArray(bytes);
    }
}
}),
"[project]/node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "decodeGIF",
    ()=>decodeGIF,
    "getGIFLoopAmount",
    ()=>getGIFLoopAmount
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$ByteStream$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js [app-client] (ecmascript)");
;
;
function parseColorTable(byteStream, count) {
    const colors = [];
    for(let i = 0; i < count; i++){
        colors.push({
            r: byteStream.data[byteStream.pos],
            g: byteStream.data[byteStream.pos + 1],
            b: byteStream.data[byteStream.pos + 2]
        });
        byteStream.pos += 3;
    }
    return colors;
}
async function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {
    switch(byteStream.nextByte()){
        case 249:
            {
                const frame = gif.frames[getFrameIndex(false)];
                byteStream.pos++;
                const packedByte = byteStream.nextByte();
                frame.GCreserved = (packedByte & 0xe0) >>> 5;
                frame.disposalMethod = (packedByte & 0x1c) >>> 2;
                frame.userInputDelayFlag = (packedByte & 2) === 2;
                const transparencyFlag = (packedByte & 1) === 1;
                frame.delayTime = byteStream.nextTwoBytes() * 0xa;
                const transparencyIndex = byteStream.nextByte();
                if (transparencyFlag) {
                    getTransparencyIndex(transparencyIndex);
                }
                byteStream.pos++;
                break;
            }
        case 255:
            {
                byteStream.pos++;
                const applicationExtension = {
                    identifier: byteStream.getString(8),
                    authenticationCode: byteStream.getString(3),
                    data: byteStream.readSubBlocksBin()
                };
                gif.applicationExtensions.push(applicationExtension);
                break;
            }
        case 254:
            {
                gif.comments.push([
                    getFrameIndex(false),
                    byteStream.readSubBlocks()
                ]);
                break;
            }
        case 1:
            {
                if (gif.globalColorTable.length === 0) {
                    throw new EvalError("plain text extension without global color table");
                }
                byteStream.pos++;
                gif.frames[getFrameIndex(false)].plainTextData = {
                    left: byteStream.nextTwoBytes(),
                    top: byteStream.nextTwoBytes(),
                    width: byteStream.nextTwoBytes(),
                    height: byteStream.nextTwoBytes(),
                    charSize: {
                        width: byteStream.nextTwoBytes(),
                        height: byteStream.nextTwoBytes()
                    },
                    foregroundColor: byteStream.nextByte(),
                    backgroundColor: byteStream.nextByte(),
                    text: byteStream.readSubBlocks()
                };
                break;
            }
        default:
            byteStream.skipSubBlocks();
            break;
    }
}
async function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {
    const frame = gif.frames[getFrameIndex(true)];
    frame.left = byteStream.nextTwoBytes();
    frame.top = byteStream.nextTwoBytes();
    frame.width = byteStream.nextTwoBytes();
    frame.height = byteStream.nextTwoBytes();
    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;
    frame.sortFlag = (packedByte & 0x20) === 0x20;
    frame.reserved = (packedByte & 0x18) >>> 3;
    const localColorCount = 1 << (packedByte & 7) + 1;
    if (localColorTableFlag) {
        frame.localColorTable = parseColorTable(byteStream, localColorCount);
    }
    const getColor = (index)=>{
        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];
        return {
            r,
            g,
            b,
            a: index === getTransparencyIndex(null) ? avgAlpha ? ~~((r + g + b) / 3) : 0 : 255
        };
    };
    const image = (()=>{
        try {
            return new ImageData(frame.width, frame.height, {
                colorSpace: "srgb"
            });
        } catch (error) {
            if (error instanceof DOMException && error.name === "IndexSizeError") {
                return null;
            }
            throw error;
        }
    })();
    if (image == null) {
        throw new EvalError("GIF frame size is to large");
    }
    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;
    const readBits = (pos, len)=>{
        const bytePos = pos >>> 3, bitPos = pos & 7;
        return (imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16) & (1 << len) - 1 << bitPos) >>> bitPos;
    };
    if (interlacedFlag) {
        for(let code = 0, size = minCodeSize + 1, pos = 0, dic = [
            [
                0
            ]
        ], pass = 0; pass < 4; pass++){
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InterlaceOffsets"][pass] < frame.height) {
                for(let pixelPos = 0, lineIndex = 0;;){
                    const last = code;
                    code = readBits(pos, size);
                    pos += size + 1;
                    if (code === clearCode) {
                        size = minCodeSize + 1;
                        dic.length = clearCode + 2;
                        for(let i = 0; i < dic.length; i++){
                            dic[i] = i < clearCode ? [
                                i
                            ] : [];
                        }
                    } else {
                        if (code >= dic.length) {
                            dic.push(dic[last].concat(dic[last][0]));
                        } else if (last !== clearCode) {
                            dic.push(dic[last].concat(dic[code][0]));
                        }
                        for(let i = 0; i < dic[code].length; i++){
                            const { r, g, b, a } = getColor(dic[code][i]);
                            image.data.set([
                                r,
                                g,
                                b,
                                a
                            ], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InterlaceOffsets"][pass] * frame.width + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InterlaceSteps"][pass] * lineIndex + pixelPos % (frame.width * 4));
                            pixelPos += 4;
                        }
                        if (dic.length === 1 << size && size < 0xc) {
                            size++;
                        }
                    }
                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {
                        lineIndex++;
                        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InterlaceOffsets"][pass] + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InterlaceSteps"][pass] * lineIndex >= frame.height) {
                            break;
                        }
                    }
                }
            }
            progressCallback === null || progressCallback === void 0 ? void 0 : progressCallback(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, {
                x: frame.left,
                y: frame.top
            }, {
                width: gif.width,
                height: gif.height
            });
        }
        frame.image = image;
        frame.bitmap = await createImageBitmap(image);
    } else {
        for(let code = 0, size = minCodeSize + 1, pos = 0, dic = [
            [
                0
            ]
        ], pixelPos = -4;;){
            const last = code;
            code = readBits(pos, size);
            pos += size;
            if (code === clearCode) {
                size = minCodeSize + 1;
                dic.length = clearCode + 2;
                for(let i = 0; i < dic.length; i++){
                    dic[i] = i < clearCode ? [
                        i
                    ] : [];
                }
            } else {
                if (code === clearCode + 1) {
                    break;
                }
                if (code >= dic.length) {
                    dic.push(dic[last].concat(dic[last][0]));
                } else if (last !== clearCode) {
                    dic.push(dic[last].concat(dic[code][0]));
                }
                for(let i = 0; i < dic[code].length; i++){
                    const { r, g, b, a } = getColor(dic[code][i]);
                    image.data.set([
                        r,
                        g,
                        b,
                        a
                    ], pixelPos += 4);
                }
                if (dic.length >= 1 << size && size < 0xc) {
                    size++;
                }
            }
        }
        frame.image = image;
        frame.bitmap = await createImageBitmap(image);
        progressCallback === null || progressCallback === void 0 ? void 0 : progressCallback((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, {
            x: frame.left,
            y: frame.top
        }, {
            width: gif.width,
            height: gif.height
        });
    }
}
async function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {
    switch(byteStream.nextByte()){
        case 59:
            return true;
        case 44:
            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);
            break;
        case 33:
            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);
            break;
        default:
            throw new EvalError("undefined block found");
    }
    return false;
}
function getGIFLoopAmount(gif) {
    for (const extension of gif.applicationExtensions){
        if (extension.identifier + extension.authenticationCode !== "NETSCAPE2.0") {
            continue;
        }
        return extension.data[1] + (extension.data[2] << 8);
    }
    return NaN;
}
async function decodeGIF(gifURL, progressCallback, avgAlpha) {
    if (!avgAlpha) avgAlpha = false;
    const res = await fetch(gifURL);
    if (!res.ok && res.status === 404) {
        throw new EvalError("file not found");
    }
    const buffer = await res.arrayBuffer();
    const gif = {
        width: 0,
        height: 0,
        totalTime: 0,
        colorRes: 0,
        pixelAspectRatio: 0,
        frames: [],
        sortFlag: false,
        globalColorTable: [],
        backgroundImage: new ImageData(1, 1, {
            colorSpace: "srgb"
        }),
        comments: [],
        applicationExtensions: []
    }, byteStream = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$ByteStream$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ByteStream"](new Uint8ClampedArray(buffer));
    if (byteStream.getString(6) !== "GIF89a") {
        throw new Error("not a supported GIF file");
    }
    gif.width = byteStream.nextTwoBytes();
    gif.height = byteStream.nextTwoBytes();
    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;
    gif.colorRes = (packedByte & 0x70) >>> 4;
    gif.sortFlag = (packedByte & 8) === 8;
    const globalColorCount = 1 << (packedByte & 7) + 1, backgroundColorIndex = byteStream.nextByte();
    gif.pixelAspectRatio = byteStream.nextByte();
    if (gif.pixelAspectRatio !== 0) {
        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;
    }
    if (globalColorTableFlag) {
        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);
    }
    const backgroundImage = (()=>{
        try {
            return new ImageData(gif.width, gif.height, {
                colorSpace: "srgb"
            });
        } catch (error) {
            if (error instanceof DOMException && error.name === "IndexSizeError") {
                return null;
            }
            throw error;
        }
    })();
    if (backgroundImage == null) {
        throw new Error("GIF frame size is to large");
    }
    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];
    backgroundImage.data.set(globalColorTableFlag ? [
        r,
        g,
        b,
        255
    ] : [
        0,
        0,
        0,
        0
    ]);
    for(let i = 4; i < backgroundImage.data.length; i *= 2){
        backgroundImage.data.copyWithin(i, 0, i);
    }
    gif.backgroundImage = backgroundImage;
    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;
    const getframeIndex = (increment)=>{
        if (increment) {
            incrementFrameIndex = true;
        }
        return frameIndex;
    };
    const getTransparencyIndex = (newValue)=>{
        if (newValue != null) {
            transparencyIndex = newValue;
        }
        return transparencyIndex;
    };
    try {
        do {
            if (incrementFrameIndex) {
                gif.frames.push({
                    left: 0,
                    top: 0,
                    width: 0,
                    height: 0,
                    disposalMethod: 0,
                    image: new ImageData(1, 1, {
                        colorSpace: "srgb"
                    }),
                    plainTextData: null,
                    userInputDelayFlag: false,
                    delayTime: 0,
                    sortFlag: false,
                    localColorTable: [],
                    reserved: 0,
                    GCreserved: 0
                });
                frameIndex++;
                transparencyIndex = -1;
                incrementFrameIndex = false;
            }
        }while (!await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback))
        gif.frames.length--;
        for (const frame of gif.frames){
            if (frame.userInputDelayFlag && frame.delayTime === 0) {
                gif.totalTime = Infinity;
                break;
            }
            gif.totalTime += frame.delayTime;
        }
        return gif;
    } catch (error) {
        if (error instanceof EvalError) {
            throw new Error("error while parsing frame ".concat(frameIndex, ' "').concat(error.message, '"'));
        }
        throw error;
    }
}
}),
"[project]/node_modules/tsparticles-shape-image/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "downloadSvgImage",
    ()=>downloadSvgImage,
    "loadGifImage",
    ()=>loadGifImage,
    "loadImage",
    ()=>loadImage,
    "replaceImageColor",
    ()=>replaceImageColor
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js [app-client] (ecmascript)");
;
;
const currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d.]+%?\))|currentcolor/gi;
function replaceColorSvg(imageShape, color, opacity) {
    const { svgData } = imageShape;
    if (!svgData) {
        return "";
    }
    const colorStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromHsl"])(color, opacity);
    if (svgData.includes("fill")) {
        return svgData.replace(currentColorRegex, ()=>colorStyle);
    }
    const preFillIndex = svgData.indexOf(">");
    return "".concat(svgData.substring(0, preFillIndex), ' fill="').concat(colorStyle, '"').concat(svgData.substring(preFillIndex));
}
async function loadImage(image) {
    return new Promise((resolve)=>{
        image.loading = true;
        const img = new Image();
        image.element = img;
        img.addEventListener("load", ()=>{
            image.loading = false;
            resolve();
        });
        img.addEventListener("error", ()=>{
            image.element = undefined;
            image.error = true;
            image.loading = false;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLogger"])().error("".concat(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"], " loading image: ").concat(image.source));
            resolve();
        });
        img.src = image.source;
    });
}
async function loadGifImage(image) {
    if (image.type !== "gif") {
        await loadImage(image);
        return;
    }
    image.loading = true;
    try {
        image.gifData = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["decodeGIF"])(image.source);
        var _getGIFLoopAmount;
        image.gifLoopCount = (_getGIFLoopAmount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$GifUtils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGIFLoopAmount"])(image.gifData)) !== null && _getGIFLoopAmount !== void 0 ? _getGIFLoopAmount : 0;
        if (image.gifLoopCount === 0) {
            image.gifLoopCount = Infinity;
        }
    } catch (e) {
        image.error = true;
    }
    image.loading = false;
}
async function downloadSvgImage(image) {
    if (image.type !== "svg") {
        await loadImage(image);
        return;
    }
    image.loading = true;
    const response = await fetch(image.source);
    if (!response.ok) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLogger"])().error("".concat(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"], " Image not found"));
        image.error = true;
    } else {
        image.svgData = await response.text();
    }
    image.loading = false;
}
function replaceImageColor(image, imageData, color, particle) {
    var _particle_opacity;
    var _particle_opacity_value, _imageData_replaceColor;
    const svgColoredData = replaceColorSvg(image, color, (_particle_opacity_value = (_particle_opacity = particle.opacity) === null || _particle_opacity === void 0 ? void 0 : _particle_opacity.value) !== null && _particle_opacity_value !== void 0 ? _particle_opacity_value : 1), imageRes = {
        color,
        gif: imageData.gif,
        data: {
            ...image,
            svgData: svgColoredData
        },
        loaded: false,
        ratio: imageData.width / imageData.height,
        replaceColor: (_imageData_replaceColor = imageData.replaceColor) !== null && _imageData_replaceColor !== void 0 ? _imageData_replaceColor : imageData.replace_color,
        source: imageData.src
    };
    return new Promise((resolve)=>{
        const svg = new Blob([
            svgColoredData
        ], {
            type: "image/svg+xml"
        }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();
        img.addEventListener("load", ()=>{
            imageRes.loaded = true;
            imageRes.element = img;
            resolve(imageRes);
            domUrl.revokeObjectURL(url);
        });
        img.addEventListener("error", async ()=>{
            domUrl.revokeObjectURL(url);
            const img2 = {
                ...image,
                error: false,
                loading: true
            };
            await loadImage(img2);
            imageRes.loaded = true;
            imageRes.element = img2.element;
            resolve(imageRes);
        });
        img.src = url;
    });
}
}),
"[project]/node_modules/tsparticles-shape-image/esm/ImageDrawer.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "ImageDrawer",
    ()=>ImageDrawer
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-image/esm/Utils.js [app-client] (ecmascript)");
;
;
class ImageDrawer {
    addImage(image) {
        if (!this._engine.images) {
            this._engine.images = [];
        }
        this._engine.images.push(image);
    }
    draw(context, particle, radius, opacity, delta) {
        const image = particle.image, element = image === null || image === void 0 ? void 0 : image.element;
        if (!image) {
            return;
        }
        context.globalAlpha = opacity;
        if (image.gif && image.gifData) {
            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext("2d");
            if (!offscreenContext) {
                throw new Error("could not create offscreen canvas context");
            }
            offscreenContext.imageSmoothingQuality = "low";
            offscreenContext.imageSmoothingEnabled = false;
            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);
            if (particle.gifLoopCount === undefined) {
                var _image_gifLoopCount;
                particle.gifLoopCount = (_image_gifLoopCount = image.gifLoopCount) !== null && _image_gifLoopCount !== void 0 ? _image_gifLoopCount : 0;
            }
            var _particle_gifFrame;
            let frameIndex = (_particle_gifFrame = particle.gifFrame) !== null && _particle_gifFrame !== void 0 ? _particle_gifFrame : 0;
            const pos = {
                x: -image.gifData.width * 0.5,
                y: -image.gifData.height * 0.5
            }, frame = image.gifData.frames[frameIndex];
            if (particle.gifTime === undefined) {
                particle.gifTime = 0;
            }
            if (!frame.bitmap) {
                return;
            }
            context.scale(radius / image.gifData.width, radius / image.gifData.height);
            switch(frame.disposalMethod){
                case 4:
                case 5:
                case 6:
                case 7:
                case 0:
                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);
                    context.drawImage(offscreenCanvas, pos.x, pos.y);
                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);
                    break;
                case 1:
                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);
                    context.drawImage(offscreenCanvas, pos.x, pos.y);
                    break;
                case 2:
                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);
                    context.drawImage(offscreenCanvas, pos.x, pos.y);
                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);
                    if (image.gifData.globalColorTable.length === 0) {
                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);
                    } else {
                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);
                    }
                    break;
                case 3:
                    {
                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);
                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);
                        context.drawImage(offscreenCanvas, pos.x, pos.y);
                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);
                        offscreenContext.putImageData(previousImageData, 0, 0);
                    }
                    break;
            }
            particle.gifTime += delta.value;
            if (particle.gifTime > frame.delayTime) {
                particle.gifTime -= frame.delayTime;
                if (++frameIndex >= image.gifData.frames.length) {
                    if (--particle.gifLoopCount <= 0) {
                        return;
                    }
                    frameIndex = 0;
                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);
                }
                particle.gifFrame = frameIndex;
            }
            context.scale(image.gifData.width / radius, image.gifData.height / radius);
        } else if (element) {
            const ratio = image.ratio, pos = {
                x: -radius,
                y: -radius
            };
            context.drawImage(element, pos.x, pos.y, radius * 2, radius * 2 / ratio);
        }
        context.globalAlpha = 1;
    }
    getSidesCount() {
        return 12;
    }
    async init(container) {
        const options = container.actualOptions;
        if (!options.preload || !this._engine.loadImage) {
            return;
        }
        for (const imageData of options.preload){
            await this._engine.loadImage(imageData);
        }
    }
    loadShape(particle) {
        if (particle.shape !== "image" && particle.shape !== "images") {
            return;
        }
        if (!this._engine.images) {
            this._engine.images = [];
        }
        const imageData = particle.shapeData, image = this._engine.images.find((t)=>t.name === imageData.name || t.source === imageData.src);
        if (!image) {
            this.loadImageShape(imageData).then(()=>{
                this.loadShape(particle);
            });
        }
    }
    particleInit(container, particle) {
        if (particle.shape !== "image" && particle.shape !== "images") {
            return;
        }
        if (!this._engine.images) {
            this._engine.images = [];
        }
        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t)=>t.name === imageData.name || t.source === imageData.src);
        if (!image) {
            return;
        }
        var _imageData_replaceColor, _ref;
        const replaceColor = (_ref = (_imageData_replaceColor = imageData.replaceColor) !== null && _imageData_replaceColor !== void 0 ? _imageData_replaceColor : imageData.replace_color) !== null && _ref !== void 0 ? _ref : image.replaceColor;
        if (image.loading) {
            setTimeout(()=>{
                this.particleInit(container, particle);
            });
            return;
        }
        (async ()=>{
            let imageRes;
            if (image.svgData && color) {
                imageRes = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["replaceImageColor"])(image, imageData, color, particle);
            } else {
                var _image_ratio;
                imageRes = {
                    color,
                    data: image,
                    element: image.element,
                    gif: image.gif,
                    gifData: image.gifData,
                    gifLoopCount: image.gifLoopCount,
                    loaded: true,
                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : (_image_ratio = image.ratio) !== null && _image_ratio !== void 0 ? _image_ratio : 1,
                    replaceColor: replaceColor,
                    source: imageData.src
                };
            }
            if (!imageRes.ratio) {
                imageRes.ratio = 1;
            }
            var _imageData_fill, _imageData_close;
            const fill = (_imageData_fill = imageData.fill) !== null && _imageData_fill !== void 0 ? _imageData_fill : particle.fill, close = (_imageData_close = imageData.close) !== null && _imageData_close !== void 0 ? _imageData_close : particle.close, imageShape = {
                image: imageRes,
                fill,
                close
            };
            particle.image = imageShape.image;
            particle.fill = imageShape.fill;
            particle.close = imageShape.close;
        })();
    }
    constructor(engine){
        this.loadImageShape = async (imageShape)=>{
            if (!this._engine.loadImage) {
                throw new Error("".concat(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"], " image shape not initialized"));
            }
            var _imageShape_replaceColor, _ref;
            await this._engine.loadImage({
                gif: imageShape.gif,
                name: imageShape.name,
                replaceColor: (_ref = (_imageShape_replaceColor = imageShape.replaceColor) !== null && _imageShape_replaceColor !== void 0 ? _imageShape_replaceColor : imageShape.replace_color) !== null && _ref !== void 0 ? _ref : false,
                src: imageShape.src
            });
        };
        this._engine = engine;
    }
}
}),
"[project]/node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Preload",
    ()=>Preload
]);
class Preload {
    load(data) {
        if (!data) {
            return;
        }
        if (data.gif !== undefined) {
            this.gif = data.gif;
        }
        if (data.height !== undefined) {
            this.height = data.height;
        }
        if (data.name !== undefined) {
            this.name = data.name;
        }
        if (data.replaceColor !== undefined) {
            this.replaceColor = data.replaceColor;
        }
        if (data.src !== undefined) {
            this.src = data.src;
        }
        if (data.width !== undefined) {
            this.width = data.width;
        }
    }
    constructor(){
        this.src = "";
        this.gif = false;
    }
}
}),
"[project]/node_modules/tsparticles-shape-image/esm/ImagePreloader.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "ImagePreloaderPlugin",
    ()=>ImagePreloaderPlugin
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Options$2f$Classes$2f$Preload$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js [app-client] (ecmascript)");
;
class ImagePreloaderPlugin {
    getPlugin() {
        return {};
    }
    loadOptions(options, source) {
        if (!source || !source.preload) {
            return;
        }
        if (!options.preload) {
            options.preload = [];
        }
        const preloadOptions = options.preload;
        for (const item of source.preload){
            const existing = preloadOptions.find((t)=>t.name === item.name || t.src === item.src);
            if (existing) {
                existing.load(item);
            } else {
                const preload = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Options$2f$Classes$2f$Preload$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Preload"]();
                preload.load(item);
                preloadOptions.push(preload);
            }
        }
    }
    needsPlugin() {
        return true;
    }
    constructor(engine){
        this.id = "imagePreloader";
        this._engine = engine;
    }
}
}),
"[project]/node_modules/tsparticles-shape-image/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadImageShape",
    ()=>loadImageShape
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-image/esm/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$ImageDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-image/esm/ImageDrawer.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$ImagePreloader$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-image/esm/ImagePreloader.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js [app-client] (ecmascript)");
;
;
;
;
function addLoadImageToEngine(engine) {
    if (engine.loadImage) {
        return;
    }
    engine.loadImage = async (data)=>{
        if (!data.name && !data.src) {
            throw new Error("".concat(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"], " no image source provided"));
        }
        if (!engine.images) {
            engine.images = [];
        }
        if (engine.images.find((t)=>t.name === data.name || t.source === data.src)) {
            return;
        }
        try {
            var _data_gif, _data_name;
            const image = {
                gif: (_data_gif = data.gif) !== null && _data_gif !== void 0 ? _data_gif : false,
                name: (_data_name = data.name) !== null && _data_name !== void 0 ? _data_name : data.src,
                source: data.src,
                type: data.src.substring(data.src.length - 3),
                error: false,
                loading: true,
                replaceColor: data.replaceColor,
                ratio: data.width && data.height ? data.width / data.height : undefined
            };
            engine.images.push(image);
            const imageFunc = data.gif ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadGifImage"] : data.replaceColor ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["downloadSvgImage"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadImage"];
            await imageFunc(image);
        } catch (e) {
            var _data_name1;
            throw new Error("".concat(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["errorPrefix"], " ").concat((_data_name1 = data.name) !== null && _data_name1 !== void 0 ? _data_name1 : data.src, " not found"));
        }
    };
}
async function loadImageShape(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    addLoadImageToEngine(engine);
    const preloader = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$ImagePreloader$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ImagePreloaderPlugin"](engine);
    await engine.addPlugin(preloader, refresh);
    await engine.addShape([
        "image",
        "images"
    ], new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$ImageDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ImageDrawer"](engine), refresh);
}
}),
"[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "LifeDelay",
    ()=>LifeDelay
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
;
class LifeDelay extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"] {
    load(data) {
        if (!data) {
            return;
        }
        super.load(data);
        if (data.sync !== undefined) {
            this.sync = data.sync;
        }
    }
    constructor(){
        super();
        this.sync = false;
    }
}
}),
"[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "LifeDuration",
    ()=>LifeDuration
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
;
class LifeDuration extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"] {
    load(data) {
        if (!data) {
            return;
        }
        super.load(data);
        if (data.sync !== undefined) {
            this.sync = data.sync;
        }
    }
    constructor(){
        super();
        this.random.minimumValue = 0.0001;
        this.sync = false;
    }
}
}),
"[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Life",
    ()=>Life
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$Options$2f$Classes$2f$LifeDelay$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$Options$2f$Classes$2f$LifeDuration$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js [app-client] (ecmascript)");
;
;
class Life {
    load(data) {
        if (!data) {
            return;
        }
        if (data.count !== undefined) {
            this.count = data.count;
        }
        this.delay.load(data.delay);
        this.duration.load(data.duration);
    }
    constructor(){
        this.count = 0;
        this.delay = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$Options$2f$Classes$2f$LifeDelay$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LifeDelay"]();
        this.duration = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$Options$2f$Classes$2f$LifeDuration$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LifeDuration"]();
    }
}
}),
"[project]/node_modules/tsparticles-updater-life/esm/LifeUpdater.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "LifeUpdater",
    ()=>LifeUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$Options$2f$Classes$2f$Life$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js [app-client] (ecmascript)");
;
;
class LifeUpdater {
    init(particle) {
        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;
        if (!lifeOptions) {
            return;
        }
        particle.life = {
            delay: container.retina.reduceFactor ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])()) / container.retina.reduceFactor * 1000 : 0,
            delayTime: 0,
            duration: container.retina.reduceFactor ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])()) / container.retina.reduceFactor * 1000 : 0,
            time: 0,
            count: lifeOptions.count
        };
        if (particle.life.duration <= 0) {
            particle.life.duration = -1;
        }
        if (particle.life.count <= 0) {
            particle.life.count = -1;
        }
        if (particle.life) {
            particle.spawning = particle.life.delay > 0;
        }
    }
    isEnabled(particle) {
        return !particle.destroyed;
    }
    loadOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.life) {
            options.life = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$Options$2f$Classes$2f$Life$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Life"]();
        }
        for (const source of sources){
            options.life.load(source === null || source === void 0 ? void 0 : source.life);
        }
    }
    update(particle, delta) {
        if (!this.isEnabled(particle) || !particle.life) {
            return;
        }
        const life = particle.life;
        let justSpawned = false;
        if (particle.spawning) {
            life.delayTime += delta.value;
            if (life.delayTime >= particle.life.delay) {
                justSpawned = true;
                particle.spawning = false;
                life.delayTime = 0;
                life.time = 0;
            } else {
                return;
            }
        }
        if (life.duration === -1) {
            return;
        }
        if (particle.spawning) {
            return;
        }
        if (justSpawned) {
            life.time = 0;
        } else {
            life.time += delta.value;
        }
        if (life.time < life.duration) {
            return;
        }
        life.time = 0;
        if (particle.life.count > 0) {
            particle.life.count--;
        }
        if (particle.life.count === 0) {
            particle.destroy();
            return;
        }
        const canvasSize = this.container.canvas.size, widthRange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(0, canvasSize.width), heightRange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(0, canvasSize.width);
        particle.position.x = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])(widthRange);
        particle.position.y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])(heightRange);
        particle.spawning = true;
        life.delayTime = 0;
        life.time = 0;
        particle.reset();
        const lifeOptions = particle.options.life;
        if (lifeOptions) {
            life.delay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(lifeOptions.delay.value) * 1000;
            life.duration = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(lifeOptions.duration.value) * 1000;
        }
    }
    constructor(container){
        this.container = container;
    }
}
}),
"[project]/node_modules/tsparticles-updater-life/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadLifeUpdater",
    ()=>loadLifeUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$LifeUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-life/esm/LifeUpdater.js [app-client] (ecmascript)");
;
async function loadLifeUpdater(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addParticleUpdater("life", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$LifeUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LifeUpdater"](container), refresh);
}
}),
"[project]/node_modules/tsparticles-shape-line/esm/LineDrawer.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "LineDrawer",
    ()=>LineDrawer
]);
class LineDrawer {
    draw(context, particle, radius) {
        const shapeData = particle.shapeData;
        context.moveTo(-radius / 2, 0);
        context.lineTo(radius / 2, 0);
        var _shapeData_cap;
        context.lineCap = (_shapeData_cap = shapeData === null || shapeData === void 0 ? void 0 : shapeData.cap) !== null && _shapeData_cap !== void 0 ? _shapeData_cap : "butt";
    }
    getSidesCount() {
        return 1;
    }
}
}),
"[project]/node_modules/tsparticles-shape-line/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadLineShape",
    ()=>loadLineShape
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$line$2f$esm$2f$LineDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-line/esm/LineDrawer.js [app-client] (ecmascript)");
;
async function loadLineShape(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addShape("line", new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$line$2f$esm$2f$LineDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LineDrawer"](), refresh);
}
}),
"[project]/node_modules/tsparticles-move-parallax/esm/ParallaxMover.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "ParallaxMover",
    ()=>ParallaxMover
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
class ParallaxMover {
    init() {}
    isEnabled(particle) {
        return !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isSsr"])() && !particle.destroyed && particle.container.actualOptions.interactivity.events.onHover.parallax.enable;
    }
    move(particle) {
        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isSsr"])() || !parallaxOptions.enable) {
            return;
        }
        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;
        if (!mousePos) {
            return;
        }
        const canvasSize = container.canvas.size, canvasCenter = {
            x: canvasSize.width / 2,
            y: canvasSize.height / 2
        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {
            x: (mousePos.x - canvasCenter.x) * factor,
            y: (mousePos.y - canvasCenter.y) * factor
        }, { offset } = particle;
        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;
        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;
    }
}
}),
"[project]/node_modules/tsparticles-move-parallax/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadParallaxMover",
    ()=>loadParallaxMover
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$parallax$2f$esm$2f$ParallaxMover$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-move-parallax/esm/ParallaxMover.js [app-client] (ecmascript)");
;
async function loadParallaxMover(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addMover("parallax", ()=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$parallax$2f$esm$2f$ParallaxMover$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParallaxMover"](), refresh);
}
}),
"[project]/node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Attractor",
    ()=>Attractor
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ParticlesInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class Attractor extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ParticlesInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParticlesInteractorBase"] {
    clear() {}
    init() {}
    async interact(p1) {
        var _p1_retina_attractDistance;
        const container = this.container, distance = (_p1_retina_attractDistance = p1.retina.attractDistance) !== null && _p1_retina_attractDistance !== void 0 ? _p1_retina_attractDistance : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);
        for (const p2 of query){
            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {
                continue;
            }
            const pos2 = p2.getPosition(), { dx, dy } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;
            p1.velocity.x -= ax * p1Factor;
            p1.velocity.y -= ay * p1Factor;
            p2.velocity.x += ax * p2Factor;
            p2.velocity.y += ay * p2Factor;
        }
    }
    isEnabled(particle) {
        return particle.options.move.attract.enable;
    }
    reset() {}
    constructor(container){
        super(container);
    }
}
}),
"[project]/node_modules/tsparticles-interaction-particles-attract/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadParticlesAttractInteraction",
    ()=>loadParticlesAttractInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$attract$2f$esm$2f$Attractor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js [app-client] (ecmascript)");
;
async function loadParticlesAttractInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addInteractor("particlesAttract", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$attract$2f$esm$2f$Attractor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Attractor"](container), refresh);
}
}),
"[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "absorb",
    ()=>absorb
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {
    const factor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clamp"])(p1.options.collisions.absorb.speed * delta.factor / 10, 0, r2);
    p1.size.value += factor / 2;
    p2.size.value -= factor;
    if (r2 <= pixelRatio) {
        p2.size.value = 0;
        p2.destroy();
    }
}
function absorb(p1, p2, delta, pixelRatio) {
    const r1 = p1.getRadius(), r2 = p2.getRadius();
    if (r1 === undefined && r2 !== undefined) {
        p1.destroy();
    } else if (r1 !== undefined && r2 === undefined) {
        p2.destroy();
    } else if (r1 !== undefined && r2 !== undefined) {
        if (r1 >= r2) {
            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);
        } else {
            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);
        }
    }
}
}),
"[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "bounce",
    ()=>bounce
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
const fixBounceSpeed = (p)=>{
    if (p.collisionMaxSpeed === undefined) {
        p.collisionMaxSpeed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(p.options.collisions.maxSpeed);
    }
    if (p.velocity.length > p.collisionMaxSpeed) {
        p.velocity.length = p.collisionMaxSpeed;
    }
};
function bounce(p1, p2) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["circleBounce"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["circleBounceDataFromParticle"])(p1), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["circleBounceDataFromParticle"])(p2));
    fixBounceSpeed(p1);
    fixBounceSpeed(p2);
}
}),
"[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "destroy",
    ()=>destroy
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Bounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js [app-client] (ecmascript)");
;
function destroy(p1, p2) {
    if (!p1.unbreakable && !p2.unbreakable) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Bounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bounce"])(p1, p2);
    }
    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {
        p1.destroy();
    } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {
        p2.destroy();
    } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {
        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;
        deleteP.destroy();
    }
}
}),
"[project]/node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "resolveCollision",
    ()=>resolveCollision
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Absorb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Bounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Destroy$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js [app-client] (ecmascript)");
;
;
;
function resolveCollision(p1, p2, delta, pixelRatio) {
    switch(p1.options.collisions.mode){
        case "absorb":
            {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Absorb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["absorb"])(p1, p2, delta, pixelRatio);
                break;
            }
        case "bounce":
            {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Bounce$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["bounce"])(p1, p2);
                break;
            }
        case "destroy":
            {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Destroy$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["destroy"])(p1, p2);
                break;
            }
    }
}
}),
"[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Collider",
    ()=>Collider
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ParticlesInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$ResolveCollision$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js [app-client] (ecmascript)");
;
;
class Collider extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ParticlesInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParticlesInteractorBase"] {
    clear() {}
    init() {}
    async interact(p1, delta) {
        if (p1.destroyed || p1.spawning) {
            return;
        }
        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);
        for (const p2 of query){
            if (p1 === p2 || !p2.options.collisions.enable || p1.options.collisions.mode !== p2.options.collisions.mode || p2.destroyed || p2.spawning) {
                continue;
            }
            const pos2 = p2.getPosition(), radius2 = p2.getRadius();
            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {
                continue;
            }
            const dist = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos1, pos2), distP = radius1 + radius2;
            if (dist > distP) {
                continue;
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$ResolveCollision$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveCollision"])(p1, p2, delta, container.retina.pixelRatio);
        }
    }
    isEnabled(particle) {
        return particle.options.collisions.enable;
    }
    reset() {}
    constructor(container){
        super(container);
    }
}
}),
"[project]/node_modules/tsparticles-interaction-particles-collisions/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadParticlesCollisionsInteraction",
    ()=>loadParticlesCollisionsInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Collider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js [app-client] (ecmascript)");
;
async function loadParticlesCollisionsInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addInteractor("particlesCollisions", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$Collider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Collider"](container), refresh);
}
}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "CircleWarp",
    ()=>CircleWarp
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js [app-client] (ecmascript)");
;
class CircleWarp extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"] {
    contains(point) {
        const { width, height } = this.canvasSize;
        const { x, y } = point;
        return super.contains(point) || super.contains({
            x: x - width,
            y
        }) || super.contains({
            x: x - width,
            y: y - height
        }) || super.contains({
            x,
            y: y - height
        });
    }
    intersects(range) {
        if (super.intersects(range)) {
            return true;
        }
        const rect = range, circle = range, newPos = {
            x: range.position.x - this.canvasSize.width,
            y: range.position.y - this.canvasSize.height
        };
        if (circle.radius !== undefined) {
            const biggerCircle = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](newPos.x, newPos.y, circle.radius * 2);
            return super.intersects(biggerCircle);
        } else if (rect.size !== undefined) {
            const rectSW = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Rectangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rectangle"](newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);
            return super.intersects(rectSW);
        }
        return false;
    }
    constructor(x, y, radius, canvasSize){
        super(x, y, radius);
        this.canvasSize = canvasSize;
        this.canvasSize = {
            ...canvasSize
        };
    }
}
}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "LinksShadow",
    ()=>LinksShadow
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
;
class LinksShadow {
    load(data) {
        if (!data) {
            return;
        }
        if (data.blur !== undefined) {
            this.blur = data.blur;
        }
        this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
    }
    constructor(){
        this.blur = 5;
        this.color = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"]();
        this.color.value = "#000";
        this.enable = false;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "LinksTriangle",
    ()=>LinksTriangle
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
;
class LinksTriangle {
    load(data) {
        if (!data) {
            return;
        }
        if (data.color !== undefined) {
            this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.frequency !== undefined) {
            this.frequency = data.frequency;
        }
        if (data.opacity !== undefined) {
            this.opacity = data.opacity;
        }
    }
    constructor(){
        this.enable = false;
        this.frequency = 1;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Links",
    ()=>Links
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Options$2f$Classes$2f$LinksShadow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Options$2f$Classes$2f$LinksTriangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js [app-client] (ecmascript)");
;
;
;
class Links {
    load(data) {
        if (!data) {
            return;
        }
        if (data.id !== undefined) {
            this.id = data.id;
        }
        if (data.blink !== undefined) {
            this.blink = data.blink;
        }
        this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        if (data.consent !== undefined) {
            this.consent = data.consent;
        }
        if (data.distance !== undefined) {
            this.distance = data.distance;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.frequency !== undefined) {
            this.frequency = data.frequency;
        }
        if (data.opacity !== undefined) {
            this.opacity = data.opacity;
        }
        this.shadow.load(data.shadow);
        this.triangles.load(data.triangles);
        if (data.width !== undefined) {
            this.width = data.width;
        }
        if (data.warp !== undefined) {
            this.warp = data.warp;
        }
    }
    constructor(){
        this.blink = false;
        this.color = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"]();
        this.color.value = "#fff";
        this.consent = false;
        this.distance = 100;
        this.enable = false;
        this.frequency = 1;
        this.opacity = 1;
        this.shadow = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Options$2f$Classes$2f$LinksShadow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LinksShadow"]();
        this.triangles = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Options$2f$Classes$2f$LinksTriangle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LinksTriangle"]();
        this.width = 1;
        this.warp = false;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/Linker.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Linker",
    ()=>Linker
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ParticlesInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$CircleWarp$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Options$2f$Classes$2f$Links$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js [app-client] (ecmascript)");
;
;
;
function getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {
    const { dx, dy, distance } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(pos1, pos2);
    if (!warp || distance <= optDistance) {
        return distance;
    }
    const absDiffs = {
        x: Math.abs(dx),
        y: Math.abs(dy)
    }, warpDistances = {
        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),
        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y)
    };
    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);
}
class Linker extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$ParticlesInteractorBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ParticlesInteractorBase"] {
    clear() {}
    init() {
        this.linkContainer.particles.linksColor = undefined;
        this.linkContainer.particles.linksColors = new Map();
    }
    async interact(p1) {
        if (!p1.options.links) {
            return;
        }
        p1.links = [];
        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;
        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {
            return;
        }
        var _p1_retina_linksDistance;
        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = (_p1_retina_linksDistance = p1.retina.linksDistance) !== null && _p1_retina_linksDistance !== void 0 ? _p1_retina_linksDistance : 0, warp = linkOpt1.warp, range = warp ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$CircleWarp$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CircleWarp"](pos1.x, pos1.y, optDistance, canvasSize) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Core$2f$Utils$2f$Circle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Circle"](pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);
        for (const p2 of query){
            const linkOpt2 = p2.options.links;
            if (p1 === p2 || !(linkOpt2 === null || linkOpt2 === void 0 ? void 0 : linkOpt2.enable) || linkOpt1.id !== linkOpt2.id || p2.spawning || p2.destroyed || !p2.links || p1.links.some((t)=>t.destination === p2) || p2.links.some((t)=>t.destination === p1)) {
                continue;
            }
            const pos2 = p2.getPosition();
            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {
                continue;
            }
            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);
            if (distance > optDistance) {
                continue;
            }
            const opacityLine = (1 - distance / optDistance) * optOpacity;
            this._setColor(p1);
            p1.links.push({
                destination: p2,
                opacity: opacityLine
            });
        }
    }
    isEnabled(particle) {
        var _particle_options_links;
        return !!((_particle_options_links = particle.options.links) === null || _particle_options_links === void 0 ? void 0 : _particle_options_links.enable);
    }
    loadParticlesOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.links) {
            options.links = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Options$2f$Classes$2f$Links$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Links"]();
        }
        for (const source of sources){
            var _source_links, _ref;
            options.links.load((_ref = (_source_links = source === null || source === void 0 ? void 0 : source.links) !== null && _source_links !== void 0 ? _source_links : source === null || source === void 0 ? void 0 : source.lineLinked) !== null && _ref !== void 0 ? _ref : source === null || source === void 0 ? void 0 : source.line_linked);
        }
    }
    reset() {}
    constructor(container){
        super(container);
        this._setColor = (p1)=>{
            if (!p1.options.links) {
                return;
            }
            const container = this.linkContainer, linksOptions = p1.options.links;
            let linkColor = linksOptions.id === undefined ? container.particles.linksColor : container.particles.linksColors.get(linksOptions.id);
            if (linkColor) {
                return;
            }
            const optColor = linksOptions.color;
            linkColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLinkRandomColor"])(optColor, linksOptions.blink, linksOptions.consent);
            if (linksOptions.id === undefined) {
                container.particles.linksColor = linkColor;
            } else {
                container.particles.linksColors.set(linksOptions.id, linkColor);
            }
        };
        this.linkContainer = container;
    }
}
}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/interaction.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadLinksInteraction",
    ()=>loadLinksInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Linker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-links/esm/Linker.js [app-client] (ecmascript)");
;
async function loadLinksInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addInteractor("particlesLinks", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Linker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Linker"](container), refresh);
}
}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "drawLinkLine",
    ()=>drawLinkLine,
    "drawLinkTriangle",
    ()=>drawLinkTriangle,
    "getLinkKey",
    ()=>getLinkKey,
    "setLinkFrequency",
    ()=>setLinkFrequency
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
;
function drawLinkLine(params) {
    let drawn = false;
    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(begin, end) <= maxDistance) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawLine"])(context, begin, end);
        drawn = true;
    } else if (links.warp) {
        let pi1;
        let pi2;
        const endNE = {
            x: end.x - canvasSize.width,
            y: end.y
        };
        const d1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(begin, endNE);
        if (d1.distance <= maxDistance) {
            const yi = begin.y - d1.dy / d1.dx * begin.x;
            pi1 = {
                x: 0,
                y: yi
            };
            pi2 = {
                x: canvasSize.width,
                y: yi
            };
        } else {
            const endSW = {
                x: end.x,
                y: end.y - canvasSize.height
            };
            const d2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(begin, endSW);
            if (d2.distance <= maxDistance) {
                const yi = begin.y - d2.dy / d2.dx * begin.x;
                const xi = -yi / (d2.dy / d2.dx);
                pi1 = {
                    x: xi,
                    y: 0
                };
                pi2 = {
                    x: xi,
                    y: canvasSize.height
                };
            } else {
                const endSE = {
                    x: end.x - canvasSize.width,
                    y: end.y - canvasSize.height
                };
                const d3 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistances"])(begin, endSE);
                if (d3.distance <= maxDistance) {
                    const yi = begin.y - d3.dy / d3.dx * begin.x;
                    const xi = -yi / (d3.dy / d3.dx);
                    pi1 = {
                        x: xi,
                        y: yi
                    };
                    pi2 = {
                        x: pi1.x + canvasSize.width,
                        y: pi1.y + canvasSize.height
                    };
                }
            }
        }
        if (pi1 && pi2) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawLine"])(context, begin, pi1);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawLine"])(context, end, pi2);
            drawn = true;
        }
    }
    if (!drawn) {
        return;
    }
    context.lineWidth = width;
    if (backgroundMask.enable) {
        context.globalCompositeOperation = backgroundMask.composite;
    }
    context.strokeStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(colorLine, opacity);
    const { shadow } = links;
    if (shadow.enable) {
        const shadowColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToRgb"])(shadow.color);
        if (shadowColor) {
            context.shadowBlur = shadow.blur;
            context.shadowColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(shadowColor);
        }
    }
    context.stroke();
}
function drawLinkTriangle(params) {
    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$CanvasUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawTriangle"])(context, pos1, pos2, pos3);
    if (backgroundMask.enable) {
        context.globalCompositeOperation = backgroundMask.composite;
    }
    context.fillStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromRgb"])(colorTriangle, opacityTriangle);
    context.fill();
}
function getLinkKey(ids) {
    ids.sort((a, b)=>a - b);
    return ids.join("_");
}
function setLinkFrequency(particles, dictionary) {
    const key = getLinkKey(particles.map((t)=>t.id));
    let res = dictionary.get(key);
    if (res === undefined) {
        res = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
        dictionary.set(key, res);
    }
    return res;
}
}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "LinkInstance",
    ()=>LinkInstance
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-links/esm/Utils.js [app-client] (ecmascript)");
;
;
class LinkInstance {
    drawParticle(context, particle) {
        const { links, options } = particle;
        if (!links || links.length <= 0) {
            return;
        }
        const p1Links = links.filter((l)=>options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);
        for (const link of p1Links){
            this._drawTriangles(options, particle, link, p1Links);
            var _particle_retina_linksWidth;
            if (link.opacity > 0 && ((_particle_retina_linksWidth = particle.retina.linksWidth) !== null && _particle_retina_linksWidth !== void 0 ? _particle_retina_linksWidth : 0) > 0) {
                this._drawLinkLine(particle, link);
            }
        }
    }
    async init() {
        this._freqs.links = new Map();
        this._freqs.triangles = new Map();
    }
    particleCreated(particle) {
        particle.links = [];
        if (!particle.options.links) {
            return;
        }
        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;
        retina.linksDistance = distance * ratio;
        retina.linksWidth = width * ratio;
    }
    particleDestroyed(particle) {
        particle.links = [];
    }
    constructor(container){
        this.container = container;
        this._drawLinkLine = (p1, link)=>{
            const p1LinksOptions = p1.options.links;
            if (!(p1LinksOptions === null || p1LinksOptions === void 0 ? void 0 : p1LinksOptions.enable)) {
                return;
            }
            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();
            let opacity = link.opacity;
            container.canvas.draw((ctx)=>{
                var _p1_options_twinkle;
                let colorLine;
                const twinkle = (_p1_options_twinkle = p1.options.twinkle) === null || _p1_options_twinkle === void 0 ? void 0 : _p1_options_twinkle.lines;
                if (twinkle === null || twinkle === void 0 ? void 0 : twinkle.enable) {
                    const twinkleFreq = twinkle.frequency, twinkleRgb = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToRgb"])(twinkle.color), twinkling = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() < twinkleFreq;
                    if (twinkling && twinkleRgb) {
                        colorLine = twinkleRgb;
                        opacity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(twinkle.opacity);
                    }
                }
                if (!colorLine) {
                    const linkColor = p1LinksOptions.id !== undefined ? container.particles.linksColors.get(p1LinksOptions.id) : container.particles.linksColor;
                    colorLine = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLinkColor"])(p1, p2, linkColor);
                }
                if (!colorLine) {
                    return;
                }
                var _p1_retina_linksWidth, _p1_retina_linksDistance;
                const width = (_p1_retina_linksWidth = p1.retina.linksWidth) !== null && _p1_retina_linksWidth !== void 0 ? _p1_retina_linksWidth : 0, maxDistance = (_p1_retina_linksDistance = p1.retina.linksDistance) !== null && _p1_retina_linksDistance !== void 0 ? _p1_retina_linksDistance : 0, { backgroundMask } = options;
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawLinkLine"])({
                    context: ctx,
                    width,
                    begin: pos1,
                    end: pos2,
                    maxDistance,
                    canvasSize: container.canvas.size,
                    links: p1LinksOptions,
                    backgroundMask: backgroundMask,
                    colorLine,
                    opacity
                });
            });
        };
        this._drawLinkTriangle = (p1, link1, link2)=>{
            const linksOptions = p1.options.links;
            if (!(linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.enable)) {
                return;
            }
            const triangleOptions = linksOptions.triangles;
            if (!triangleOptions.enable) {
                return;
            }
            var _triangleOptions_opacity;
            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = (_triangleOptions_opacity = triangleOptions.opacity) !== null && _triangleOptions_opacity !== void 0 ? _triangleOptions_opacity : (link1.opacity + link2.opacity) / 2;
            if (opacityTriangle <= 0) {
                return;
            }
            container.canvas.draw((ctx)=>{
                var _p1_retina_linksDistance;
                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = (_p1_retina_linksDistance = p1.retina.linksDistance) !== null && _p1_retina_linksDistance !== void 0 ? _p1_retina_linksDistance : 0;
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos1, pos2) > linksDistance || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos3, pos2) > linksDistance || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDistance"])(pos3, pos1) > linksDistance) {
                    return;
                }
                let colorTriangle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToRgb"])(triangleOptions.color);
                if (!colorTriangle) {
                    const linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;
                    colorTriangle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getLinkColor"])(p1, p2, linkColor);
                }
                if (!colorTriangle) {
                    return;
                }
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["drawLinkTriangle"])({
                    context: ctx,
                    pos1,
                    pos2,
                    pos3,
                    backgroundMask: options.backgroundMask,
                    colorTriangle,
                    opacityTriangle
                });
            });
        };
        this._drawTriangles = (options, p1, link, p1Links)=>{
            var _options_links, _p2_options_links, _p2_links;
            const p2 = link.destination;
            if (!(((_options_links = options.links) === null || _options_links === void 0 ? void 0 : _options_links.triangles.enable) && ((_p2_options_links = p2.options.links) === null || _p2_options_links === void 0 ? void 0 : _p2_options_links.triangles.enable))) {
                return;
            }
            const vertices = (_p2_links = p2.links) === null || _p2_links === void 0 ? void 0 : _p2_links.filter((t)=>{
                const linkFreq = this._getLinkFrequency(p2, t.destination);
                return p2.options.links && linkFreq <= p2.options.links.frequency && p1Links.findIndex((l)=>l.destination === t.destination) >= 0;
            });
            if (!(vertices === null || vertices === void 0 ? void 0 : vertices.length)) {
                return;
            }
            for (const vertex of vertices){
                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);
                if (triangleFreq > options.links.triangles.frequency) {
                    continue;
                }
                this._drawLinkTriangle(p1, link, vertex);
            }
        };
        this._getLinkFrequency = (p1, p2)=>{
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setLinkFrequency"])([
                p1,
                p2
            ], this._freqs.links);
        };
        this._getTriangleFrequency = (p1, p2, p3)=>{
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setLinkFrequency"])([
                p1,
                p2,
                p3
            ], this._freqs.triangles);
        };
        this._freqs = {
            links: new Map(),
            triangles: new Map()
        };
    }
}
}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/plugin.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadLinksPlugin",
    ()=>loadLinksPlugin
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$LinkInstance$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js [app-client] (ecmascript)");
;
class LinksPlugin {
    getPlugin(container) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$LinkInstance$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LinkInstance"](container);
    }
    loadOptions() {}
    needsPlugin() {
        return true;
    }
    constructor(){
        this.id = "links";
    }
}
async function loadLinksPlugin(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    const plugin = new LinksPlugin();
    await engine.addPlugin(plugin, refresh);
}
}),
"[project]/node_modules/tsparticles-interaction-particles-links/esm/index.js [app-client] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadParticlesLinksInteraction",
    ()=>loadParticlesLinksInteraction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$interaction$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-links/esm/interaction.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$plugin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-links/esm/plugin.js [app-client] (ecmascript)");
;
;
async function loadParticlesLinksInteraction(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$interaction$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadLinksInteraction"])(engine, refresh);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$plugin$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadLinksPlugin"])(engine, refresh);
}
;
;
;
;
;
;
}),
"[project]/node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "PolygonDrawerBase",
    ()=>PolygonDrawerBase
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class PolygonDrawerBase {
    draw(context, particle, radius) {
        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = 180 * (decimalSides - 2) / decimalSides, interiorAngle = Math.PI - Math.PI * interiorAngleDegrees / 180;
        if (!context) {
            return;
        }
        context.beginPath();
        context.translate(start.x, start.y);
        context.moveTo(0, 0);
        for(let i = 0; i < sideCount; i++){
            context.lineTo(side.length, 0);
            context.translate(side.length, 0);
            context.rotate(interiorAngle);
        }
    }
    getSidesCount(particle) {
        const polygon = particle.shapeData;
        var _polygon_sides, _ref;
        return Math.round((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])((_ref = (_polygon_sides = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _polygon_sides !== void 0 ? _polygon_sides : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _ref !== void 0 ? _ref : 5));
    }
}
}),
"[project]/node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "PolygonDrawer",
    ()=>PolygonDrawer
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$PolygonDrawerBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js [app-client] (ecmascript)");
;
class PolygonDrawer extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$PolygonDrawerBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PolygonDrawerBase"] {
    getCenter(particle, radius) {
        return {
            x: -radius / (particle.sides / 3.5),
            y: -radius / (2.66 / 3.5)
        };
    }
    getSidesData(particle, radius) {
        const sides = particle.sides;
        return {
            count: {
                denominator: 1,
                numerator: sides
            },
            length: radius * 2.66 / (sides / 3)
        };
    }
}
}),
"[project]/node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "TriangleDrawer",
    ()=>TriangleDrawer
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$PolygonDrawerBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js [app-client] (ecmascript)");
;
class TriangleDrawer extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$PolygonDrawerBase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PolygonDrawerBase"] {
    getCenter(particle, radius) {
        return {
            x: -radius,
            y: radius / 1.66
        };
    }
    getSidesCount() {
        return 3;
    }
    getSidesData(particle, radius) {
        return {
            count: {
                denominator: 2,
                numerator: 3
            },
            length: radius * 2
        };
    }
}
}),
"[project]/node_modules/tsparticles-shape-polygon/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadGenericPolygonShape",
    ()=>loadGenericPolygonShape,
    "loadPolygonShape",
    ()=>loadPolygonShape,
    "loadTriangleShape",
    ()=>loadTriangleShape
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$PolygonDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$TriangleDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js [app-client] (ecmascript)");
;
;
async function loadGenericPolygonShape(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addShape("polygon", new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$PolygonDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PolygonDrawer"](), refresh);
}
async function loadTriangleShape(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addShape("triangle", new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$TriangleDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TriangleDrawer"](), refresh);
}
async function loadPolygonShape(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await loadGenericPolygonShape(engine, refresh);
    await loadTriangleShape(engine, refresh);
}
}),
"[project]/node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "RotateAnimation",
    ()=>RotateAnimation
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class RotateAnimation {
    load(data) {
        if (!data) {
            return;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.speed !== undefined) {
            this.speed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.speed);
        }
        if (data.decay !== undefined) {
            this.decay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.decay);
        }
        if (data.sync !== undefined) {
            this.sync = data.sync;
        }
    }
    constructor(){
        this.enable = false;
        this.speed = 0;
        this.decay = 0;
        this.sync = false;
    }
}
}),
"[project]/node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Rotate",
    ()=>Rotate
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$Options$2f$Classes$2f$RotateAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js [app-client] (ecmascript)");
;
;
class Rotate extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"] {
    load(data) {
        if (!data) {
            return;
        }
        super.load(data);
        if (data.direction !== undefined) {
            this.direction = data.direction;
        }
        this.animation.load(data.animation);
        if (data.path !== undefined) {
            this.path = data.path;
        }
    }
    constructor(){
        super();
        this.animation = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$Options$2f$Classes$2f$RotateAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RotateAnimation"]();
        this.direction = "clockwise";
        this.path = false;
        this.value = 0;
    }
}
}),
"[project]/node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "RotateUpdater",
    ()=>RotateUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$Options$2f$Classes$2f$Rotate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js [app-client] (ecmascript)");
;
;
function updateRotate(particle, delta) {
    const rotate = particle.rotate, rotateOptions = particle.options.rotate;
    if (!rotate || !rotateOptions) {
        return;
    }
    var _rotate_velocity, _rotate_decay;
    const rotateAnimation = rotateOptions.animation, speed = ((_rotate_velocity = rotate.velocity) !== null && _rotate_velocity !== void 0 ? _rotate_velocity : 0) * delta.factor, max = 2 * Math.PI, decay = (_rotate_decay = rotate.decay) !== null && _rotate_decay !== void 0 ? _rotate_decay : 1;
    if (!rotateAnimation.enable) {
        return;
    }
    switch(rotate.status){
        case "increasing":
            rotate.value += speed;
            if (rotate.value > max) {
                rotate.value -= max;
            }
            break;
        case "decreasing":
        default:
            rotate.value -= speed;
            if (rotate.value < 0) {
                rotate.value += max;
            }
            break;
    }
    if (rotate.velocity && decay !== 1) {
        rotate.velocity *= decay;
    }
}
class RotateUpdater {
    init(particle) {
        const rotateOptions = particle.options.rotate;
        if (!rotateOptions) {
            return;
        }
        particle.rotate = {
            enable: rotateOptions.animation.enable,
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(rotateOptions.value) * Math.PI / 180
        };
        particle.pathRotation = rotateOptions.path;
        let rotateDirection = rotateOptions.direction;
        if (rotateDirection === "random") {
            const index = Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * 2);
            rotateDirection = index > 0 ? "counter-clockwise" : "clockwise";
        }
        switch(rotateDirection){
            case "counter-clockwise":
            case "counterClockwise":
                particle.rotate.status = "decreasing";
                break;
            case "clockwise":
                particle.rotate.status = "increasing";
                break;
        }
        const rotateAnimation = rotateOptions.animation;
        if (rotateAnimation.enable) {
            particle.rotate.decay = 1 - (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(rotateAnimation.decay);
            particle.rotate.velocity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(rotateAnimation.speed) / 360 * this.container.retina.reduceFactor;
            if (!rotateAnimation.sync) {
                particle.rotate.velocity *= (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
            }
        }
        particle.rotation = particle.rotate.value;
    }
    isEnabled(particle) {
        const rotate = particle.options.rotate;
        if (!rotate) {
            return false;
        }
        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;
    }
    loadOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.rotate) {
            options.rotate = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$Options$2f$Classes$2f$Rotate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Rotate"]();
        }
        for (const source of sources){
            options.rotate.load(source === null || source === void 0 ? void 0 : source.rotate);
        }
    }
    update(particle, delta) {
        var _particle_rotate;
        if (!this.isEnabled(particle)) {
            return;
        }
        updateRotate(particle, delta);
        var _particle_rotate_value;
        particle.rotation = (_particle_rotate_value = (_particle_rotate = particle.rotate) === null || _particle_rotate === void 0 ? void 0 : _particle_rotate.value) !== null && _particle_rotate_value !== void 0 ? _particle_rotate_value : 0;
    }
    constructor(container){
        this.container = container;
    }
}
}),
"[project]/node_modules/tsparticles-updater-rotate/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadRotateUpdater",
    ()=>loadRotateUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$RotateUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js [app-client] (ecmascript)");
;
async function loadRotateUpdater(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addParticleUpdater("rotate", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$RotateUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RotateUpdater"](container), refresh);
}
}),
"[project]/node_modules/tsparticles-shape-square/esm/SquareDrawer.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "SquareDrawer",
    ()=>SquareDrawer
]);
const fixFactor = Math.sqrt(2);
class SquareDrawer {
    draw(context, particle, radius) {
        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;
        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);
    }
    getSidesCount() {
        return 4;
    }
}
}),
"[project]/node_modules/tsparticles-shape-square/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadSquareShape",
    ()=>loadSquareShape
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$square$2f$esm$2f$SquareDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-square/esm/SquareDrawer.js [app-client] (ecmascript)");
;
async function loadSquareShape(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addShape([
        "edge",
        "square"
    ], new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$square$2f$esm$2f$SquareDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SquareDrawer"](), refresh);
}
}),
"[project]/node_modules/tsparticles-shape-star/esm/StarDrawer.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "StarDrawer",
    ()=>StarDrawer
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class StarDrawer {
    draw(context, particle, radius) {
        var _particle_starInset;
        const sides = particle.sides, inset = (_particle_starInset = particle.starInset) !== null && _particle_starInset !== void 0 ? _particle_starInset : 2;
        context.moveTo(0, 0 - radius);
        for(let i = 0; i < sides; i++){
            context.rotate(Math.PI / sides);
            context.lineTo(0, 0 - radius * inset);
            context.rotate(Math.PI / sides);
            context.lineTo(0, 0 - radius);
        }
    }
    getSidesCount(particle) {
        const star = particle.shapeData;
        var _star_sides, _ref;
        return Math.round((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])((_ref = (_star_sides = star === null || star === void 0 ? void 0 : star.sides) !== null && _star_sides !== void 0 ? _star_sides : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _ref !== void 0 ? _ref : 5));
    }
    particleInit(container, particle) {
        var _star_inset;
        const star = particle.shapeData, inset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])((_star_inset = star === null || star === void 0 ? void 0 : star.inset) !== null && _star_inset !== void 0 ? _star_inset : 2);
        particle.starInset = inset;
    }
}
}),
"[project]/node_modules/tsparticles-shape-star/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadStarShape",
    ()=>loadStarShape
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$star$2f$esm$2f$StarDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-star/esm/StarDrawer.js [app-client] (ecmascript)");
;
async function loadStarShape(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addShape("star", new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$star$2f$esm$2f$StarDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StarDrawer"](), refresh);
}
}),
"[project]/node_modules/tsparticles-updater-stroke-color/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "updateStrokeColor",
    ()=>updateStrokeColor
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
function updateColorValue(delta, colorValue, valueAnimation, max, decrease) {
    var _colorValue_maxLoops, _colorValue_loops, _colorValue_maxLoops1;
    if (!colorValue || !valueAnimation.enable || ((_colorValue_maxLoops = colorValue.maxLoops) !== null && _colorValue_maxLoops !== void 0 ? _colorValue_maxLoops : 0) > 0 && ((_colorValue_loops = colorValue.loops) !== null && _colorValue_loops !== void 0 ? _colorValue_loops : 0) > ((_colorValue_maxLoops1 = colorValue.maxLoops) !== null && _colorValue_maxLoops1 !== void 0 ? _colorValue_maxLoops1 : 0)) {
        return;
    }
    if (!colorValue.time) {
        colorValue.time = 0;
    }
    var _colorValue_delayTime, _colorValue_delayTime1;
    if (((_colorValue_delayTime = colorValue.delayTime) !== null && _colorValue_delayTime !== void 0 ? _colorValue_delayTime : 0) > 0 && colorValue.time < ((_colorValue_delayTime1 = colorValue.delayTime) !== null && _colorValue_delayTime1 !== void 0 ? _colorValue_delayTime1 : 0)) {
        colorValue.time += delta.value;
    }
    var _colorValue_delayTime2, _colorValue_delayTime3;
    if (((_colorValue_delayTime2 = colorValue.delayTime) !== null && _colorValue_delayTime2 !== void 0 ? _colorValue_delayTime2 : 0) > 0 && colorValue.time < ((_colorValue_delayTime3 = colorValue.delayTime) !== null && _colorValue_delayTime3 !== void 0 ? _colorValue_delayTime3 : 0)) {
        return;
    }
    var _colorValue_velocity, _colorValue_decay;
    const offset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["randomInRange"])(valueAnimation.offset), velocity = ((_colorValue_velocity = colorValue.velocity) !== null && _colorValue_velocity !== void 0 ? _colorValue_velocity : 0) * delta.factor + offset * 3.6, decay = (_colorValue_decay = colorValue.decay) !== null && _colorValue_decay !== void 0 ? _colorValue_decay : 1;
    if (!decrease || colorValue.status === "increasing") {
        colorValue.value += velocity;
        if (colorValue.value > max) {
            if (!colorValue.loops) {
                colorValue.loops = 0;
            }
            colorValue.loops++;
            if (decrease) {
                colorValue.status = "decreasing";
                colorValue.value -= colorValue.value % max;
            }
        }
    } else {
        colorValue.value -= velocity;
        if (colorValue.value < 0) {
            if (!colorValue.loops) {
                colorValue.loops = 0;
            }
            colorValue.loops++;
            colorValue.status = "increasing";
            colorValue.value += colorValue.value;
        }
    }
    if (colorValue.velocity && decay !== 1) {
        colorValue.velocity *= decay;
    }
    if (colorValue.value > max) {
        colorValue.value %= max;
    }
}
function updateStrokeColor(particle, delta) {
    if (!particle.strokeColor || !particle.strokeAnimation) {
        return;
    }
    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;
    if (h) {
        updateColorValue(delta, h, hAnimation, 360, false);
    }
    if (s) {
        updateColorValue(delta, s, sAnimation, 100, true);
    }
    if (l) {
        updateColorValue(delta, l, lAnimation, 100, true);
    }
}
}),
"[project]/node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "StrokeColorUpdater",
    ()=>StrokeColorUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$stroke$2d$color$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-stroke-color/esm/Utils.js [app-client] (ecmascript)");
;
;
class StrokeColorUpdater {
    init(particle) {
        var _stroke_color;
        const container = this.container, options = particle.options;
        const stroke = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(options.stroke, particle.id, options.reduceDuplicates);
        particle.strokeWidth = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(stroke.width) * container.retina.pixelRatio;
        var _stroke_opacity;
        particle.strokeOpacity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])((_stroke_opacity = stroke.opacity) !== null && _stroke_opacity !== void 0 ? _stroke_opacity : 1);
        particle.strokeAnimation = (_stroke_color = stroke.color) === null || _stroke_color === void 0 ? void 0 : _stroke_color.animation;
        var _rangeColorToHsl;
        const strokeHslColor = (_rangeColorToHsl = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToHsl"])(stroke.color)) !== null && _rangeColorToHsl !== void 0 ? _rangeColorToHsl : particle.getFillColor();
        if (strokeHslColor) {
            particle.strokeColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getHslAnimationFromHsl"])(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);
        }
    }
    isEnabled(particle) {
        const color = particle.strokeAnimation, { strokeColor } = particle;
        return !particle.destroyed && !particle.spawning && !!color && ((strokeColor === null || strokeColor === void 0 ? void 0 : strokeColor.h.value) !== undefined && strokeColor.h.enable || (strokeColor === null || strokeColor === void 0 ? void 0 : strokeColor.s.value) !== undefined && strokeColor.s.enable || (strokeColor === null || strokeColor === void 0 ? void 0 : strokeColor.l.value) !== undefined && strokeColor.l.enable);
    }
    update(particle, delta) {
        if (!this.isEnabled(particle)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$stroke$2d$color$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateStrokeColor"])(particle, delta);
    }
    constructor(container){
        this.container = container;
    }
}
}),
"[project]/node_modules/tsparticles-updater-stroke-color/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadStrokeColorUpdater",
    ()=>loadStrokeColorUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$stroke$2d$color$2f$esm$2f$StrokeColorUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js [app-client] (ecmascript)");
;
async function loadStrokeColorUpdater(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addParticleUpdater("strokeColor", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$stroke$2d$color$2f$esm$2f$StrokeColorUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["StrokeColorUpdater"](container), refresh);
}
}),
"[project]/node_modules/tsparticles-shape-text/esm/TextDrawer.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "TextDrawer",
    ()=>TextDrawer,
    "validTypes",
    ()=>validTypes
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
;
const validTypes = [
    "text",
    "character",
    "char"
];
class TextDrawer {
    draw(context, particle, radius, opacity) {
        const character = particle.shapeData;
        if (character === undefined) {
            return;
        }
        const textData = character.value;
        if (textData === undefined) {
            return;
        }
        if (particle.text === undefined) {
            particle.text = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(textData, particle.randomIndexData);
        }
        var _character_style, _character_weight, _character_font;
        const text = particle.text, style = (_character_style = character.style) !== null && _character_style !== void 0 ? _character_style : "", weight = (_character_weight = character.weight) !== null && _character_weight !== void 0 ? _character_weight : "400", size = Math.round(radius) * 2, font = (_character_font = character.font) !== null && _character_font !== void 0 ? _character_font : "Verdana", fill = particle.fill, offsetX = text.length * radius / 2;
        context.font = "".concat(style, " ").concat(weight, " ").concat(size, 'px "').concat(font, '"');
        const pos = {
            x: -offsetX,
            y: radius / 2
        };
        context.globalAlpha = opacity;
        if (fill) {
            context.fillText(text, pos.x, pos.y);
        } else {
            context.strokeText(text, pos.x, pos.y);
        }
        context.globalAlpha = 1;
    }
    getSidesCount() {
        return 12;
    }
    async init(container) {
        const options = container.actualOptions;
        if (validTypes.find((t)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isInArray"])(t, options.particles.shape.type))) {
            const shapeOptions = validTypes.map((t)=>options.particles.shape.options[t]).find((t)=>!!t), promises = [];
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["executeOnSingleOrMultiple"])(shapeOptions, (shape)=>{
                promises.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadFont"])(shape.font, shape.weight));
            });
            await Promise.all(promises);
        }
    }
    particleInit(container, particle) {
        if (!particle.shape || !validTypes.includes(particle.shape)) {
            return;
        }
        const character = particle.shapeData;
        if (character === undefined) {
            return;
        }
        const textData = character.value;
        if (textData === undefined) {
            return;
        }
        particle.text = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["itemFromSingleOrMultiple"])(textData, particle.randomIndexData);
    }
}
}),
"[project]/node_modules/tsparticles-shape-text/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadTextShape",
    ()=>loadTextShape
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$text$2f$esm$2f$TextDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-text/esm/TextDrawer.js [app-client] (ecmascript)");
;
async function loadTextShape(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addShape(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$text$2f$esm$2f$TextDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validTypes"], new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$text$2f$esm$2f$TextDrawer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TextDrawer"](), refresh);
}
}),
"[project]/node_modules/tsparticles-slim/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadSlim",
    ()=>loadSlim
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$particles$2e$js$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-particles.js/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$basic$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-basic/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$easing$2d$quad$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-easing-quad/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$attract$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-attract/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bounce$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-bounce/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-bubble/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-connect/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-grab/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$pause$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-pause/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$push$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-push/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$remove$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-remove/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-repulse/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$slow$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-slow/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-image/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-life/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$line$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-line/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$parallax$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-move-parallax/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$attract$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-attract/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-collisions/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-particles-links/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-polygon/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-rotate/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$square$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-square/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$star$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-star/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$stroke$2d$color$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-stroke-color/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$text$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-shape-text/esm/index.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
async function loadSlim(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$particles$2e$js$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["initPjs"])(engine);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$move$2d$parallax$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadParallaxMover"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$attract$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalAttractInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bounce$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalBounceInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$bubble$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalBubbleInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$connect$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalConnectInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$grab$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalGrabInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$pause$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadExternalPauseInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$push$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalPushInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$remove$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalRemoveInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$repulse$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalRepulseInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$slow$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalSlowInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$attract$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadParticlesAttractInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$collisions$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadParticlesCollisionsInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$particles$2d$links$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadParticlesLinksInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$easing$2d$quad$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadEasingQuadPlugin"])();
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$image$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadImageShape"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$line$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadLineShape"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$polygon$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadPolygonShape"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$square$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadSquareShape"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$star$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadStarShape"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$shape$2d$text$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadTextShape"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$life$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadLifeUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$rotate$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadRotateUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$stroke$2d$color$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadStrokeColorUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$basic$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadBasic"])(engine, refresh);
}
}),
"[project]/node_modules/tsparticles-updater-tilt/esm/Options/Classes/TiltAnimation.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "TiltAnimation",
    ()=>TiltAnimation
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class TiltAnimation {
    load(data) {
        if (!data) {
            return;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.speed !== undefined) {
            this.speed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.speed);
        }
        if (data.decay !== undefined) {
            this.decay = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.decay);
        }
        if (data.sync !== undefined) {
            this.sync = data.sync;
        }
    }
    constructor(){
        this.enable = false;
        this.speed = 0;
        this.decay = 0;
        this.sync = false;
    }
}
}),
"[project]/node_modules/tsparticles-updater-tilt/esm/Options/Classes/Tilt.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Tilt",
    ()=>Tilt
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$tilt$2f$esm$2f$Options$2f$Classes$2f$TiltAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-tilt/esm/Options/Classes/TiltAnimation.js [app-client] (ecmascript)");
;
;
class Tilt extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$ValueWithRandom$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ValueWithRandom"] {
    load(data) {
        super.load(data);
        if (!data) {
            return;
        }
        this.animation.load(data.animation);
        if (data.direction !== undefined) {
            this.direction = data.direction;
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
    }
    constructor(){
        super();
        this.animation = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$tilt$2f$esm$2f$Options$2f$Classes$2f$TiltAnimation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TiltAnimation"]();
        this.direction = "clockwise";
        this.enable = false;
        this.value = 0;
    }
}
}),
"[project]/node_modules/tsparticles-updater-tilt/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "updateTilt",
    ()=>updateTilt
]);
function updateTilt(particle, delta) {
    if (!particle.tilt || !particle.options.tilt) {
        return;
    }
    var _particle_tilt_velocity, _particle_tilt_decay;
    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = ((_particle_tilt_velocity = particle.tilt.velocity) !== null && _particle_tilt_velocity !== void 0 ? _particle_tilt_velocity : 0) * delta.factor, max = 2 * Math.PI, decay = (_particle_tilt_decay = particle.tilt.decay) !== null && _particle_tilt_decay !== void 0 ? _particle_tilt_decay : 1;
    if (!tiltAnimation.enable) {
        return;
    }
    switch(particle.tilt.status){
        case "increasing":
            particle.tilt.value += speed;
            if (particle.tilt.value > max) {
                particle.tilt.value -= max;
            }
            break;
        case "decreasing":
        default:
            particle.tilt.value -= speed;
            if (particle.tilt.value < 0) {
                particle.tilt.value += max;
            }
            break;
    }
    if (particle.tilt.velocity && decay !== 1) {
        particle.tilt.velocity *= decay;
    }
}
}),
"[project]/node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "TiltUpdater",
    ()=>TiltUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$tilt$2f$esm$2f$Options$2f$Classes$2f$Tilt$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-tilt/esm/Options/Classes/Tilt.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$tilt$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-tilt/esm/Utils.js [app-client] (ecmascript)");
;
;
;
class TiltUpdater {
    getTransformValues(particle) {
        var _particle_tilt;
        const tilt = ((_particle_tilt = particle.tilt) === null || _particle_tilt === void 0 ? void 0 : _particle_tilt.enable) && particle.tilt;
        return {
            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,
            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined
        };
    }
    init(particle) {
        var _particle_options_tilt;
        const tiltOptions = particle.options.tilt;
        if (!tiltOptions) {
            return;
        }
        particle.tilt = {
            enable: tiltOptions.enable,
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(tiltOptions.value) * Math.PI / 180,
            sinDirection: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() >= 0.5 ? 1 : -1,
            cosDirection: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() >= 0.5 ? 1 : -1
        };
        let tiltDirection = tiltOptions.direction;
        if (tiltDirection === "random") {
            const index = Math.floor((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * 2);
            tiltDirection = index > 0 ? "counter-clockwise" : "clockwise";
        }
        switch(tiltDirection){
            case "counter-clockwise":
            case "counterClockwise":
                particle.tilt.status = "decreasing";
                break;
            case "clockwise":
                particle.tilt.status = "increasing";
                break;
        }
        const tiltAnimation = (_particle_options_tilt = particle.options.tilt) === null || _particle_options_tilt === void 0 ? void 0 : _particle_options_tilt.animation;
        if (tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable) {
            particle.tilt.decay = 1 - (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(tiltAnimation.decay);
            particle.tilt.velocity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(tiltAnimation.speed) / 360 * this.container.retina.reduceFactor;
            if (!tiltAnimation.sync) {
                particle.tilt.velocity *= (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])();
            }
        }
    }
    isEnabled(particle) {
        var _particle_options_tilt;
        const tiltAnimation = (_particle_options_tilt = particle.options.tilt) === null || _particle_options_tilt === void 0 ? void 0 : _particle_options_tilt.animation;
        return !particle.destroyed && !particle.spawning && !!(tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable);
    }
    loadOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.tilt) {
            options.tilt = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$tilt$2f$esm$2f$Options$2f$Classes$2f$Tilt$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Tilt"]();
        }
        for (const source of sources){
            options.tilt.load(source === null || source === void 0 ? void 0 : source.tilt);
        }
    }
    update(particle, delta) {
        if (!this.isEnabled(particle)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$tilt$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateTilt"])(particle, delta);
    }
    constructor(container){
        this.container = container;
    }
}
}),
"[project]/node_modules/tsparticles-updater-tilt/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadTiltUpdater",
    ()=>loadTiltUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$tilt$2f$esm$2f$TiltUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js [app-client] (ecmascript)");
;
async function loadTiltUpdater(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addParticleUpdater("tilt", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$tilt$2f$esm$2f$TiltUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TiltUpdater"](container), refresh);
}
}),
"[project]/node_modules/tsparticles-updater-twinkle/esm/Options/Classes/TwinkleValues.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "TwinkleValues",
    ()=>TwinkleValues
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class TwinkleValues {
    load(data) {
        if (!data) {
            return;
        }
        if (data.color !== undefined) {
            this.color = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Options$2f$Classes$2f$OptionsColor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["OptionsColor"].create(this.color, data.color);
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.frequency !== undefined) {
            this.frequency = data.frequency;
        }
        if (data.opacity !== undefined) {
            this.opacity = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.opacity);
        }
    }
    constructor(){
        this.enable = false;
        this.frequency = 0.05;
        this.opacity = 1;
    }
}
}),
"[project]/node_modules/tsparticles-updater-twinkle/esm/Options/Classes/Twinkle.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Twinkle",
    ()=>Twinkle
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$twinkle$2f$esm$2f$Options$2f$Classes$2f$TwinkleValues$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-twinkle/esm/Options/Classes/TwinkleValues.js [app-client] (ecmascript)");
;
class Twinkle {
    load(data) {
        if (!data) {
            return;
        }
        this.lines.load(data.lines);
        this.particles.load(data.particles);
    }
    constructor(){
        this.lines = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$twinkle$2f$esm$2f$Options$2f$Classes$2f$TwinkleValues$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TwinkleValues"]();
        this.particles = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$twinkle$2f$esm$2f$Options$2f$Classes$2f$TwinkleValues$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TwinkleValues"]();
    }
}
}),
"[project]/node_modules/tsparticles-updater-twinkle/esm/TwinkleUpdater.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "TwinkleUpdater",
    ()=>TwinkleUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$twinkle$2f$esm$2f$Options$2f$Classes$2f$Twinkle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-twinkle/esm/Options/Classes/Twinkle.js [app-client] (ecmascript)");
;
;
class TwinkleUpdater {
    getColorStyles(particle, context, radius, opacity) {
        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;
        if (!twinkleOptions) {
            return {};
        }
        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["rangeColorToHsl"])(twinkle.color), twinkleStyle = twinkleRgb ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$ColorUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStyleFromHsl"])(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;
        res.fill = needsTwinkle ? twinkleStyle : undefined;
        res.stroke = needsTwinkle ? twinkleStyle : undefined;
        return res;
    }
    init() {}
    isEnabled(particle) {
        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;
        if (!twinkleOptions) {
            return false;
        }
        return twinkleOptions.particles.enable;
    }
    loadOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.twinkle) {
            options.twinkle = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$twinkle$2f$esm$2f$Options$2f$Classes$2f$Twinkle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Twinkle"]();
        }
        for (const source of sources){
            options.twinkle.load(source === null || source === void 0 ? void 0 : source.twinkle);
        }
    }
    update() {}
}
}),
"[project]/node_modules/tsparticles-updater-twinkle/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadTwinkleUpdater",
    ()=>loadTwinkleUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$twinkle$2f$esm$2f$TwinkleUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-twinkle/esm/TwinkleUpdater.js [app-client] (ecmascript)");
;
async function loadTwinkleUpdater(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addParticleUpdater("twinkle", ()=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$twinkle$2f$esm$2f$TwinkleUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TwinkleUpdater"](), refresh);
}
}),
"[project]/node_modules/tsparticles-updater-wobble/esm/Options/Classes/WobbleSpeed.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "WobbleSpeed",
    ()=>WobbleSpeed
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
;
class WobbleSpeed {
    load(data) {
        if (!data) {
            return;
        }
        if (data.angle !== undefined) {
            this.angle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.angle);
        }
        if (data.move !== undefined) {
            this.move = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.move);
        }
    }
    constructor(){
        this.angle = 50;
        this.move = 10;
    }
}
}),
"[project]/node_modules/tsparticles-updater-wobble/esm/Options/Classes/Wobble.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Wobble",
    ()=>Wobble
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$wobble$2f$esm$2f$Options$2f$Classes$2f$WobbleSpeed$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-wobble/esm/Options/Classes/WobbleSpeed.js [app-client] (ecmascript)");
;
;
class Wobble {
    load(data) {
        if (!data) {
            return;
        }
        if (data.distance !== undefined) {
            this.distance = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setRangeValue"])(data.distance);
        }
        if (data.enable !== undefined) {
            this.enable = data.enable;
        }
        if (data.speed !== undefined) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isNumber"])(data.speed)) {
                this.speed.load({
                    angle: data.speed
                });
            } else {
                const rangeSpeed = data.speed;
                if (rangeSpeed.min !== undefined) {
                    this.speed.load({
                        angle: rangeSpeed
                    });
                } else {
                    this.speed.load(data.speed);
                }
            }
        }
    }
    constructor(){
        this.distance = 5;
        this.enable = false;
        this.speed = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$wobble$2f$esm$2f$Options$2f$Classes$2f$WobbleSpeed$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WobbleSpeed"]();
    }
}
}),
"[project]/node_modules/tsparticles-updater-wobble/esm/Utils.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "updateWobble",
    ()=>updateWobble
]);
function updateWobble(particle, delta) {
    const { wobble: wobbleOptions } = particle.options, { wobble } = particle;
    if (!(wobbleOptions === null || wobbleOptions === void 0 ? void 0 : wobbleOptions.enable) || !wobble) {
        return;
    }
    var _particle_retina_wobbleDistance;
    const angleSpeed = wobble.angleSpeed * delta.factor, moveSpeed = wobble.moveSpeed * delta.factor, distance = moveSpeed * (((_particle_retina_wobbleDistance = particle.retina.wobbleDistance) !== null && _particle_retina_wobbleDistance !== void 0 ? _particle_retina_wobbleDistance : 0) * delta.factor) / (1000 / 60), max = 2 * Math.PI, { position } = particle;
    wobble.angle += angleSpeed;
    if (wobble.angle > max) {
        wobble.angle -= max;
    }
    position.x += distance * Math.cos(wobble.angle);
    position.y += distance * Math.abs(Math.sin(wobble.angle));
}
}),
"[project]/node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "WobbleUpdater",
    ()=>WobbleUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$wobble$2f$esm$2f$Options$2f$Classes$2f$Wobble$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-wobble/esm/Options/Classes/Wobble.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$wobble$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-wobble/esm/Utils.js [app-client] (ecmascript)");
;
;
;
class WobbleUpdater {
    init(particle) {
        const wobbleOpt = particle.options.wobble;
        if (wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.enable) {
            particle.wobble = {
                angle: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRandom"])() * Math.PI * 2,
                angleSpeed: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(wobbleOpt.speed.angle) / 360,
                moveSpeed: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])(wobbleOpt.speed.move) / 10
            };
        } else {
            particle.wobble = {
                angle: 0,
                angleSpeed: 0,
                moveSpeed: 0
            };
        }
        var _wobbleOpt_distance;
        particle.retina.wobbleDistance = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$engine$2f$esm$2f$Utils$2f$NumberUtils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getRangeValue"])((_wobbleOpt_distance = wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.distance) !== null && _wobbleOpt_distance !== void 0 ? _wobbleOpt_distance : 0) * this.container.retina.pixelRatio;
    }
    isEnabled(particle) {
        var _particle_options_wobble;
        return !particle.destroyed && !particle.spawning && !!((_particle_options_wobble = particle.options.wobble) === null || _particle_options_wobble === void 0 ? void 0 : _particle_options_wobble.enable);
    }
    loadOptions(options) {
        for(var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){
            sources[_key - 1] = arguments[_key];
        }
        if (!options.wobble) {
            options.wobble = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$wobble$2f$esm$2f$Options$2f$Classes$2f$Wobble$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Wobble"]();
        }
        for (const source of sources){
            options.wobble.load(source === null || source === void 0 ? void 0 : source.wobble);
        }
    }
    update(particle, delta) {
        if (!this.isEnabled(particle)) {
            return;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$wobble$2f$esm$2f$Utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["updateWobble"])(particle, delta);
    }
    constructor(container){
        this.container = container;
    }
}
}),
"[project]/node_modules/tsparticles-updater-wobble/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadWobbleUpdater",
    ()=>loadWobbleUpdater
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$wobble$2f$esm$2f$WobbleUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js [app-client] (ecmascript)");
;
async function loadWobbleUpdater(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await engine.addParticleUpdater("wobble", (container)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$wobble$2f$esm$2f$WobbleUpdater$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["WobbleUpdater"](container), refresh);
}
}),
"[project]/node_modules/tsparticles/esm/index.js [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "loadFull",
    ()=>loadFull
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-absorbers/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-destroy/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-plugin-emitters/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$trail$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-interaction-external-trail/esm/index.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$roll$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-roll/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$slim$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-slim/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$tilt$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-tilt/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$twinkle$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-twinkle/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$wobble$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tsparticles-updater-wobble/esm/index.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
async function loadFull(engine) {
    let refresh = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$destroy$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadDestroyUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$roll$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadRollUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$tilt$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadTiltUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$twinkle$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadTwinkleUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$updater$2d$wobble$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadWobbleUpdater"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$interaction$2d$external$2d$trail$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadExternalTrailInteraction"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$absorbers$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadAbsorbersPlugin"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$plugin$2d$emitters$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["loadEmittersPlugin"])(engine, false);
    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tsparticles$2d$slim$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["loadSlim"])(engine, refresh);
}
}),
"[project]/node_modules/next-themes/dist/index.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "ThemeProvider",
    ()=>J,
    "useTheme",
    ()=>z
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
"use client";
;
var M = (e, i, s, u, m, a, l, h)=>{
    let d = document.documentElement, w = [
        "light",
        "dark"
    ];
    function p(n) {
        (Array.isArray(e) ? e : [
            e
        ]).forEach((y)=>{
            let k = y === "class", S = k && a ? m.map((f)=>a[f] || f) : m;
            k ? (d.classList.remove(...S), d.classList.add(a && a[n] ? a[n] : n)) : d.setAttribute(y, n);
        }), R(n);
    }
    function R(n) {
        h && w.includes(n) && (d.style.colorScheme = n);
    }
    function c() {
        return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
    }
    if (u) p(u);
    else try {
        let n = localStorage.getItem(i) || s, y = l && n === "system" ? c() : n;
        p(y);
    } catch (n) {}
};
var b = [
    "light",
    "dark"
], I = "(prefers-color-scheme: dark)", O = typeof window == "undefined", x = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createContext"](void 0), U = {
    setTheme: (e)=>{},
    themes: []
}, z = ()=>{
    var e;
    return (e = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContext"](x)) != null ? e : U;
}, J = (e)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContext"](x) ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createElement"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], null, e.children) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createElement"](V, {
        ...e
    }), N = [
    "light",
    "dark"
], V = (param)=>{
    let { forcedTheme: e, disableTransitionOnChange: i = !1, enableSystem: s = !0, enableColorScheme: u = !0, storageKey: m = "theme", themes: a = N, defaultTheme: l = s ? "system" : "light", attribute: h = "data-theme", value: d, children: w, nonce: p, scriptProps: R } = param;
    let [c, n] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"]({
        "V.useState": ()=>H(m, l)
    }["V.useState"]), [T, y] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"]({
        "V.useState": ()=>c === "system" ? E() : c
    }["V.useState"]), k = d ? Object.values(d) : a, S = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"]({
        "V.useCallback[S]": (o)=>{
            let r = o;
            if (!r) return;
            o === "system" && s && (r = E());
            let v = d ? d[r] : r, C = i ? W(p) : null, P = document.documentElement, L = {
                "V.useCallback[S].L": (g)=>{
                    g === "class" ? (P.classList.remove(...k), v && P.classList.add(v)) : g.startsWith("data-") && (v ? P.setAttribute(g, v) : P.removeAttribute(g));
                }
            }["V.useCallback[S].L"];
            if (Array.isArray(h) ? h.forEach(L) : L(h), u) {
                let g = b.includes(l) ? l : null, D = b.includes(r) ? r : g;
                P.style.colorScheme = D;
            }
            C == null || C();
        }
    }["V.useCallback[S]"], [
        p
    ]), f = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"]({
        "V.useCallback[f]": (o)=>{
            let r = typeof o == "function" ? o(c) : o;
            n(r);
            try {
                localStorage.setItem(m, r);
            } catch (v) {}
        }
    }["V.useCallback[f]"], [
        c
    ]), A = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"]({
        "V.useCallback[A]": (o)=>{
            let r = E(o);
            y(r), c === "system" && s && !e && S("system");
        }
    }["V.useCallback[A]"], [
        c,
        e
    ]);
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"]({
        "V.useEffect": ()=>{
            let o = window.matchMedia(I);
            return o.addListener(A), A(o), ({
                "V.useEffect": ()=>o.removeListener(A)
            })["V.useEffect"];
        }
    }["V.useEffect"], [
        A
    ]), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"]({
        "V.useEffect": ()=>{
            let o = {
                "V.useEffect.o": (r)=>{
                    r.key === m && (r.newValue ? n(r.newValue) : f(l));
                }
            }["V.useEffect.o"];
            return window.addEventListener("storage", o), ({
                "V.useEffect": ()=>window.removeEventListener("storage", o)
            })["V.useEffect"];
        }
    }["V.useEffect"], [
        f
    ]), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"]({
        "V.useEffect": ()=>{
            S(e != null ? e : c);
        }
    }["V.useEffect"], [
        e,
        c
    ]);
    let Q = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"]({
        "V.useMemo[Q]": ()=>({
                theme: c,
                setTheme: f,
                forcedTheme: e,
                resolvedTheme: c === "system" ? T : c,
                themes: s ? [
                    ...a,
                    "system"
                ] : a,
                systemTheme: s ? T : void 0
            })
    }["V.useMemo[Q]"], [
        c,
        f,
        e,
        T,
        s,
        a
    ]);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createElement"](x.Provider, {
        value: Q
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createElement"](_, {
        forcedTheme: e,
        storageKey: m,
        attribute: h,
        enableSystem: s,
        enableColorScheme: u,
        defaultTheme: l,
        value: d,
        themes: a,
        nonce: p,
        scriptProps: R
    }), w);
}, _ = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"]((param)=>{
    let { forcedTheme: e, storageKey: i, attribute: s, enableSystem: u, enableColorScheme: m, defaultTheme: a, value: l, themes: h, nonce: d, scriptProps: w } = param;
    let p = JSON.stringify([
        s,
        i,
        a,
        e,
        h,
        l,
        u,
        m
    ]).slice(1, -1);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createElement"]("script", {
        ...w,
        suppressHydrationWarning: !0,
        nonce: typeof window == "undefined" ? d : "",
        dangerouslySetInnerHTML: {
            __html: "(".concat(M.toString(), ")(").concat(p, ")")
        }
    });
}), H = (e, i)=>{
    if (O) return;
    let s;
    try {
        s = localStorage.getItem(e) || void 0;
    } catch (u) {}
    return s || i;
}, W = (e)=>{
    let i = document.createElement("style");
    return e && i.setAttribute("nonce", e), i.appendChild(document.createTextNode("*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}")), document.head.appendChild(i), ()=>{
        window.getComputedStyle(document.body), setTimeout(()=>{
            document.head.removeChild(i);
        }, 1);
    };
}, E = (e)=>(e || (e = window.matchMedia(I)), e.matches ? "dark" : "light");
;
}),
"[project]/node_modules/motion-utils/dist/es/clamp.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "clamp",
    ()=>clamp
]);
const clamp = (min, max, v)=>{
    if (v > max) return max;
    if (v < min) return min;
    return v;
};
;
}),
"[project]/node_modules/motion-utils/dist/es/format-error-message.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "formatErrorMessage",
    ()=>formatErrorMessage
]);
function formatErrorMessage(message, errorCode) {
    return errorCode ? "".concat(message, ". For more information and steps for solving, visit https://motion.dev/troubleshooting/").concat(errorCode) : message;
}
;
}),
"[project]/node_modules/motion-utils/dist/es/errors.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "invariant",
    ()=>invariant,
    "warning",
    ()=>warning
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$format$2d$error$2d$message$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/format-error-message.mjs [app-client] (ecmascript)");
;
let warning = ()=>{};
let invariant = ()=>{};
if ("TURBOPACK compile-time truthy", 1) {
    warning = (check, message, errorCode)=>{
        if (!check && typeof console !== "undefined") {
            console.warn((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$format$2d$error$2d$message$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatErrorMessage"])(message, errorCode));
        }
    };
    invariant = (check, message, errorCode)=>{
        if (!check) {
            throw new Error((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$format$2d$error$2d$message$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatErrorMessage"])(message, errorCode));
        }
    };
}
;
}),
"[project]/node_modules/motion-utils/dist/es/is-numerical-string.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Check if value is a numerical string, ie a string that is purely a number eg "100" or "-100.1"
 */ __turbopack_context__.s([
    "isNumericalString",
    ()=>isNumericalString
]);
const isNumericalString = (v)=>/^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(v);
;
}),
"[project]/node_modules/motion-utils/dist/es/noop.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/*#__NO_SIDE_EFFECTS__*/ __turbopack_context__.s([
    "noop",
    ()=>noop
]);
const noop = (any)=>any;
;
}),
"[project]/node_modules/motion-utils/dist/es/global-config.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "MotionGlobalConfig",
    ()=>MotionGlobalConfig
]);
const MotionGlobalConfig = {};
;
}),
"[project]/node_modules/motion-utils/dist/es/is-zero-value-string.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Check if the value is a zero value string like "0px" or "0%"
 */ __turbopack_context__.s([
    "isZeroValueString",
    ()=>isZeroValueString
]);
const isZeroValueString = (v)=>/^0[^.\s]+$/u.test(v);
;
}),
"[project]/node_modules/motion-utils/dist/es/warn-once.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "hasWarned",
    ()=>hasWarned,
    "warnOnce",
    ()=>warnOnce
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$format$2d$error$2d$message$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/format-error-message.mjs [app-client] (ecmascript)");
;
const warned = new Set();
function hasWarned(message) {
    return warned.has(message);
}
function warnOnce(condition, message, errorCode) {
    if (condition || warned.has(message)) return;
    console.warn((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$format$2d$error$2d$message$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatErrorMessage"])(message, errorCode));
    warned.add(message);
}
;
}),
"[project]/node_modules/motion-utils/dist/es/array.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "addUniqueItem",
    ()=>addUniqueItem,
    "moveItem",
    ()=>moveItem,
    "removeItem",
    ()=>removeItem
]);
function addUniqueItem(arr, item) {
    if (arr.indexOf(item) === -1) arr.push(item);
}
function removeItem(arr, item) {
    const index = arr.indexOf(item);
    if (index > -1) arr.splice(index, 1);
}
// Adapted from array-move
function moveItem(param, fromIndex, toIndex) {
    let [...arr] = param;
    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;
    if (startIndex >= 0 && startIndex < arr.length) {
        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;
        const [item] = arr.splice(fromIndex, 1);
        arr.splice(endIndex, 0, item);
    }
    return arr;
}
;
}),
"[project]/node_modules/motion-utils/dist/es/subscription-manager.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "SubscriptionManager",
    ()=>SubscriptionManager
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$array$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/array.mjs [app-client] (ecmascript)");
;
class SubscriptionManager {
    add(handler) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$array$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["addUniqueItem"])(this.subscriptions, handler);
        return ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$array$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["removeItem"])(this.subscriptions, handler);
    }
    notify(a, b, c) {
        const numSubscriptions = this.subscriptions.length;
        if (!numSubscriptions) return;
        if (numSubscriptions === 1) {
            /**
             * If there's only a single handler we can just call it without invoking a loop.
             */ this.subscriptions[0](a, b, c);
        } else {
            for(let i = 0; i < numSubscriptions; i++){
                /**
                 * Check whether the handler exists before firing as it's possible
                 * the subscriptions were modified during this loop running.
                 */ const handler = this.subscriptions[i];
                handler && handler(a, b, c);
            }
        }
    }
    getSize() {
        return this.subscriptions.length;
    }
    clear() {
        this.subscriptions.length = 0;
    }
    constructor(){
        this.subscriptions = [];
    }
}
;
}),
"[project]/node_modules/motion-utils/dist/es/velocity-per-second.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/*
  Convert velocity into velocity per second

  @param [number]: Unit per frame
  @param [number]: Frame duration in ms
*/ __turbopack_context__.s([
    "velocityPerSecond",
    ()=>velocityPerSecond
]);
function velocityPerSecond(velocity, frameDuration) {
    return frameDuration ? velocity * (1000 / frameDuration) : 0;
}
;
}),
"[project]/node_modules/motion-utils/dist/es/pipe.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Pipe
 * Compose other transformers to run linearily
 * pipe(min(20), max(40))
 * @param  {...functions} transformers
 * @return {function}
 */ __turbopack_context__.s([
    "pipe",
    ()=>pipe
]);
const combineFunctions = (a, b)=>(v)=>b(a(v));
const pipe = function() {
    for(var _len = arguments.length, transformers = new Array(_len), _key = 0; _key < _len; _key++){
        transformers[_key] = arguments[_key];
    }
    return transformers.reduce(combineFunctions);
};
;
}),
"[project]/node_modules/motion-utils/dist/es/time-conversion.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Converts seconds to milliseconds
 *
 * @param seconds - Time in seconds.
 * @return milliseconds - Converted time in milliseconds.
 */ /*#__NO_SIDE_EFFECTS__*/ __turbopack_context__.s([
    "millisecondsToSeconds",
    ()=>millisecondsToSeconds,
    "secondsToMilliseconds",
    ()=>secondsToMilliseconds
]);
const secondsToMilliseconds = (seconds)=>seconds * 1000;
/*#__NO_SIDE_EFFECTS__*/ const millisecondsToSeconds = (milliseconds)=>milliseconds / 1000;
;
}),
"[project]/node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "cubicBezier",
    ()=>cubicBezier
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$noop$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/noop.mjs [app-client] (ecmascript)");
;
/*
  Bezier function generator
  This has been modified from Gaëtan Renaudeau's BezierEasing
  https://github.com/gre/bezier-easing/blob/master/src/index.js
  https://github.com/gre/bezier-easing/blob/master/LICENSE
  
  I've removed the newtonRaphsonIterate algo because in benchmarking it
  wasn't noticeably faster than binarySubdivision, indeed removing it
  usually improved times, depending on the curve.
  I also removed the lookup table, as for the added bundle size and loop we're
  only cutting ~4 or so subdivision iterations. I bumped the max iterations up
  to 12 to compensate and this still tended to be faster for no perceivable
  loss in accuracy.
  Usage
    const easeOut = cubicBezier(.17,.67,.83,.67);
    const x = easeOut(0.5); // returns 0.627...
*/ // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
const calcBezier = (t, a1, a2)=>(((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) * t;
const subdivisionPrecision = 0.0000001;
const subdivisionMaxIterations = 12;
function binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {
    let currentX;
    let currentT;
    let i = 0;
    do {
        currentT = lowerBound + (upperBound - lowerBound) / 2.0;
        currentX = calcBezier(currentT, mX1, mX2) - x;
        if (currentX > 0.0) {
            upperBound = currentT;
        } else {
            lowerBound = currentT;
        }
    }while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations)
    return currentT;
}
function cubicBezier(mX1, mY1, mX2, mY2) {
    // If this is a linear gradient, return linear easing
    if (mX1 === mY1 && mX2 === mY2) return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$noop$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["noop"];
    const getTForX = (aX)=>binarySubdivide(aX, 0, 1, mX1, mX2);
    // If animation is at start/end, return t without easing
    return (t)=>t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);
}
;
}),
"[project]/node_modules/motion-utils/dist/es/easing/ease.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "easeIn",
    ()=>easeIn,
    "easeInOut",
    ()=>easeInOut,
    "easeOut",
    ()=>easeOut
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$cubic$2d$bezier$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs [app-client] (ecmascript)");
;
const easeIn = /*@__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$cubic$2d$bezier$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cubicBezier"])(0.42, 0, 1, 1);
const easeOut = /*@__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$cubic$2d$bezier$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cubicBezier"])(0, 0, 0.58, 1);
const easeInOut = /*@__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$cubic$2d$bezier$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cubicBezier"])(0.42, 0, 0.58, 1);
;
}),
"[project]/node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isEasingArray",
    ()=>isEasingArray
]);
const isEasingArray = (ease)=>{
    return Array.isArray(ease) && typeof ease[0] !== "number";
};
;
}),
"[project]/node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

// Accepts an easing function and returns a new one that outputs mirrored values for
// the second half of the animation. Turns easeIn into easeInOut.
__turbopack_context__.s([
    "mirrorEasing",
    ()=>mirrorEasing
]);
const mirrorEasing = (easing)=>(p)=>p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;
;
}),
"[project]/node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

// Accepts an easing function and returns a new one that outputs reversed values.
// Turns easeIn into easeOut.
__turbopack_context__.s([
    "reverseEasing",
    ()=>reverseEasing
]);
const reverseEasing = (easing)=>(p)=>1 - easing(1 - p);
;
}),
"[project]/node_modules/motion-utils/dist/es/easing/back.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "backIn",
    ()=>backIn,
    "backInOut",
    ()=>backInOut,
    "backOut",
    ()=>backOut
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$cubic$2d$bezier$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$modifiers$2f$mirror$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$modifiers$2f$reverse$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs [app-client] (ecmascript)");
;
;
;
const backOut = /*@__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$cubic$2d$bezier$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cubicBezier"])(0.33, 1.53, 0.69, 0.99);
const backIn = /*@__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$modifiers$2f$reverse$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reverseEasing"])(backOut);
const backInOut = /*@__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$modifiers$2f$mirror$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mirrorEasing"])(backIn);
;
}),
"[project]/node_modules/motion-utils/dist/es/easing/anticipate.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "anticipate",
    ()=>anticipate
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$back$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/easing/back.mjs [app-client] (ecmascript)");
;
const anticipate = (p)=>(p *= 2) < 1 ? 0.5 * (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$back$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["backIn"])(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));
;
}),
"[project]/node_modules/motion-utils/dist/es/easing/circ.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "circIn",
    ()=>circIn,
    "circInOut",
    ()=>circInOut,
    "circOut",
    ()=>circOut
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$modifiers$2f$mirror$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$modifiers$2f$reverse$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs [app-client] (ecmascript)");
;
;
const circIn = (p)=>1 - Math.sin(Math.acos(p));
const circOut = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$modifiers$2f$reverse$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reverseEasing"])(circIn);
const circInOut = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$modifiers$2f$mirror$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["mirrorEasing"])(circIn);
;
}),
"[project]/node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isBezierDefinition",
    ()=>isBezierDefinition
]);
const isBezierDefinition = (easing)=>Array.isArray(easing) && typeof easing[0] === "number";
;
}),
"[project]/node_modules/motion-utils/dist/es/easing/utils/map.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "easingDefinitionToFunction",
    ()=>easingDefinitionToFunction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/errors.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$noop$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/noop.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$anticipate$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/easing/anticipate.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$back$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/easing/back.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$circ$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/easing/circ.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$cubic$2d$bezier$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$ease$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/easing/ease.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$utils$2f$is$2d$bezier$2d$definition$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
const easingLookup = {
    linear: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$noop$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["noop"],
    easeIn: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$ease$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["easeIn"],
    easeInOut: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$ease$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["easeInOut"],
    easeOut: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$ease$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["easeOut"],
    circIn: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$circ$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["circIn"],
    circInOut: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$circ$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["circInOut"],
    circOut: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$circ$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["circOut"],
    backIn: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$back$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["backIn"],
    backInOut: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$back$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["backInOut"],
    backOut: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$back$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["backOut"],
    anticipate: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$anticipate$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["anticipate"]
};
const isValidEasing = (easing)=>{
    return typeof easing === "string";
};
const easingDefinitionToFunction = (definition)=>{
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$utils$2f$is$2d$bezier$2d$definition$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBezierDefinition"])(definition)) {
        // If cubic bezier definition, create bezier curve
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["invariant"])(definition.length === 4, "Cubic bezier arrays must contain four numerical values.", "cubic-bezier-length");
        const [x1, y1, x2, y2] = definition;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$easing$2f$cubic$2d$bezier$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cubicBezier"])(x1, y1, x2, y2);
    } else if (isValidEasing(definition)) {
        // Else lookup from table
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$motion$2d$utils$2f$dist$2f$es$2f$errors$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["invariant"])(easingLookup[definition] !== undefined, "Invalid easing type '".concat(definition, "'"), "invalid-easing-type");
        return easingLookup[definition];
    }
    return definition;
};
;
}),
"[project]/node_modules/motion-utils/dist/es/progress.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/*
  Progress within given range

  Given a lower limit and an upper limit, we return the progress
  (expressed as a number 0-1) represented by the given value, and
  limit that progress to within 0-1.

  @param [number]: Lower limit
  @param [number]: Upper limit
  @param [number]: Value to find progress within given range
  @return [number]: Progress of value within range as expressed 0-1
*/ /*#__NO_SIDE_EFFECTS__*/ __turbopack_context__.s([
    "progress",
    ()=>progress
]);
const progress = (from, to, value)=>{
    const toFromDifference = to - from;
    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
};
;
}),
"[project]/node_modules/motion-utils/dist/es/memo.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/*#__NO_SIDE_EFFECTS__*/ __turbopack_context__.s([
    "memo",
    ()=>memo
]);
function memo(callback) {
    let result;
    return ()=>{
        if (result === undefined) result = callback();
        return result;
    };
}
;
}),
"[project]/node_modules/motion-utils/dist/es/is-object.mjs [app-client] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isObject",
    ()=>isObject
]);
function isObject(value) {
    return typeof value === "object" && value !== null;
}
;
}),
]);

//# sourceMappingURL=node_modules_5e66670d._.js.map