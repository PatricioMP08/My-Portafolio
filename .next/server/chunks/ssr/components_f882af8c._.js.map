{"version":3,"sources":["turbopack:///[project]/node_modules/react-tsparticles/esm/Particles.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Utils/Utils.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Canvas.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Random.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Options/Classes/Options.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Particle.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Utils/Point.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Utils/Range.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Particles.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Retina.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Container.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Engine.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/init.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/index.js","turbopack:///[project]/node_modules/react-tsparticles/esm/Utils.js","turbopack:///[project]/node_modules/react-tsparticles/esm/index.js","turbopack:///[project]/node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSizeLimit.js","turbopack:///[project]/node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSize.js","turbopack:///[project]/node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js","turbopack:///[project]/node_modules/tsparticles-plugin-absorbers/esm/AbsorberInstance.js","turbopack:///[project]/node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js","turbopack:///[project]/node_modules/tsparticles-plugin-absorbers/esm/index.js","turbopack:///[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js","turbopack:///[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js","turbopack:///[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js","turbopack:///[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/Split.js","turbopack:///[project]/node_modules/tsparticles-updater-destroy/esm/Options/Classes/Destroy.js","turbopack:///[project]/node_modules/tsparticles-updater-destroy/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js","turbopack:///[project]/node_modules/tsparticles-updater-destroy/esm/index.js","turbopack:///[project]/node_modules/tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js","turbopack:///[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterLife.js","turbopack:///[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterRate.js","turbopack:///[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js","turbopack:///[project]/node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js","turbopack:///[project]/node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js","turbopack:///[project]/node_modules/tsparticles-plugin-emitters/esm/Emitters.js","turbopack:///[project]/node_modules/tsparticles-plugin-emitters/esm/ShapeManager.js","turbopack:///[project]/node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js","turbopack:///[project]/node_modules/tsparticles-plugin-emitters/esm/index.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-trail/esm/Options/Classes/Trail.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-trail/esm/TrailMaker.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-trail/esm/index.js","turbopack:///[project]/node_modules/tsparticles-updater-roll/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-updater-roll/esm/Options/Classes/RollLight.js","turbopack:///[project]/node_modules/tsparticles-updater-roll/esm/Options/Classes/Roll.js","turbopack:///[project]/node_modules/tsparticles-updater-roll/esm/RollUpdater.js","turbopack:///[project]/node_modules/tsparticles-updater-roll/esm/index.js","turbopack:///[project]/node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","turbopack:///[project]/node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","turbopack:///[project]/node_modules/tsparticles-particles.js/esm/index.js","turbopack:///[project]/node_modules/tsparticles-move-base/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-move-base/esm/BaseMover.js","turbopack:///[project]/node_modules/tsparticles-move-base/esm/index.js","turbopack:///[project]/node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","turbopack:///[project]/node_modules/tsparticles-shape-circle/esm/index.js","turbopack:///[project]/node_modules/tsparticles-updater-color/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-updater-color/esm/ColorUpdater.js","turbopack:///[project]/node_modules/tsparticles-updater-color/esm/index.js","turbopack:///[project]/node_modules/tsparticles-updater-opacity/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","turbopack:///[project]/node_modules/tsparticles-updater-opacity/esm/index.js","turbopack:///[project]/node_modules/tsparticles-updater-out-modes/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","turbopack:///[project]/node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","turbopack:///[project]/node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","turbopack:///[project]/node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","turbopack:///[project]/node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","turbopack:///[project]/node_modules/tsparticles-updater-out-modes/esm/index.js","turbopack:///[project]/node_modules/tsparticles-updater-size/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-updater-size/esm/SizeUpdater.js","turbopack:///[project]/node_modules/tsparticles-updater-size/esm/index.js","turbopack:///[project]/node_modules/tsparticles-basic/esm/index.js","turbopack:///[project]/node_modules/tsparticles-plugin-easing-quad/esm/index.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-attract/esm/index.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-bounce/esm/index.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-bubble/esm/index.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-connect/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-connect/esm/Connector.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-connect/esm/index.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-grab/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-grab/esm/index.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-pause/esm/index.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-push/esm/Pusher.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-push/esm/index.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-remove/esm/Remover.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-remove/esm/index.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-repulse/esm/index.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-slow/esm/Slower.js","turbopack:///[project]/node_modules/tsparticles-interaction-external-slow/esm/index.js","turbopack:///[project]/node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","turbopack:///[project]/node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","turbopack:///[project]/node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","turbopack:///[project]/node_modules/tsparticles-shape-image/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-shape-image/esm/ImageDrawer.js","turbopack:///[project]/node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","turbopack:///[project]/node_modules/tsparticles-shape-image/esm/ImagePreloader.js","turbopack:///[project]/node_modules/tsparticles-shape-image/esm/index.js","turbopack:///[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","turbopack:///[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","turbopack:///[project]/node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","turbopack:///[project]/node_modules/tsparticles-updater-life/esm/LifeUpdater.js","turbopack:///[project]/node_modules/tsparticles-updater-life/esm/index.js","turbopack:///[project]/node_modules/tsparticles-shape-line/esm/LineDrawer.js","turbopack:///[project]/node_modules/tsparticles-shape-line/esm/index.js","turbopack:///[project]/node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","turbopack:///[project]/node_modules/tsparticles-move-parallax/esm/index.js","turbopack:///[project]/node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-attract/esm/index.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-collisions/esm/index.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-links/esm/Linker.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-links/esm/interaction.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-links/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-links/esm/plugin.js","turbopack:///[project]/node_modules/tsparticles-interaction-particles-links/esm/index.js","turbopack:///[project]/node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","turbopack:///[project]/node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","turbopack:///[project]/node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","turbopack:///[project]/node_modules/tsparticles-shape-polygon/esm/index.js","turbopack:///[project]/node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","turbopack:///[project]/node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","turbopack:///[project]/node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","turbopack:///[project]/node_modules/tsparticles-updater-rotate/esm/index.js","turbopack:///[project]/node_modules/tsparticles-shape-square/esm/SquareDrawer.js","turbopack:///[project]/node_modules/tsparticles-shape-square/esm/index.js","turbopack:///[project]/node_modules/tsparticles-shape-star/esm/StarDrawer.js","turbopack:///[project]/node_modules/tsparticles-shape-star/esm/index.js","turbopack:///[project]/node_modules/tsparticles-updater-stroke-color/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","turbopack:///[project]/node_modules/tsparticles-updater-stroke-color/esm/index.js","turbopack:///[project]/node_modules/tsparticles-shape-text/esm/TextDrawer.js","turbopack:///[project]/node_modules/tsparticles-shape-text/esm/index.js","turbopack:///[project]/node_modules/tsparticles-slim/esm/index.js","turbopack:///[project]/node_modules/tsparticles-updater-tilt/esm/Options/Classes/TiltAnimation.js","turbopack:///[project]/node_modules/tsparticles-updater-tilt/esm/Options/Classes/Tilt.js","turbopack:///[project]/node_modules/tsparticles-updater-tilt/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js","turbopack:///[project]/node_modules/tsparticles-updater-tilt/esm/index.js","turbopack:///[project]/node_modules/tsparticles-updater-twinkle/esm/Options/Classes/TwinkleValues.js","turbopack:///[project]/node_modules/tsparticles-updater-twinkle/esm/Options/Classes/Twinkle.js","turbopack:///[project]/node_modules/tsparticles-updater-twinkle/esm/TwinkleUpdater.js","turbopack:///[project]/node_modules/tsparticles-updater-twinkle/esm/index.js","turbopack:///[project]/node_modules/tsparticles-updater-wobble/esm/Options/Classes/WobbleSpeed.js","turbopack:///[project]/node_modules/tsparticles-updater-wobble/esm/Options/Classes/Wobble.js","turbopack:///[project]/node_modules/tsparticles-updater-wobble/esm/Utils.js","turbopack:///[project]/node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js","turbopack:///[project]/node_modules/tsparticles-updater-wobble/esm/index.js","turbopack:///[project]/node_modules/tsparticles/esm/index.js","turbopack:///[project]/components/AnimatedBackground.tsx","turbopack:///[project]/node_modules/next-themes/dist/index.mjs","turbopack:///[project]/components/ThemeProviderClient.tsx","turbopack:///[project]/components/BubbleNav.tsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ValueWithRandom, isNumber } from \"tsparticles-engine\";\nimport { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (isNumber(data.limit)) {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nimport { AbsorberSize } from \"./AbsorberSize\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        this.absorbers = absorbers;\n        this.container = container;\n        this._calcPosition = () => {\n            const exactPosition = calcPositionOrRandomFromSizeRanged({\n                size: this.container.canvas.size,\n                position: this.options.position,\n            });\n            return Vector.create(exactPosition.x, exactPosition.y);\n        };\n        this._updateParticlePosition = (particle, v) => {\n            if (particle.destroyed) {\n                return;\n            }\n            const container = this.container, canvasSize = container.canvas.size;\n            if (particle.needsNewPosition) {\n                const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n                particle.position.setTo(newPosition);\n                particle.velocity.setTo(particle.initialVelocity);\n                particle.absorberOrbit = undefined;\n                particle.needsNewPosition = false;\n            }\n            if (this.options.orbits) {\n                if (particle.absorberOrbit === undefined) {\n                    particle.absorberOrbit = Vector.create(0, 0);\n                    particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                    particle.absorberOrbit.angle = getRandom() * Math.PI * 2;\n                }\n                if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                    const minSize = Math.min(canvasSize.width, canvasSize.height);\n                    particle.absorberOrbit.length = minSize * (1 + (getRandom() * 0.2 - 0.1));\n                }\n                if (particle.absorberOrbitDirection === undefined) {\n                    particle.absorberOrbitDirection =\n                        particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n                }\n                const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n                particle.velocity.setTo(Vector.origin);\n                const updateFunc = {\n                    x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                    y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n                };\n                particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n                particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n                particle.absorberOrbit.length -= v.length;\n                particle.absorberOrbit.angle +=\n                    (((particle.retina.moveSpeed ?? 0) * container.retina.pixelRatio) / 100) *\n                        container.retina.reduceFactor;\n            }\n            else {\n                const addV = Vector.origin;\n                addV.length = v.length;\n                addV.angle = v.angle;\n                particle.velocity.addTo(addV);\n            }\n        };\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = rangeColorToRgb(this.options.color) ?? {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = this.initialPosition?.copy() ?? this._calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this._updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this._updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this._updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n    }\n}\n","import { executeOnSingleOrMultiple, isNumber, itemFromSingleOrMultiple, } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions ?? itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple(source?.interactivity?.modes?.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (isArray(absorbers)) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (options.interactivity?.events?.onClick?.mode &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine, refresh = true) {\n    await engine.addPlugin(new AbsorbersPlugin(), refresh);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n","import { OptionsColor, deepExtend, executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { SplitFactor } from \"./SplitFactor\";\nimport { SplitRate } from \"./SplitRate\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n        if (data.colorOffset) {\n            this.colorOffset = this.colorOffset ?? {};\n            if (data.colorOffset.h !== undefined) {\n                this.colorOffset.h = data.colorOffset.h;\n            }\n            if (data.colorOffset.s !== undefined) {\n                this.colorOffset.s = data.colorOffset.s;\n            }\n            if (data.colorOffset.l !== undefined) {\n                this.colorOffset.l = data.colorOffset.l;\n            }\n        }\n    }\n}\n","import { DestroyBounds } from \"./DestroyBounds\";\nimport { Split } from \"./Split\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = \"none\";\n        this.split = new Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n","import { getRangeValue, getValue, isNumber, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nfunction addSplitParticle(engine, container, parent, splitParticlesOptions) {\n    const destroyOptions = parent.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split, options = loadParticlesOptions(engine, container, parent.options), factor = getValue(splitOptions.factor), parentColor = parent.getFillColor();\n    if (splitOptions.color) {\n        options.color.load(splitOptions.color);\n    }\n    else if (splitOptions.colorOffset && parentColor) {\n        options.color.load({\n            value: {\n                hsl: {\n                    h: parentColor.h + getRangeValue(splitOptions.colorOffset.h ?? 0),\n                    s: parentColor.s + getRangeValue(splitOptions.colorOffset.s ?? 0),\n                    l: parentColor.l + getRangeValue(splitOptions.colorOffset.l ?? 0),\n                },\n            },\n        });\n    }\n    else {\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n    }\n    options.move.load({\n        center: {\n            x: parent.position.x,\n            y: parent.position.y,\n            mode: \"precise\",\n        },\n    });\n    if (isNumber(options.size.value)) {\n        options.size.value /= factor;\n    }\n    else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n    }\n    options.load(splitParticlesOptions);\n    const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n        x: parent.position.x + randomInRange(offset),\n        y: parent.position.y + randomInRange(offset),\n    };\n    return container.particles.addParticle(position, options, parent.group, (particle) => {\n        if (particle.size.value < 0.5) {\n            return false;\n        }\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = (parent.splitCount ?? 0) + 1;\n        particle.unbreakable = true;\n        setTimeout(() => {\n            particle.unbreakable = false;\n        }, 500);\n        return true;\n    });\n}\nexport function split(engine, container, particle) {\n    const destroyOptions = particle.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split;\n    if (splitOptions.count >= 0 && (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n        return;\n    }\n    const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n    for (let i = 0; i < rate; i++) {\n        addSplitParticle(engine, container, particle, particlesSplitOptions);\n    }\n}\n","import { getRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nimport { split } from \"./Utils\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBoundsOptions = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        const { bottom, left, right, top } = destroyBoundsOptions, { destroyBounds } = particle, canvasSize = container.canvas.size;\n        if (bottom) {\n            destroyBounds.bottom = (getRangeValue(bottom) * canvasSize.height) / 100;\n        }\n        if (left) {\n            destroyBounds.left = (getRangeValue(left) * canvasSize.width) / 100;\n        }\n        if (right) {\n            destroyBounds.right = (getRangeValue(right) * canvasSize.width) / 100;\n        }\n        if (top) {\n            destroyBounds.top = (getRangeValue(top) * canvasSize.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source?.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            split(this.engine, this.container, particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n}\n","import { DestroyUpdater } from \"./DestroyUpdater\";\nexport async function loadDestroyUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"destroy\", (container) => new DestroyUpdater(engine, container), refresh);\n}\n","import { getRandom } from \"tsparticles-engine\";\nexport class CircleShape {\n    randomPosition(position, size, fill) {\n        const generateTheta = (x, y) => {\n            const u = getRandom() / 4.0, theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u)), v = getRandom();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [size.width / 2, size.height / 2], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            x: position.x + randomRadius * Math.cos(randomTheta),\n            y: position.y + randomRadius * Math.sin(randomTheta),\n        };\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n","export class EmitterSize {\n    constructor() {\n        this.mode = \"percent\";\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, setRangeValue, } from \"tsparticles-engine\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = \"square\";\n        this.startCount = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (!this.size) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        if (data.shape !== undefined) {\n            this.shape = data.shape;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, getSize, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        this.emitters = emitters;\n        this.container = container;\n        this._calcPosition = () => {\n            return calcPositionOrRandomFromSizeRanged({\n                size: this.container.canvas.size,\n                position: this.options.position,\n            });\n        };\n        this._destroy = () => {\n            this.emitters.removeEmitter(this);\n            this._engine.dispatchEvent(\"emitterDestroyed\", {\n                container: this.container,\n                data: {\n                    emitter: this,\n                },\n            });\n        };\n        this._emit = () => {\n            if (this._paused) {\n                return;\n            }\n            const quantity = getRangeValue(this.options.rate.quantity);\n            this._emitParticles(quantity);\n        };\n        this._emitParticles = (quantity) => {\n            const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n            for (let i = 0; i < quantity; i++) {\n                const particlesOptions = deepExtend({}, singleParticlesOptions);\n                if (this.spawnColor) {\n                    const hslAnimation = this.options.spawnColor?.animation;\n                    if (hslAnimation) {\n                        this.spawnColor.h = this._setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                        this.spawnColor.s = this._setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                        this.spawnColor.l = this._setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                    }\n                    if (!particlesOptions.color) {\n                        particlesOptions.color = {\n                            value: this.spawnColor,\n                        };\n                    }\n                    else {\n                        particlesOptions.color.value = this.spawnColor;\n                    }\n                }\n                if (!position) {\n                    return;\n                }\n                const pPosition = this._shape?.randomPosition(position, size, this.fill) ?? position;\n                this.container.particles.addParticle(pPosition, particlesOptions);\n            }\n        };\n        this._prepareToDie = () => {\n            if (this._paused) {\n                return;\n            }\n            const duration = this.options.life?.duration !== undefined ? getRangeValue(this.options.life.duration) : undefined;\n            if (this.container.retina.reduceFactor &&\n                (this._lifeCount > 0 || this._immortal) &&\n                duration !== undefined &&\n                duration > 0) {\n                this._duration = duration * 1000;\n            }\n        };\n        this._setColorAnimation = (animation, initValue, maxValue) => {\n            const container = this.container;\n            if (!animation.enable) {\n                return initValue;\n            }\n            const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue(animation.speed ?? 0);\n            return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n        };\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (getRangeValue(this.options.life.delay ?? 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = this._initialPosition ?? this._calcPosition();\n        this.name = this.options.name;\n        this._shape = this._engine.emitterShapeManager?.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions ??= {};\n        particlesOptions.move ??= {};\n        particlesOptions.move.direction ??= this.options.direction;\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            this.options.size ??\n                (() => {\n                    const size = new EmitterSize();\n                    size.load({\n                        height: 0,\n                        mode: \"percent\",\n                        width: 0,\n                    });\n                    return size;\n                })();\n        this._lifeCount = this.options.life.count ?? -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return getSize(this.size, container.canvas.size);\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= (this._spawnDelay ?? 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this._prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n    }\n    update(delta) {\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = this._spawnDelay ?? 0;\n            this._currentEmitDelay = this._emitDelay ?? 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this._emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this._calcPosition();\n                    this._spawnDelay =\n                        (getRangeValue(this.options.life.delay ?? 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this._destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this._emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n}\n","import { arrayRandomIndex, executeOnSingleOrMultiple, isArray, isNumber, itemFromArray, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode !== \"emitter\") {\n            return;\n        }\n        let emittersModeOptions;\n        if (modeEmitters && isArray(modeEmitters.value)) {\n            if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                emittersModeOptions = [];\n                const usedIndexes = [];\n                for (let i = 0; i < modeEmitters.random.count; i++) {\n                    const idx = arrayRandomIndex(modeEmitters.value);\n                    if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                        i--;\n                        continue;\n                    }\n                    usedIndexes.push(idx);\n                    emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters.value;\n            }\n        }\n        else {\n            emittersModeOptions = modeEmitters?.value;\n        }\n        const emittersOptions = emittersModeOptions ?? emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n        executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n            this.addEmitter(emitter, ePosition);\n        });\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (!this.emitters) {\n            return;\n        }\n        if (isArray(this.emitters)) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n","const shapes = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(getRandom() * 4), v = (getRandom() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, (emitter) => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = source?.interactivity?.modes?.emitters;\n        if (interactivityEmitters) {\n            if (isArray(interactivityEmitters)) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (isArray(emitterMode.value)) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? 1,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? 1,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((isArray(emitters) && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!options.interactivity?.events?.onClick?.mode &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine, refresh = true) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            engine.emitterShapeManager?.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","import { deepExtend } from \"tsparticles-engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Trail } from \"./Options/Classes/Trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(delta) {\n        const container = this.container, { interactivity } = container;\n        if (!container.retina.reduceFactor) {\n            return;\n        }\n        const options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        const canEmit = !(trailOptions.pauseOnStop &&\n            (interactivity.mouse.position === this._lastPosition ||\n                (interactivity.mouse.position?.x === this._lastPosition?.x &&\n                    interactivity.mouse.position?.y === this._lastPosition?.y)));\n        const mousePos = container.interactivity.mouse.position;\n        if (mousePos) {\n            this._lastPosition = { ...mousePos };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source?.trail);\n        }\n    }\n    reset() {\n    }\n}\n","import { TrailMaker } from \"./TrailMaker\";\nexport async function loadExternalTrailInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalTrail\", (container) => new TrailMaker(container), refresh);\n}\nexport * from \"./Options/Classes/Trail\";\nexport * from \"./Options/Interfaces/ITrail\";\n","import { getRandom, getRangeValue, rangeColorToHsl } from \"tsparticles-engine\";\nexport function initParticle(particle) {\n    const rollOpt = particle.options.roll;\n    if (!rollOpt?.enable) {\n        particle.roll = {\n            enable: false,\n            horizontal: false,\n            vertical: false,\n            angle: 0,\n            speed: 0,\n        };\n        return;\n    }\n    particle.roll = {\n        enable: rollOpt.enable,\n        horizontal: rollOpt.mode === \"horizontal\" || rollOpt.mode === \"both\",\n        vertical: rollOpt.mode === \"vertical\" || rollOpt.mode === \"both\",\n        angle: getRandom() * Math.PI * 2,\n        speed: getRangeValue(rollOpt.speed) / 360,\n    };\n    if (rollOpt.backColor) {\n        particle.backColor = rangeColorToHsl(rollOpt.backColor);\n    }\n    else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n        const alterType = getRandom() >= 0.5 ? \"darken\" : \"enlighten\";\n        particle.roll.alter = {\n            type: alterType,\n            value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n        };\n    }\n    else if (rollOpt.darken.enable) {\n        particle.roll.alter = {\n            type: \"darken\",\n            value: getRangeValue(rollOpt.darken.value),\n        };\n    }\n    else if (rollOpt.enlighten.enable) {\n        particle.roll.alter = {\n            type: \"enlighten\",\n            value: getRangeValue(rollOpt.enlighten.value),\n        };\n    }\n}\nexport function updateRoll(particle, delta) {\n    const roll = particle.options.roll, data = particle.roll;\n    if (!data || !roll?.enable) {\n        return;\n    }\n    const speed = data.speed * delta.factor, max = 2 * Math.PI;\n    data.angle += speed;\n    if (data.angle > max) {\n        data.angle -= max;\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nimport { RollLight } from \"./RollLight\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = \"vertical\";\n        this.speed = 25;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n","import { initParticle, updateRoll } from \"./Utils\";\nimport { Roll } from \"./Options/Classes/Roll\";\nexport class RollUpdater {\n    getTransformValues(particle) {\n        const roll = particle.roll?.enable && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        initParticle(particle);\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!roll?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source?.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n","import { RollUpdater } from \"./RollUpdater\";\nexport async function loadRollUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"roll\", () => new RollUpdater(), refresh);\n}\n","import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nimport { TiltAnimation } from \"./TiltAnimation\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = \"clockwise\";\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export function updateTilt(particle, delta) {\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = (particle.tilt.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = particle.tilt.decay ?? 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case \"increasing\":\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nimport { updateTilt } from \"./Utils\";\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        const tilt = particle.tilt?.enable && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: getRandom() >= 0.5 ? 1 : -1,\n            cosDirection: getRandom() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.tilt.status = \"increasing\";\n                break;\n        }\n        const tiltAnimation = particle.options.tilt?.animation;\n        if (tiltAnimation?.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tiltAnimation = particle.options.tilt?.animation;\n        return !particle.destroyed && !particle.spawning && !!tiltAnimation?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source?.tilt);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n","import { TiltUpdater } from \"./TiltUpdater\";\nexport async function loadTiltUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"tilt\", (container) => new TiltUpdater(container), refresh);\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { TwinkleValues } from \"./TwinkleValues\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n","import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle\";\nexport class TwinkleUpdater {\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source?.twinkle);\n        }\n    }\n    update() {\n    }\n}\n","import { TwinkleUpdater } from \"./TwinkleUpdater\";\nexport async function loadTwinkleUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"twinkle\", () => new TwinkleUpdater(), refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n","import { isNumber, setRangeValue, } from \"tsparticles-engine\";\nimport { WobbleSpeed } from \"./WobbleSpeed\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (isNumber(data.speed)) {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n","export function updateWobble(particle, delta) {\n    const { wobble: wobbleOptions } = particle.options, { wobble } = particle;\n    if (!wobbleOptions?.enable || !wobble) {\n        return;\n    }\n    const angleSpeed = wobble.angleSpeed * delta.factor, moveSpeed = wobble.moveSpeed * delta.factor, distance = (moveSpeed * ((particle.retina.wobbleDistance ?? 0) * delta.factor)) / (1000 / 60), max = 2 * Math.PI, { position } = particle;\n    wobble.angle += angleSpeed;\n    if (wobble.angle > max) {\n        wobble.angle -= max;\n    }\n    position.x += distance * Math.cos(wobble.angle);\n    position.y += distance * Math.abs(Math.sin(wobble.angle));\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nimport { updateWobble } from \"./Utils\";\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt?.enable) {\n            particle.wobble = {\n                angle: getRandom() * Math.PI * 2,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue(wobbleOpt?.distance ?? 0) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning && !!particle.options.wobble?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source?.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n","import { WobbleUpdater } from \"./WobbleUpdater\";\nexport async function loadWobbleUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"wobble\", (container) => new WobbleUpdater(container), refresh);\n}\n","import { loadAbsorbersPlugin } from \"tsparticles-plugin-absorbers\";\nimport { loadDestroyUpdater } from \"tsparticles-updater-destroy\";\nimport { loadEmittersPlugin } from \"tsparticles-plugin-emitters\";\nimport { loadExternalTrailInteraction } from \"tsparticles-interaction-external-trail\";\nimport { loadRollUpdater } from \"tsparticles-updater-roll\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { loadTiltUpdater } from \"tsparticles-updater-tilt\";\nimport { loadTwinkleUpdater } from \"tsparticles-updater-twinkle\";\nimport { loadWobbleUpdater } from \"tsparticles-updater-wobble\";\nexport async function loadFull(engine, refresh = true) {\n    await loadDestroyUpdater(engine, false);\n    await loadRollUpdater(engine, false);\n    await loadTiltUpdater(engine, false);\n    await loadTwinkleUpdater(engine, false);\n    await loadWobbleUpdater(engine, false);\n    await loadExternalTrailInteraction(engine, false);\n    await loadAbsorbersPlugin(engine, false);\n    await loadEmittersPlugin(engine, false);\n    await loadSlim(engine, refresh);\n}\n","\"use client\";\r\n\r\nimport Particles from \"react-tsparticles\";\r\n\r\nimport { loadFull } from \"tsparticles\";\r\n\r\nimport type { Engine } from \"tsparticles-engine\";\r\n\r\n\r\n\r\nexport default function BackgroundParticles() {\r\n\r\n  const init = async (engine: Engine) => {\r\n\r\n    await loadFull(engine);\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n\r\n    <Particles\r\n\r\n      id=\"tsparticles\"\r\n\r\n      init={init}\r\n\r\n      options={{\r\n\r\n        background: { color: \"transparent\" },\r\n\r\n        fpsLimit: 60,\r\n\r\n        interactivity: {\r\n\r\n          events: { onHover: { enable: true, mode: \"repulse\" }, onClick: { enable: false } },\r\n\r\n          modes: { repulse: { distance: 120, duration: 0.3 } },\r\n\r\n        },\r\n\r\n        particles: {\r\n\r\n          number: { value: 45, density: { enable: true, area: 800 } },\r\n\r\n          color: { value: [\"#60a5fa\", \"#8b5cf6\", \"#ec4899\"] },\r\n\r\n          links: { enable: true, color: \"#8b5cf6\", distance: 160, opacity: 0.12 },\r\n\r\n          move: { enable: true, speed: 0.6 },\r\n\r\n          size: { value: { min: 1, max: 4 } },\r\n\r\n          opacity: { value: 0.6 },\r\n\r\n        },\r\n\r\n        detectRetina: true,\r\n\r\n      }}\r\n\r\n      className=\"absolute inset-0 -z-10\"\r\n\r\n    />\r\n\r\n  );\r\n\r\n}","\"use client\";import*as t from\"react\";var M=(e,i,s,u,m,a,l,h)=>{let d=document.documentElement,w=[\"light\",\"dark\"];function p(n){(Array.isArray(e)?e:[e]).forEach(y=>{let k=y===\"class\",S=k&&a?m.map(f=>a[f]||f):m;k?(d.classList.remove(...S),d.classList.add(a&&a[n]?a[n]:n)):d.setAttribute(y,n)}),R(n)}function R(n){h&&w.includes(n)&&(d.style.colorScheme=n)}function c(){return window.matchMedia(\"(prefers-color-scheme: dark)\").matches?\"dark\":\"light\"}if(u)p(u);else try{let n=localStorage.getItem(i)||s,y=l&&n===\"system\"?c():n;p(y)}catch(n){}};var b=[\"light\",\"dark\"],I=\"(prefers-color-scheme: dark)\",O=typeof window==\"undefined\",x=t.createContext(void 0),U={setTheme:e=>{},themes:[]},z=()=>{var e;return(e=t.useContext(x))!=null?e:U},J=e=>t.useContext(x)?t.createElement(t.Fragment,null,e.children):t.createElement(V,{...e}),N=[\"light\",\"dark\"],V=({forcedTheme:e,disableTransitionOnChange:i=!1,enableSystem:s=!0,enableColorScheme:u=!0,storageKey:m=\"theme\",themes:a=N,defaultTheme:l=s?\"system\":\"light\",attribute:h=\"data-theme\",value:d,children:w,nonce:p,scriptProps:R})=>{let[c,n]=t.useState(()=>H(m,l)),[T,y]=t.useState(()=>c===\"system\"?E():c),k=d?Object.values(d):a,S=t.useCallback(o=>{let r=o;if(!r)return;o===\"system\"&&s&&(r=E());let v=d?d[r]:r,C=i?W(p):null,P=document.documentElement,L=g=>{g===\"class\"?(P.classList.remove(...k),v&&P.classList.add(v)):g.startsWith(\"data-\")&&(v?P.setAttribute(g,v):P.removeAttribute(g))};if(Array.isArray(h)?h.forEach(L):L(h),u){let g=b.includes(l)?l:null,D=b.includes(r)?r:g;P.style.colorScheme=D}C==null||C()},[p]),f=t.useCallback(o=>{let r=typeof o==\"function\"?o(c):o;n(r);try{localStorage.setItem(m,r)}catch(v){}},[c]),A=t.useCallback(o=>{let r=E(o);y(r),c===\"system\"&&s&&!e&&S(\"system\")},[c,e]);t.useEffect(()=>{let o=window.matchMedia(I);return o.addListener(A),A(o),()=>o.removeListener(A)},[A]),t.useEffect(()=>{let o=r=>{r.key===m&&(r.newValue?n(r.newValue):f(l))};return window.addEventListener(\"storage\",o),()=>window.removeEventListener(\"storage\",o)},[f]),t.useEffect(()=>{S(e!=null?e:c)},[e,c]);let Q=t.useMemo(()=>({theme:c,setTheme:f,forcedTheme:e,resolvedTheme:c===\"system\"?T:c,themes:s?[...a,\"system\"]:a,systemTheme:s?T:void 0}),[c,f,e,T,s,a]);return t.createElement(x.Provider,{value:Q},t.createElement(_,{forcedTheme:e,storageKey:m,attribute:h,enableSystem:s,enableColorScheme:u,defaultTheme:l,value:d,themes:a,nonce:p,scriptProps:R}),w)},_=t.memo(({forcedTheme:e,storageKey:i,attribute:s,enableSystem:u,enableColorScheme:m,defaultTheme:a,value:l,themes:h,nonce:d,scriptProps:w})=>{let p=JSON.stringify([s,i,a,e,h,l,u,m]).slice(1,-1);return t.createElement(\"script\",{...w,suppressHydrationWarning:!0,nonce:typeof window==\"undefined\"?d:\"\",dangerouslySetInnerHTML:{__html:`(${M.toString()})(${p})`}})}),H=(e,i)=>{if(O)return;let s;try{s=localStorage.getItem(e)||void 0}catch(u){}return s||i},W=e=>{let i=document.createElement(\"style\");return e&&i.setAttribute(\"nonce\",e),i.appendChild(document.createTextNode(\"*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\")),document.head.appendChild(i),()=>{window.getComputedStyle(document.body),setTimeout(()=>{document.head.removeChild(i)},1)}},E=e=>(e||(e=window.matchMedia(I)),e.matches?\"dark\":\"light\");export{J as ThemeProvider,z as useTheme};\n","\"use client\";\r\nimport { ThemeProvider } from \"next-themes\";\r\nimport React from \"react\";\r\n\r\nexport default function ThemeProviderClient({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <ThemeProvider attribute=\"class\" defaultTheme=\"system\" enableSystem>\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { FaHome, FaLaptopCode, FaServer, FaEnvelope } from \"react-icons/fa\";\r\n\r\nconst items = [\r\n  { id: \"inicio\", icon: <FaHome />, label: \"Inicio\" },\r\n  { id: \"tecnologias\", icon: <FaLaptopCode />, label: \"Tecnologías\" },\r\n  { id: \"proyectos\", icon: <FaServer />, label: \"Proyectos\" },\r\n  { id: \"contacto\", icon: <FaEnvelope />, label: \"Contacto\" },\r\n];\r\n\r\nexport default function BubbleNav() {\r\n  const [active, setActive] = useState(\"inicio\");\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      const mid = window.scrollY + window.innerHeight / 2;\r\n      let cur = \"inicio\";\r\n      items.forEach((it) => {\r\n        const el = document.getElementById(it.id);\r\n        if (!el) return;\r\n        if (mid >= el.offsetTop) cur = it.id;\r\n      });\r\n      setActive(cur);\r\n    };\r\n    onScroll();\r\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, []);\r\n\r\n  const scrollTo = (id: string) => {\r\n    const el = document.getElementById(id);\r\n    if (!el) return;\r\n    el.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n    setActive(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed left-6 top-1/2 -translate-y-1/2 z-50 hidden md:flex flex-col gap-4\">\r\n      {items.map((it) => {\r\n        const isActive = active === it.id;\r\n        return (\r\n          <div key={it.id} className=\"relative\">\r\n            <motion.button\r\n              onClick={() => scrollTo(it.id)}\r\n              whileHover={{ scale: 1.08 }}\r\n              whileTap={{ scale: 0.95 }}\r\n              className={`flex items-center gap-3 px-4 py-2 rounded-full transition-all duration-300 ${\r\n                isActive\r\n                  ? \"bg-gradient-to-tr from-blue-500 to-purple-600 text-white shadow-2xl\"\r\n                  : \"bg-white/80 dark:bg-gray-800/70 text-gray-700 dark:text-gray-200 backdrop-blur-md\"\r\n              }`}\r\n              style={{ minWidth: 64 }}\r\n            >\r\n              <motion.div animate={{ rotate: isActive ? 12 : 0 }}>{it.icon}</motion.div>\r\n              <AnimatePresence>\r\n                {isActive && (\r\n                  <motion.span\r\n                    initial={{ opacity: 0, x: -6 }}\r\n                    animate={{ opacity: 1, x: 0 }}\r\n                    exit={{ opacity: 0, x: -6 }}\r\n                    className=\"text-sm font-medium\"\r\n                  >\r\n                    {it.label}\r\n                  </motion.span>\r\n                )}\r\n              </AnimatePresence>\r\n            </motion.button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247]}